/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("@decentology/hyperverse"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "@decentology/hyperverse"], factory);
	else if(typeof exports === 'object')
		exports["@decentology/hyperverse-flow-tribes"] = factory(require("react"), require("@decentology/hyperverse"));
	else
		root["@decentology/hyperverse-flow-tribes"] = factory(root["react"], root["@decentology/hyperverse"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE__decentology_hyperverse__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcz9hMzRhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NodeHttpTransport = void 0;\nvar http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\");\nvar https = __webpack_require__(/*! https */ \"./node_modules/https-browserify/index.js\");\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\");\nvar grpc_web_1 = __webpack_require__(/*! @improbable-eng/grpc-web */ \"./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js\");\nfunction NodeHttpTransport() {\n    return function (opts) {\n        return new NodeHttp(opts);\n    };\n}\nexports.NodeHttpTransport = NodeHttpTransport;\nvar NodeHttp = (function () {\n    function NodeHttp(transportOptions) {\n        this.options = transportOptions;\n    }\n    NodeHttp.prototype.sendMessage = function (msgBytes) {\n        if (!this.options.methodDefinition.requestStream && !this.options.methodDefinition.responseStream) {\n            this.request.setHeader(\"Content-Length\", msgBytes.byteLength);\n        }\n        this.request.write(toBuffer(msgBytes));\n        this.request.end();\n    };\n    NodeHttp.prototype.finishSend = function () {\n    };\n    NodeHttp.prototype.responseCallback = function (response) {\n        var _this = this;\n        this.options.debug && console.log(\"NodeHttp.response\", response.statusCode);\n        var headers = filterHeadersForUndefined(response.headers);\n        this.options.onHeaders(new grpc_web_1.grpc.Metadata(headers), response.statusCode);\n        response.on(\"data\", function (chunk) {\n            _this.options.debug && console.log(\"NodeHttp.data\", chunk);\n            _this.options.onChunk(toArrayBuffer(chunk));\n        });\n        response.on(\"end\", function () {\n            _this.options.debug && console.log(\"NodeHttp.end\");\n            _this.options.onEnd();\n        });\n    };\n    ;\n    NodeHttp.prototype.start = function (metadata) {\n        var _this = this;\n        var headers = {};\n        metadata.forEach(function (key, values) {\n            headers[key] = values.join(\", \");\n        });\n        var parsedUrl = url.parse(this.options.url);\n        var httpOptions = {\n            host: parsedUrl.hostname,\n            port: parsedUrl.port ? parseInt(parsedUrl.port) : undefined,\n            path: parsedUrl.path,\n            headers: headers,\n            method: \"POST\"\n        };\n        if (parsedUrl.protocol === \"https:\") {\n            this.request = https.request(httpOptions, this.responseCallback.bind(this));\n        }\n        else {\n            this.request = http.request(httpOptions, this.responseCallback.bind(this));\n        }\n        this.request.on(\"error\", function (err) {\n            _this.options.debug && console.log(\"NodeHttp.error\", err);\n            _this.options.onEnd(err);\n        });\n    };\n    NodeHttp.prototype.cancel = function () {\n        this.options.debug && console.log(\"NodeHttp.abort\");\n        this.request.abort();\n    };\n    return NodeHttp;\n}());\nfunction filterHeadersForUndefined(headers) {\n    var filteredHeaders = {};\n    for (var key in headers) {\n        var value = headers[key];\n        if (headers.hasOwnProperty(key)) {\n            if (value !== undefined) {\n                filteredHeaders[key] = value;\n            }\n        }\n    }\n    return filteredHeaders;\n}\nfunction toArrayBuffer(buf) {\n    var view = new Uint8Array(buf.length);\n    for (var i = 0; i < buf.length; i++) {\n        view[i] = buf[i];\n    }\n    return view;\n}\nfunction toBuffer(ab) {\n    var buf = Buffer.alloc(ab.byteLength);\n    for (var i = 0; i < buf.length; i++) {\n        buf[i] = ab[i];\n    }\n    return buf;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGltcHJvYmFibGUtZW5nL2dycGMtd2ViLW5vZGUtaHR0cC10cmFuc3BvcnQvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AaW1wcm9iYWJsZS1lbmcvZ3JwYy13ZWItbm9kZS1odHRwLXRyYW5zcG9ydC9saWIvaW5kZXguanM/OTJkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTm9kZUh0dHBUcmFuc3BvcnQgPSB2b2lkIDA7XG52YXIgaHR0cCA9IHJlcXVpcmUoXCJodHRwXCIpO1xudmFyIGh0dHBzID0gcmVxdWlyZShcImh0dHBzXCIpO1xudmFyIHVybCA9IHJlcXVpcmUoXCJ1cmxcIik7XG52YXIgZ3JwY193ZWJfMSA9IHJlcXVpcmUoXCJAaW1wcm9iYWJsZS1lbmcvZ3JwYy13ZWJcIik7XG5mdW5jdGlvbiBOb2RlSHR0cFRyYW5zcG9ydCgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlSHR0cChvcHRzKTtcbiAgICB9O1xufVxuZXhwb3J0cy5Ob2RlSHR0cFRyYW5zcG9ydCA9IE5vZGVIdHRwVHJhbnNwb3J0O1xudmFyIE5vZGVIdHRwID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb2RlSHR0cCh0cmFuc3BvcnRPcHRpb25zKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHRyYW5zcG9ydE9wdGlvbnM7XG4gICAgfVxuICAgIE5vZGVIdHRwLnByb3RvdHlwZS5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uIChtc2dCeXRlcykge1xuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5tZXRob2REZWZpbml0aW9uLnJlcXVlc3RTdHJlYW0gJiYgIXRoaXMub3B0aW9ucy5tZXRob2REZWZpbml0aW9uLnJlc3BvbnNlU3RyZWFtKSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3Quc2V0SGVhZGVyKFwiQ29udGVudC1MZW5ndGhcIiwgbXNnQnl0ZXMuYnl0ZUxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZXF1ZXN0LndyaXRlKHRvQnVmZmVyKG1zZ0J5dGVzKSk7XG4gICAgICAgIHRoaXMucmVxdWVzdC5lbmQoKTtcbiAgICB9O1xuICAgIE5vZGVIdHRwLnByb3RvdHlwZS5maW5pc2hTZW5kID0gZnVuY3Rpb24gKCkge1xuICAgIH07XG4gICAgTm9kZUh0dHAucHJvdG90eXBlLnJlc3BvbnNlQ2FsbGJhY2sgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5vcHRpb25zLmRlYnVnICYmIGNvbnNvbGUubG9nKFwiTm9kZUh0dHAucmVzcG9uc2VcIiwgcmVzcG9uc2Uuc3RhdHVzQ29kZSk7XG4gICAgICAgIHZhciBoZWFkZXJzID0gZmlsdGVySGVhZGVyc0ZvclVuZGVmaW5lZChyZXNwb25zZS5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5vcHRpb25zLm9uSGVhZGVycyhuZXcgZ3JwY193ZWJfMS5ncnBjLk1ldGFkYXRhKGhlYWRlcnMpLCByZXNwb25zZS5zdGF0dXNDb2RlKTtcbiAgICAgICAgcmVzcG9uc2Uub24oXCJkYXRhXCIsIGZ1bmN0aW9uIChjaHVuaykge1xuICAgICAgICAgICAgX3RoaXMub3B0aW9ucy5kZWJ1ZyAmJiBjb25zb2xlLmxvZyhcIk5vZGVIdHRwLmRhdGFcIiwgY2h1bmspO1xuICAgICAgICAgICAgX3RoaXMub3B0aW9ucy5vbkNodW5rKHRvQXJyYXlCdWZmZXIoY2h1bmspKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJlc3BvbnNlLm9uKFwiZW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLm9wdGlvbnMuZGVidWcgJiYgY29uc29sZS5sb2coXCJOb2RlSHR0cC5lbmRcIik7XG4gICAgICAgICAgICBfdGhpcy5vcHRpb25zLm9uRW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgO1xuICAgIE5vZGVIdHRwLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uIChtZXRhZGF0YSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgaGVhZGVycyA9IHt9O1xuICAgICAgICBtZXRhZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChrZXksIHZhbHVlcykge1xuICAgICAgICAgICAgaGVhZGVyc1trZXldID0gdmFsdWVzLmpvaW4oXCIsIFwiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBwYXJzZWRVcmwgPSB1cmwucGFyc2UodGhpcy5vcHRpb25zLnVybCk7XG4gICAgICAgIHZhciBodHRwT3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGhvc3Q6IHBhcnNlZFVybC5ob3N0bmFtZSxcbiAgICAgICAgICAgIHBvcnQ6IHBhcnNlZFVybC5wb3J0ID8gcGFyc2VJbnQocGFyc2VkVXJsLnBvcnQpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcGF0aDogcGFyc2VkVXJsLnBhdGgsXG4gICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLFxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIlxuICAgICAgICB9O1xuICAgICAgICBpZiAocGFyc2VkVXJsLnByb3RvY29sID09PSBcImh0dHBzOlwiKSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3QgPSBodHRwcy5yZXF1ZXN0KGh0dHBPcHRpb25zLCB0aGlzLnJlc3BvbnNlQ2FsbGJhY2suYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3QgPSBodHRwLnJlcXVlc3QoaHR0cE9wdGlvbnMsIHRoaXMucmVzcG9uc2VDYWxsYmFjay5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlcXVlc3Qub24oXCJlcnJvclwiLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBfdGhpcy5vcHRpb25zLmRlYnVnICYmIGNvbnNvbGUubG9nKFwiTm9kZUh0dHAuZXJyb3JcIiwgZXJyKTtcbiAgICAgICAgICAgIF90aGlzLm9wdGlvbnMub25FbmQoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBOb2RlSHR0cC5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm9wdGlvbnMuZGVidWcgJiYgY29uc29sZS5sb2coXCJOb2RlSHR0cC5hYm9ydFwiKTtcbiAgICAgICAgdGhpcy5yZXF1ZXN0LmFib3J0KCk7XG4gICAgfTtcbiAgICByZXR1cm4gTm9kZUh0dHA7XG59KCkpO1xuZnVuY3Rpb24gZmlsdGVySGVhZGVyc0ZvclVuZGVmaW5lZChoZWFkZXJzKSB7XG4gICAgdmFyIGZpbHRlcmVkSGVhZGVycyA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiBoZWFkZXJzKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGhlYWRlcnNba2V5XTtcbiAgICAgICAgaWYgKGhlYWRlcnMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZEhlYWRlcnNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaWx0ZXJlZEhlYWRlcnM7XG59XG5mdW5jdGlvbiB0b0FycmF5QnVmZmVyKGJ1Zikge1xuICAgIHZhciB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoYnVmLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmlld1tpXSA9IGJ1ZltpXTtcbiAgICB9XG4gICAgcmV0dXJuIHZpZXc7XG59XG5mdW5jdGlvbiB0b0J1ZmZlcihhYikge1xuICAgIHZhciBidWYgPSBCdWZmZXIuYWxsb2MoYWIuYnl0ZUxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYnVmW2ldID0gYWJbaV07XG4gICAgfVxuICAgIHJldHVybiBidWY7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js ***!
  \***************************************************************************/
/***/ (function(module) {

eval("!function(e,t){if(true)module.exports=t();else { var n, r; }}(this,(function(){return e={418:function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3),o=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var r,o=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?n.getHeaderKeys(e).forEach((function(r){n.getHeaderValues(e,r).forEach((function(e){t.splitValues?o.append(r,n.splitHeaderValue(e)):o.append(r,e)}))})):\"object\"==typeof(r=e)&&\"object\"==typeof r.headersMap&&\"function\"==typeof r.forEach?e.forEach((function(e,t){o.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){o.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var r=e[t];Array.isArray(r)?r.forEach((function(e){o.append(t,e)})):o.append(t,r)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),r=0;r<t.length;r++){var n=t[r],o=n.indexOf(\":\");if(o>0){var s=n.substring(0,o).trim(),i=n.substring(o+1).trim();this.append(s,i)}}},e.prototype.delete=function(e,t){var r=n.normalizeName(e);if(void 0===t)delete this.headersMap[r];else{var o=this.headersMap[r];if(o){var s=o.indexOf(t);s>=0&&o.splice(s,1),0===o.length&&delete this.headersMap[r]}}},e.prototype.append=function(e,t){var r=this,o=n.normalizeName(e);Array.isArray(this.headersMap[o])||(this.headersMap[o]=[]),Array.isArray(t)?t.forEach((function(e){r.headersMap[o].push(n.normalizeValue(e))})):this.headersMap[o].push(n.normalizeValue(t))},e.prototype.set=function(e,t){var r=n.normalizeName(e);if(Array.isArray(t)){var o=[];t.forEach((function(e){o.push(n.normalizeValue(e))})),this.headersMap[r]=o}else this.headersMap[r]=[n.normalizeValue(t)]},e.prototype.has=function(e,t){var r=this.headersMap[n.normalizeName(e)];if(!Array.isArray(r))return!1;if(void 0!==t){var o=n.normalizeValue(t);return r.indexOf(o)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[n.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(r){e(r,t.headersMap[r])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,r){r.forEach((function(r){e.append(t,r)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.BrowserHeaders=n.BrowserHeaders},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var r=e[Symbol.iterator](),n=r.next();!n.done;)t(n.value[0]),n=r.next()},t.iterateHeadersKeys=function(e,t){for(var r=e.keys(),n=r.next();!n.done;)t(n.value),n=r.next()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var r=e;if(r instanceof Headers&&r.getAll)return r.getAll(t);var n=r.get(t);return n&&\"string\"==typeof n?[n]:n},t.getHeaderKeys=function(e){var t=e,r={},o=[];return t.keys?n.iterateHeadersKeys(t,(function(e){r[e]||(r[e]=!0,o.push(e))})):t.forEach?t.forEach((function(e,t){r[t]||(r[t]=!0,o.push(t))})):n.iterateHeaders(t,(function(e){var t=e[0];r[t]||(r[t]=!0,o.push(t))})),o},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}]))},617:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkParser=t.ChunkType=t.encodeASCII=t.decodeASCII=void 0;var n,o=r(65);function s(e){return 9===(t=e)||10===t||13===t||e>=32&&e<=126;var t}function i(e){for(var t=0;t!==e.length;++t)if(!s(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function u(e){return e.getUint32(1,!1)}function d(e,t,r){return e.byteLength-t>=r}function c(e,t,r){if(e.slice)return e.slice(t,r);var n=e.length;void 0!==r&&(n=r);for(var o=new Uint8Array(n-t),s=0,i=t;i<n;i++)o[s++]=e[i];return o}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),r=0;r!==e.length;++r){var n=e.charCodeAt(r);if(!s(n))throw new Error(\"Metadata contains invalid ASCII\");t[r]=n}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(n=t.ChunkType||(t.ChunkType={}));var p=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var r,s=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var p=this.buffer.byteLength-this.position,h=new Uint8Array(p+e.byteLength),f=c(this.buffer,this.position);h.set(f,0);var l=new Uint8Array(e);h.set(l,p),this.buffer=h,this.position=0}for(;;){if(!d(this.buffer,this.position,5))return s;var g=c(this.buffer,this.position,this.position+5),b=new DataView(g.buffer,g.byteOffset,g.byteLength),y=u(b);if(!d(this.buffer,this.position,5+y))return s;var v=c(this.buffer,this.position+5,this.position+5+y);if(this.position+=5+y,a(b))return s.push({chunkType:n.TRAILERS,trailers:(r=v,new o.Metadata(i(r)))}),s;s.push({chunkType:n.MESSAGE,data:v})}},e}();t.ChunkParser=p},8:function(e,t){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.httpStatusToCode=t.Code=void 0,function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},934:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.client=void 0;var n=r(65),o=r(617),s=r(8),i=r(346),a=r(57),u=r(882);t.client=function(e,t){return new d(e,t)};var d=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new o.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=a.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var r=c(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",r);var n=r&&r>=0?r:s.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",n);var o=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",o),this.rawOnHeaders(e),n!==s.Code.OK){var a=this.decodeGRPCStatus(o[0]);this.rawOnError(n,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var r=[];try{r=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(s.Code.Internal,\"parsing error: \"+e.message)}r.forEach((function(e){if(e.chunkType===o.ChunkType.MESSAGE){var r=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(r)}else e.chunkType===o.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new n.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new n.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=c(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),r=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,r,this.responseTrailers)}else this.rawOnError(s.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(s.Code.Unknown,\"Response closed without headers\");var n=c(this.responseHeaders),o=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",n,o),null===n)return void this.rawOnEnd(s.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(o[0]);this.rawOnEnd(n,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,r){var n=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,r),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(o){if(!n.closed)try{o(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){try{t(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.rawOnError=function(e,t,r){var o=this;void 0===r&&(r=new n.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(n){if(!o.closed)try{n(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(r){if(!t.closed)try{r(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new n.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=u.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function c(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var r=t[0];return parseInt(r,10)}catch(e){return null}return null}},346:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=void 0,t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},607:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.grpc=void 0;var n,o=r(418),s=r(57),i=r(229),a=r(540),u=r(210),d=r(859),c=r(8),p=r(938),h=r(35),f=r(934);(n=t.grpc||(t.grpc={})).setDefaultTransport=s.setDefaultTransportFactory,n.CrossBrowserHttpTransport=d.CrossBrowserHttpTransport,n.FetchReadableStreamTransport=i.FetchReadableStreamTransport,n.XhrTransport=u.XhrTransport,n.WebsocketTransport=a.WebsocketTransport,n.Code=c.Code,n.Metadata=o.BrowserHeaders,n.client=function(e,t){return f.client(e,t)},n.invoke=p.invoke,n.unary=h.unary},938:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.invoke=void 0;var n=r(934);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var r=n.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&r.onHeaders(t.onHeaders),t.onMessage&&r.onMessage(t.onMessage),t.onEnd&&r.onEnd(t.onEnd),r.start(t.metadata),r.send(t.request),r.finishSend(),{close:function(){r.close()}}}},65:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Metadata=void 0;var n=r(418);Object.defineProperty(t,\"Metadata\",{enumerable:!0,get:function(){return n.BrowserHeaders}})},57:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeDefaultTransport=t.setDefaultTransportFactory=void 0;var n=r(859),o=function(e){return n.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){o=e},t.makeDefaultTransport=function(e){return o(e)}},229:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectFetchSupport=t.FetchReadableStreamTransport=void 0;var o=r(65),s=r(346);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&s.debug(\"fetchRequest\",e),new i(e,t)}(t,e)}};var i=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var r=this;if(this.reader=e,this.cancelled)return this.options.debug&&s.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel().catch((function(e){r.options.debug&&s.debug(\"Fetch.pump.reader.cancel exception\",e)}));this.reader.read().then((function(e){if(e.done)return r.options.onEnd(),t;r.options.onChunk(e.value),r.pump(r.reader,t)})).catch((function(e){r.cancelled?r.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(r.cancelled=!0,r.options.debug&&s.debug(\"Fetch.catch\",e.message),r.options.onEnd(e))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,n(n({},this.init),{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&s.debug(\"Fetch.response\",e),t.options.onHeaders(new o.Metadata(e.headers),e.status),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&s.debug(\"Fetch.catch\",e.message),t.options.onEnd(e))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){var e=this;this.cancelled?this.options.debug&&s.debug(\"Fetch.cancel already cancelled\"):(this.cancelled=!0,this.controller?(this.options.debug&&s.debug(\"Fetch.cancel.controller.abort\"),this.controller.abort()):this.options.debug&&s.debug(\"Fetch.cancel.missing abort controller\"),this.reader?(this.options.debug&&s.debug(\"Fetch.cancel.reader.cancel\"),this.reader.cancel().catch((function(t){e.options.debug&&s.debug(\"Fetch.cancel.reader.cancel exception\",t)}))):this.options.debug&&s.debug(\"Fetch.cancel before reader\"))},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},859:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CrossBrowserHttpTransport=void 0;var n=r(229),o=r(210);t.CrossBrowserHttpTransport=function(e){if(n.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return n.FetchReadableStreamTransport(t)}return o.XhrTransport({withCredentials:e.withCredentials})}},210:function(e,t,r){\"use strict\";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToArrayBuffer=t.MozChunkedArrayBufferXHR=t.XHR=t.XhrTransport=void 0;var s=r(65),i=r(346),a=r(849);t.XhrTransport=function(e){return function(t){if(a.detectMozXHRSupport())return new d(t,e);if(a.detectXHROverrideMimeTypeSupport())return new u(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var u=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var e=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var t=p(e);this.options.onChunk(t)},e.prototype.onLoadEvent=function(){this.options.debug&&i.debug(\"XHR.onLoadEvent\"),this.options.onEnd()},e.prototype.onStateChange=function(){this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()),this.xhr.status)},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var r=new XMLHttpRequest;this.xhr=r,r.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){r.setRequestHeader(e,t.join(\", \"))})),r.withCredentials=Boolean(this.init.withCredentials),r.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),r.addEventListener(\"progress\",this.onProgressEvent.bind(this)),r.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),r.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),t.options.onEnd(e.error)}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(e)),this.options.onChunk(new Uint8Array(e))},t}(u);function c(e,t){var r=e.charCodeAt(t);if(r>=55296&&r<=56319){var n=e.charCodeAt(t+1);n>=56320&&n<=57343&&(r=65536+(r-55296<<10)+(n-56320))}return r}function p(e){for(var t=new Uint8Array(e.length),r=0,n=0;n<e.length;n++){var o=String.prototype.codePointAt?e.codePointAt(n):c(e,n);t[r++]=255&o}return t}t.MozChunkedArrayBufferXHR=d,t.stringToArrayBuffer=p},849:function(e,t){\"use strict\";var r;function n(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}function o(e){var t=n();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectXHROverrideMimeTypeSupport=t.detectMozXHRSupport=t.xhrSupportsResponseType=void 0,t.xhrSupportsResponseType=o,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&o(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},540:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WebsocketTransport=void 0;var n,o=r(346),s=r(617);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(n||(n={}));var i=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&o.debug(\"websocketRequest\",e);var t,r=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),a=[];function u(e){if(e===n.FINISH_SEND)t.send(i);else{var r=e,o=new Int8Array(r.byteLength+1);o.set(new Uint8Array([0])),o.set(r,1),t.send(o)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?u(e):a.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?u(n.FINISH_SEND):a.push(n.FINISH_SEND)},start:function(n){(t=new WebSocket(r,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var r;e.debug&&o.debug(\"websocketRequest.onopen\"),t.send((r=\"\",n.forEach((function(e,t){r+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),s.encodeASCII(r))),a.forEach((function(e){u(e)}))},t.onclose=function(t){e.debug&&o.debug(\"websocketRequest.onclose\",t),e.onEnd()},t.onerror=function(t){e.debug&&o.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){e.onChunk(new Uint8Array(t.data))}},cancel:function(){e.debug&&o.debug(\"websocket.abort\"),t.close()}}}(e)}}},35:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unary=void 0;var n=r(65),o=r(934);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var r=null,s=null,i=o.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){r=e})),i.onMessage((function(e){s=e})),i.onEnd((function(e,o,i){t.onEnd({status:e,statusMessage:o,headers:r||new n.Metadata,message:s,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}},882:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=void 0,t.frameRequest=function(e){var t=e.serializeBinary(),r=new ArrayBuffer(t.byteLength+5);return new DataView(r,1,4).setUint32(0,t.length,!1),new Uint8Array(r,5).set(t),new Uint8Array(r)}}},t={},function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(607);var e,t}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js\n");

/***/ }),

/***/ "./node_modules/@onflow/fcl/dist/fcl.module.js":
/*!*****************************************************!*\
  !*** ./node_modules/@onflow/fcl/dist/fcl.module.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TestUtils\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.TestUtils),\n/* harmony export */   \"account\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.account),\n/* harmony export */   \"arg\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.arg),\n/* harmony export */   \"args\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.args),\n/* harmony export */   \"atBlockHeight\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.atBlockHeight),\n/* harmony export */   \"atBlockId\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.atBlockId),\n/* harmony export */   \"authorization\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.authorization),\n/* harmony export */   \"authorizations\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.authorizations),\n/* harmony export */   \"build\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.build),\n/* harmony export */   \"config\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config),\n/* harmony export */   \"createSignableVoucher\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.createSignableVoucher),\n/* harmony export */   \"decode\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.decode),\n/* harmony export */   \"getAccount\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getAccount),\n/* harmony export */   \"getBlock\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getBlock),\n/* harmony export */   \"getBlockByHeight\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getBlockByHeight),\n/* harmony export */   \"getBlockById\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getBlockById),\n/* harmony export */   \"getBlockHeader\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getBlockHeader),\n/* harmony export */   \"getCollection\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getCollection),\n/* harmony export */   \"getEvents\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getEvents),\n/* harmony export */   \"getEventsAtBlockHeightRange\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getEventsAtBlockHeightRange),\n/* harmony export */   \"getEventsAtBlockIds\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getEventsAtBlockIds),\n/* harmony export */   \"getLatestBlock\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getLatestBlock),\n/* harmony export */   \"getTransaction\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getTransaction),\n/* harmony export */   \"getTransactionStatus\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getTransactionStatus),\n/* harmony export */   \"invariant\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.invariant),\n/* harmony export */   \"isBad\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.isBad),\n/* harmony export */   \"isOk\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.isOk),\n/* harmony export */   \"latestBlock\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.latestBlock),\n/* harmony export */   \"limit\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.limit),\n/* harmony export */   \"param\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.param),\n/* harmony export */   \"params\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.params),\n/* harmony export */   \"payer\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.payer),\n/* harmony export */   \"ping\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.ping),\n/* harmony export */   \"pipe\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.pipe),\n/* harmony export */   \"proposer\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.proposer),\n/* harmony export */   \"ref\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.ref),\n/* harmony export */   \"script\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.script),\n/* harmony export */   \"send\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.send),\n/* harmony export */   \"transaction\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.transaction),\n/* harmony export */   \"validator\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.validator),\n/* harmony export */   \"why\": () => (/* reexport safe */ _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.why),\n/* harmony export */   \"display\": () => (/* reexport safe */ _onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.display),\n/* harmony export */   \"sansPrefix\": () => (/* reexport safe */ _onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.sansPrefix),\n/* harmony export */   \"withPrefix\": () => (/* reexport safe */ _onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix),\n/* harmony export */   \"cadence\": () => (/* reexport safe */ _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template),\n/* harmony export */   \"cdc\": () => (/* reexport safe */ _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template),\n/* harmony export */   \"VERSION\": () => (/* binding */ I),\n/* harmony export */   \"WalletUtils\": () => (/* binding */ mt),\n/* harmony export */   \"authenticate\": () => (/* binding */ yt),\n/* harmony export */   \"authz\": () => (/* binding */ Rt),\n/* harmony export */   \"currentUser\": () => (/* binding */ Qe),\n/* harmony export */   \"events\": () => (/* binding */ ht),\n/* harmony export */   \"logIn\": () => (/* binding */ Ct),\n/* harmony export */   \"mutate\": () => (/* binding */ ut),\n/* harmony export */   \"query\": () => (/* binding */ _),\n/* harmony export */   \"reauthenticate\": () => (/* binding */ gt),\n/* harmony export */   \"serialize\": () => (/* binding */ dt),\n/* harmony export */   \"signUp\": () => (/* binding */ Pt),\n/* harmony export */   \"t\": () => (/* binding */ St),\n/* harmony export */   \"tx\": () => (/* binding */ st),\n/* harmony export */   \"unauthenticate\": () => (/* binding */ Et),\n/* harmony export */   \"verifyUserSignatures\": () => (/* binding */ Fe)\n/* harmony export */ });\n/* harmony import */ var _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @onflow/sdk */ \"./node_modules/@onflow/sdk/dist/sdk.module.js\");\n/* harmony import */ var _onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @onflow/util-invariant */ \"./node_modules/@onflow/util-invariant/dist/util-invariant.module.js\");\n/* harmony import */ var _onflow_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @onflow/types */ \"./node_modules/@onflow/fcl/node_modules/@onflow/types/dist/types.module.js\");\n/* harmony import */ var _onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/util-actor */ \"./node_modules/@onflow/util-actor/dist/actor.module.js\");\n/* harmony import */ var _onflow_util_address__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @onflow/util-address */ \"./node_modules/@onflow/util-address/dist/util-address.module.js\");\n/* harmony import */ var _onflow_rlp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @onflow/rlp */ \"./node_modules/@onflow/rlp/dist/rlp.module.js\");\n/* harmony import */ var _onflow_util_uid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @onflow/util-uid */ \"./node_modules/@onflow/util-uid/dist/util-uid.module.js\");\n/* harmony import */ var _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @onflow/util-template */ \"./node_modules/@onflow/util-template/dist/template.module.js\");\nvar A=function(e){try{return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config)().where(e)).then(function(t){return Object.fromEntries(Object.entries(t).map(function(t){var r=t[1];return[t[0].replace(e,\"\"),r]}))})}catch(e){return Promise.reject(e)}};(0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config)({\"discovery.wallet.method.default\":\"IFRAME/RPC\",\"fcl.storage.default\":{can:!0,get:function(e){try{return Promise.resolve(JSON.parse(sessionStorage.getItem(e)))}catch(e){return Promise.reject(e)}},put:function(e,t){try{return Promise.resolve(sessionStorage.setItem(e,JSON.stringify(t)))}catch(e){return Promise.reject(e)}}}});var I=\"0.0.77\",F=function(e){return function(t){return typeof t===e}},O=function(e){return null!=e},N=F(\"object\"),D=F(\"string\"),k=F(\"function\"),j=F(\"number\");function T(t){return k(t)?t(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.arg,_onflow_types__WEBPACK_IMPORTED_MODULE_2__):[]}var _=function(t){void 0===t&&(t={});try{return Promise.resolve(function(t){try{return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(O(t.cadence),\"query({ cadence }) -- cadence is required\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(D(t.cadence),\"query({ cadence }) -- cadence must be a string\"),Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.get(\"accessNode.api\")).then(function(e){(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(e,'Required value for \"accessNode.api\" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration')})}catch(e){return Promise.reject(e)}}(t)).then(function(){return _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.send([_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.script(t.cadence),_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.args(T(t.args||[])),t.limit&&\"number\"==typeof t.limit&&_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.limit(t.limit)]).then(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.decode)})}catch(e){return Promise.reject(e)}};function V(){return(V=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function M(e,t){var r=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(r)return(r=r.call(e)).next.bind(r);if(Array.isArray(e)||(r=function(e,t){if(e){if(\"string\"==typeof e)return x(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?x(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var W={f_type:\"Service\",f_vsn:\"1.0.0\"},U={f_type:\"Identity\",f_vsn:\"1.0.0\"},z={f_type:\"USER\",f_vsn:\"1.0.0\"},H={f_type:\"PollingResponse\",f_vsn:\"1.0.0\"},Y={f_type:\"CompositeSignature\",f_vsn:\"1.0.0\"};function B(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({old:e},W,{type:\"frame\",endpoint:e.endpoint,params:e.params||{},data:e.data||{}})}}function J(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({},W,{type:\"back-channel-rpc\",endpoint:e.endpoint,method:e.method,params:e.params||{},data:e.data||{}})}}function q(e){if(null==e)return null;switch(null==e.method&&(e=V({},e,{type:\"local-view\",method:\"VIEW/IFRAME\"})),e.f_vsn){case\"1.0.0\":return e;default:return V({},W,{type:e.type||\"local-view\",method:e.method,endpoint:e.endpoint,data:e.data||{},params:e.params||{}})}}var K={\"back-channel-rpc\":J,\"pre-authz\":function(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({},W,{type:e.type,uid:e.id,endpoint:e.endpoint,method:e.method,identity:V({},U,{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.addr),keyId:e.keyId}),params:e.params,data:e.data})}},authz:function(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({},W,{type:e.type,uid:e.id,endpoint:e.endpoint,method:e.method,identity:V({},U,{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.addr),keyId:e.keyId}),params:e.params,data:e.data})}},authn:function(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({},W,{type:e.type,uid:e.id,endpoint:e.authn,id:e.pid,provider:{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.addr),name:e.name,icon:e.icon}})}},frame:B,\"open-id\":function(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return null}},\"user-signature\":function(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:throw new Error(\"Invalid user-signature service\")}},\"local-view\":q};function G(e){return _onflow_rlp__WEBPACK_IMPORTED_MODULE_5__.encode([e.provider.address||e.provider.name||\"UNSPECIFIED\",e.id]).toString(\"hex\")}function Z(e,t){return void 0===e&&(e=[]),e.find(function(e){return e.type===t})}function $(e){var t=new URL(e.endpoint);if(t.searchParams.append(\"l6n\",window.location.origin),null!=e.params)for(var r=0,n=Object.entries(e.params||{});r<n.length;r++){var o=n[r];t.searchParams.append(o[0],o[1])}return t}function X(e,t){void 0===t&&(t={});var r=t.method||\"POST\",n=\"GET\"===r?void 0:JSON.stringify(t.data||e.data||{});return fetch($(e),{method:r,headers:V({},e.headers||{},t.headers||{},{\"Content-Type\":\"application/json\"}),body:n}).then(function(e){return e.json()})}function Q(e){var t;if(null==e)return null;switch((e.addr||e.services)&&(e={status:\"APPROVED\",data:V({},e)}),e.f_vsn){case\"1.0.0\":return e;default:return V({},H,{status:e.status,reason:null!=(t=e.reason)?t:null,data:e.compositeSignature||e.data||{},updates:J(e.authorizationUpdates),local:B((e.local||[])[0])})}}var ee=function e(t,r){void 0===r&&(r=function(){return!0});try{if((0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(t,\"Missing Polling Service\",{service:t}),!r())throw new Error(\"Externally Halted\");return Promise.resolve(X(t,{method:re(t)}).then(Q)).then(function(t){switch(t.status){case\"APPROVED\":return t.data;case\"DECLINED\":throw new Error(\"Declined: \"+(t.reason||\"No reason supplied.\"));default:return Promise.resolve(new Promise(function(e){return setTimeout(e,500)})).then(function(){return e(t.updates,r)})}})}catch(e){return Promise.reject(e)}},te={\"HTTP/GET\":\"GET\",\"HTTP/POST\":\"POST\"},re=function(e){return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(te[e.method],\"Invalid Service Method for type back-channel-rpc\",{service:e}),te[e.method]},ne=\"FCL_IFRAME\";function oe(e){(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(!document.getElementById(ne),\"Attempt at triggering multiple Frames\",{src:e});var t=document.createElement(\"iframe\");return t.src=e,t.id=ne,t.allow=\"usb *; hid *\",t.frameBorder=\"0\",t.style.cssText=\"\\n  position:fixed;\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n  height: 100vh;\\n  width: 100vw;\\n  display:block;\\n  background:rgba(0,0,0,0.25);\\n  z-index: 2147483647;\\n  box-sizing: border-box;\\n\",document.body.append(t),[t.contentWindow,function(){document.getElementById(ne)&&document.getElementById(ne).remove()}]}var ae=null,ie=null;function se(e,t,r,n,o){return r.open(e,t,\"toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=\"+n+\", height=\"+o+\", top=\"+(r.top.outerHeight/2+r.top.screenY-o/2)+\", left=\"+(r.top.outerWidth/2+r.top.screenX-n/2))}function ce(e){var t;null==ae||null!=(t=ae)&&t.closed?ae=se(e,\"FCL_POP\",window,640,600):ie!==e?(ae=se(e,\"FCL_POP\",window,640,600)).focus():ae.focus(),ie=e;var r=setInterval(function(){ae&&ae.closed&&(clearInterval(r),ae=null)},1e3);return[ae,function(){ae&&!ae.closed&&(ae.close(),ae=null)}]}var ue=null,de=null;function le(e){var t;null==ue||null!=(t=ue)&&t.closed?ue=window.open(e,\"_blank\"):de!==e?(ue=window.open(e,\"_blank\")).focus():ue.focus(),de=e;var r=setInterval(function(){ue&&ue.closed&&(clearInterval(r),ue=null)},1e3);return[ue,function(){ue&&!ue.closed&&(ue.close(),ue=null)}]}var fe,pe={\"VIEW/IFRAME\":oe,\"VIEW/POP\":ce,\"VIEW/TAB\":le},he=function(e,t,r){try{return t.data=e.data,Promise.resolve(X(e,{data:t}).then(Q)).then(function(t){if(\"APPROVED\"===t.status)return t.data;if(\"DECLINED\"===t.status)throw new Error(\"Declined: \"+(t.reason||\"No reason supplied.\"));if(\"PENDING\"===t.status){var r=!0;return Promise.resolve(function(e,t){void 0===t&&(t={});try{try{return Promise.resolve(pe[e.method]($(e),t))}catch(r){throw console.error(\"execLocal({service, opts = {}})\",r,{service:e,opts:t}),r}}catch(e){return Promise.reject(e)}}(q(t.local))).then(function(e){var n=e[1],o=function(){try{n(),r=!1}catch(e){console.error(\"Frame Close Error\",e)}};return ee(t.updates,function(){return r}).then(function(e){return o(),e}).catch(function(e){throw console.error(e),o(),e})})}throw console.error(\"Auto Decline: Invalid Response\",{service:e,resp:t}),new Error(\"Auto Decline: Invalid Response\")})}catch(e){return Promise.reject(e)}},ve=function(){},me=function(e){return\"string\"==typeof e&&e.toLowerCase()},ye=function(e,t){return console.warn(\"DEPRECATION NOTICE\",\"Received \"+e+\", please use \"+t+\" for this and future versions of FCL\")},Ee=new Set([\"monetizationstart\",\"monetizationpending\",\"monetizationprogress\",\"monetizationstop\"]),ge=function(){},Pe=function(e){return\"string\"==typeof e&&e.toLowerCase()},Ce=function(e,t){return console.warn(\"DEPRECATION NOTICE\",\"Received \"+e+\", please use \"+t+\" for this and future versions of FCL\")},Re=new Set([\"monetizationstart\",\"monetizationpending\",\"monetizationprogress\",\"monetizationstop\"]),Se=function(){},we=function(e){return\"string\"==typeof e&&e.toLowerCase()},Le=function(e,t){return console.warn(\"DEPRECATION NOTICE\",\"Received \"+e+\", please use \"+t+\" for this and future versions of FCL\")},be=new Set([\"monetizationstart\",\"monetizationpending\",\"monetizationprogress\",\"monetizationstop\"]),Ae=function(e){var t=e.service,r=e.msg,n=void 0===r?{}:r,o=e.opts,a=void 0===o?{}:o;try{try{return Promise.resolve(Ie[t.method](t,n,a))}catch(e){throw console.error(\"execService({service, msg = {}, opts = {}})\",e,{service:t,msg:n,opts:a}),e}}catch(e){return Promise.reject(e)}},Ie={\"HTTP/RPC\":he,\"HTTP/POST\":he,\"IFRAME/RPC\":function(e,t,r){return new Promise(function(n,o){var a=(0,_onflow_util_uid__WEBPACK_IMPORTED_MODULE_6__.uid)(),i=r.includeOlderJsonRpcCall;t.data=e.data,function(e,t){if(void 0===t&&(t={}),null==e)return{send:ve,close:ve};var r=t.onClose||ve,n=t.onMessage||ve,o=t.onReady||ve,a=t.onResponse||ve;window.addEventListener(\"message\",u);var i=oe($(e)),s=i[0],c=i[1];return{send:l,close:d};function u(e){try{if(\"object\"!=typeof e.data)return;if(Ee.has(e.data.type))return;me(e.data.type)===me(\"FCL:VIEW:CLOSE\")&&d(),me(e.data.type)===me(\"FCL:VIEW:READY\")&&o(e,{send:l,close:d}),me(e.data.type)===me(\"FCL:VIEW:RESPONSE\")&&a(e,{send:l,close:d}),n(e,{send:l,close:d}),me(e.data.type)===me(\"FCL:FRAME:READY\")&&(ye(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),me(e.data.type)===me(\"FCL:FRAME:RESPONSE\")&&(ye(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),me(e.data.type)===me(\"FCL:FRAME:CLOSE\")&&(ye(e.data.type,\"FCL:VIEW:CLOSE\"),d()),me(e.data.type)===me(\"FCL::CHALLENGE::RESPONSE\")&&(ye(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),me(e.data.type)===me(\"FCL::AUTHZ_READY\")&&(ye(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),me(e.data.type)===me(\"FCL::CHALLENGE::CANCEL\")&&(ye(e.data.type,\"FCL:VIEW:CLOSE\"),d()),me(e.data.type)===me(\"FCL::CANCEL\")&&(ye(e.data.type,\"FCL:VIEW:CLOSE\"),d())}catch(e){console.error(\"Frame Callback Error\",e),d()}}function d(){try{window.removeEventListener(\"message\",u),c(),r()}catch(e){console.error(\"Frame Close Error\",e)}}function l(e){try{s.postMessage(JSON.parse(JSON.stringify(e||{})),\"*\")}catch(t){console.error(\"Frame Send Error\",e,t)}}}(e,{onReady:function(r,n){var o=n.send;try{return Promise.resolve(function(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(function(){var r={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(n){return Promise.resolve(A(/^app\\.detail\\./)).then(function(s){o({type:\"FCL:VIEW:READY:RESPONSE\",body:t,service:r,config:{services:n,app:s}});var c={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(r){return Promise.resolve(A(/^app\\.detail\\./)).then(function(n){o({type:\"FCL:FRAME:READY:RESPONSE\",body:t,service:c,config:{services:r,app:n},deprecated:{message:\"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\"}}),i&&o({jsonrpc:\"2.0\",id:a,method:\"fcl:sign\",params:[t,e.params],deprecated:{message:\"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\"}})})})})})},function(e){throw e}))}catch(e){return Promise.reject(e)}},onResponse:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;var a=Q(e.data);switch(a.status){case\"APPROVED\":n(a.data),r();break;case\"DECLINED\":o(\"Declined: \"+(a.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execIframeRPC onResponse error\",e),e}},onMessage:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;if(\"2.0\"!==e.data.jsonrpc)return;if(e.data.id!==a)return;var i=Q(e.data.result);switch(i.status){case\"APPROVED\":n(i.data),r();break;case\"DECLINED\":o(\"Declined: \"+(i.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execIframeRPC onMessage error\",e),e}},onClose:function(){o(\"Declined: Externally Halted\")}})})},\"POP/RPC\":function(e,t,r){return new Promise(function(n,o){var a=(0,_onflow_util_uid__WEBPACK_IMPORTED_MODULE_6__.uid)(),i=r.includeOlderJsonRpcCall;t.data=e.data,function(e,t){if(void 0===t&&(t={}),null==e)return{send:ge,close:ge};var r=t.onClose||ge,n=t.onMessage||ge,o=t.onReady||ge,a=t.onResponse||ge;window.addEventListener(\"message\",u);var i=ce($(e)),s=i[0],c=i[1];return{send:l,close:d};function u(e){try{if(\"object\"!=typeof e.data)return;if(Re.has(e.data.type))return;Pe(e.data.type)===Pe(\"FCL:VIEW:CLOSE\")&&d(),Pe(e.data.type)===Pe(\"FCL:VIEW:READY\")&&o(e,{send:l,close:d}),Pe(e.data.type)===Pe(\"FCL:VIEW:RESPONSE\")&&a(e,{send:l,close:d}),n(e,{send:l,close:d}),Pe(e.data.type)===Pe(\"FCL:FRAME:READY\")&&(Ce(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),Pe(e.data.type)===Pe(\"FCL:FRAME:RESPONSE\")&&(Ce(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),Pe(e.data.type)===Pe(\"FCL:FRAME:CLOSE\")&&(Ce(e.data.type,\"FCL:VIEW:CLOSE\"),d()),Pe(e.data.type)===Pe(\"FCL::CHALLENGE::RESPONSE\")&&(Ce(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),Pe(e.data.type)===Pe(\"FCL::AUTHZ_READY\")&&(Ce(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),Pe(e.data.type)===Pe(\"FCL::CHALLENGE::CANCEL\")&&(Ce(e.data.type,\"FCL:VIEW:CLOSE\"),d()),Pe(e.data.type)===Pe(\"FCL::CANCEL\")&&(Ce(e.data.type,\"FCL:VIEW:CLOSE\"),d())}catch(e){console.error(\"Popup Callback Error\",e),d()}}function d(){try{window.removeEventListener(\"message\",u),c(),r()}catch(e){console.error(\"Popup Close Error\",e)}}function l(e){try{s.postMessage(JSON.parse(JSON.stringify(e||{})),\"*\")}catch(t){console.error(\"Popup Send Error\",e,t)}}}(e,{onReady:function(r,n){var o=n.send;try{return Promise.resolve(function(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(function(){var r={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(n){return Promise.resolve(A(/^app\\.detail\\./)).then(function(s){o({type:\"FCL:VIEW:READY:RESPONSE\",body:t,service:r,config:{services:n,app:s}});var c={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(r){return Promise.resolve(A(/^app\\.detail\\./)).then(function(n){o({type:\"FCL:FRAME:READY:RESPONSE\",body:t,service:c,config:{services:r,app:n},deprecated:{message:\"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\"}}),i&&o({jsonrpc:\"2.0\",id:a,method:\"fcl:sign\",params:[t,e.params]})})})})})},function(e){throw e}))}catch(e){return Promise.reject(e)}},onResponse:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;var a=Q(e.data);switch(a.status){case\"APPROVED\":n(a.data),r();break;case\"DECLINED\":o(\"Declined: \"+(a.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execPopRPC onResponse error\",e),e}},onMessage:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;if(\"2.0\"!==e.data.jsonrpc)return;if(e.data.id!==a)return;var i=Q(e.data.result);switch(i.status){case\"APPROVED\":n(i.data),r();break;case\"DECLINED\":o(\"Declined: \"+(i.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execPopRPC onMessage error\",e),e}},onClose:function(){o(\"Declined: Externally Halted\")}})})},\"TAB/RPC\":function(e,t,r){return new Promise(function(n,o){var a=(0,_onflow_util_uid__WEBPACK_IMPORTED_MODULE_6__.uid)(),i=r.includeOlderJsonRpcCall;t.data=e.data,function(e,t){if(void 0===t&&(t={}),null==e)return{send:Se,close:Se};var r=t.onClose||Se,n=t.onMessage||Se,o=t.onReady||Se,a=t.onResponse||Se;window.addEventListener(\"message\",u);var i=le($(e)),s=i[0],c=i[1];return{send:l,close:d};function u(e){try{if(\"object\"!=typeof e.data)return;if(be.has(e.data.type))return;we(e.data.type)===we(\"FCL:VIEW:CLOSE\")&&d(),we(e.data.type)===we(\"FCL:VIEW:READY\")&&o(e,{send:l,close:d}),we(e.data.type)===we(\"FCL:VIEW:RESPONSE\")&&a(e,{send:l,close:d}),n(e,{send:l,close:d}),we(e.data.type)===we(\"FCL:FRAME:READY\")&&(Le(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),we(e.data.type)===we(\"FCL:FRAME:RESPONSE\")&&(Le(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),we(e.data.type)===we(\"FCL:FRAME:CLOSE\")&&(Le(e.data.type,\"FCL:VIEW:CLOSE\"),d()),we(e.data.type)===we(\"FCL::CHALLENGE::RESPONSE\")&&(Le(e.data.type,\"FCL:VIEW:RESPONSE\"),a(e,{send:l,close:d})),we(e.data.type)===we(\"FCL::AUTHZ_READY\")&&(Le(e.data.type,\"FCL:VIEW:READY\"),o(e,{send:l,close:d})),we(e.data.type)===we(\"FCL::CHALLENGE::CANCEL\")&&(Le(e.data.type,\"FCL:VIEW:CLOSE\"),d()),we(e.data.type)===we(\"FCL::CANCEL\")&&(Le(e.data.type,\"FCL:VIEW:CLOSE\"),d())}catch(e){console.error(\"Tab Callback Error\",e),d()}}function d(){try{window.removeEventListener(\"message\",u),c(),r()}catch(e){console.error(\"Tab Close Error\",e)}}function l(e){try{s.postMessage(JSON.parse(JSON.stringify(e||{})),\"*\")}catch(t){console.error(\"Tab Send Error\",e,t)}}}(e,{onReady:function(r,n){var o=n.send;try{return Promise.resolve(function(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(function(){var r={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(n){return Promise.resolve(A(/^app\\.detail\\./)).then(function(s){o({type:\"FCL:VIEW:READY:RESPONSE\",body:t,service:r,config:{services:n,app:s}});var c={params:e.params,data:e.data};return Promise.resolve(A(/^service\\./)).then(function(r){return Promise.resolve(A(/^app\\.detail\\./)).then(function(n){o({type:\"FCL:FRAME:READY:RESPONSE\",body:t,service:c,config:{services:r,app:n},deprecated:{message:\"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\"}}),i&&o({jsonrpc:\"2.0\",id:a,method:\"fcl:sign\",params:[t,e.params]})})})})})},function(e){throw e}))}catch(e){return Promise.reject(e)}},onResponse:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;var a=Q(e.data);switch(a.status){case\"APPROVED\":n(a.data),r();break;case\"DECLINED\":o(\"Declined: \"+(a.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execPopRPC onResponse error\",e),e}},onMessage:function(e,t){var r=t.close;try{if(\"object\"!=typeof e.data)return;if(\"2.0\"!==e.data.jsonrpc)return;if(e.data.id!==a)return;var i=Q(e.data.result);switch(i.status){case\"APPROVED\":n(i.data),r();break;case\"DECLINED\":o(\"Declined: \"+(i.reason||\"No reason supplied\")),r();break;default:o(\"Declined: No reason supplied\"),r()}}catch(e){throw console.error(\"execPopRPC onMessage error\",e),e}},onClose:function(){o(\"Declined: Externally Halted\")}})})}},Fe=function(e,t){try{(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(/^[0-9a-f]+$/i.test(e),\"Message must be a hex string\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(Array.isArray(t),\"Must include an Array of composite signatures\");var n=[],o=[],a=[];return Promise.resolve(Promise.all(t.map(function(e){try{return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"string\"==typeof e.addr,\"addr must be a string\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"number\"==typeof e.keyId,\"keyId must be a number\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"string\"==typeof e.signature,\"signature must be a string\"),Promise.resolve(function(t,i){try{var s=Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.account)(e.addr)).then(function(t){return n.push(t.keys[e.keyId].weight.toFixed(1)),o.push(t.keys[e.keyId].signAlgo),a.push(e.signature),t.keys[e.keyId].publicKey})}catch(e){return i(e)}return s&&s.then?s.then(void 0,i):s}(0,function(e){throw e}))}catch(e){return Promise.reject(e)}}))).then(function(t){return Promise.resolve(_({cadence:\"\"+Oe,args:function(r,i){return[r(e,i.String),r(t,i.Array([i.String])),r(n,i.Array(i.UFix64)),r(o,i.Array([i.UInt])),r(a,i.Array([i.String]))]}}))})}catch(e){return Promise.reject(e)}},Oe=\"\\nimport Crypto\\n    \\npub fun main(\\n  message: String,\\n  rawPublicKeys: [String],\\n  weights: [UFix64],\\n  signAlgos: [UInt],\\n  signatures: [String],\\n): Bool {\\n\\n  let keyList = Crypto.KeyList()\\n  \\n  var i = 0\\n  for rawPublicKey in rawPublicKeys {\\n    keyList.add(\\n      PublicKey(\\n        publicKey: rawPublicKey.decodeHex(),\\n        signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_P256 : SignatureAlgorithm.ECDSA_secp256k1 \\n      ),\\n      hashAlgorithm: HashAlgorithm.SHA3_256,\\n      weight: weights[i],\\n    )\\n    i = i + 1\\n  }\\n\\n  let signatureSet: [Crypto.KeyListSignature] = []\\n\\n  var j = 0\\n  for signature in signatures {\\n    signatureSet.append(\\n      Crypto.KeyListSignature(\\n        keyIndex: j,\\n        signature: signature.decodeHex()\\n      )\\n    )\\n    j = j + 1\\n  }\\n    \\n  let signedData = message.decodeHex()\\n  \\n  return keyList.verify(\\n    signatureSet: signatureSet,\\n    signedData: signedData\\n  )\\n}\\n\";function Ne(e){if(null==e)return null;switch(e.f_vsn){case\"1.0.0\":return e;default:return V({},Y,{addr:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.sansPrefix)(e.addr||e.address),signature:e.signature||e.sig,keyId:e.keyId})}}function De(e,t,r){if(!e.s){if(r instanceof _e){if(!r.s)return void(r.o=De.bind(null,e,t));1&t&&(t=r.s),r=r.v}if(r&&r.then)return void r.then(De.bind(null,e,t),De.bind(null,e,2));e.s=t,e.v=r;var n=e.o;n&&n(e)}}var ke=function(e,t){try{return console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n    verifyUserSignatures is no longer exported as fcl.currentUser().verifyUserSignatures\\n    and is now available as fcl.verifyUserSignatures\\n    ============================\\n    \",\"font-weight:bold;font-family:monospace;\"),Promise.resolve(Fe(e,t))}catch(e){return Promise.reject(e)}},je=function(e){try{return Be(),Promise.resolve(xe()).then(function(t){var r=Z(t.services,\"user-signature\");return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(r,\"Current user must have authorized a signing service.\"),Me(function(){return Promise.resolve(Ae({service:r,msg:Xe(e)})).then(function(e){return Array.isArray(e)?e.map(function(e){return Ne(e)}):[Ne(e)]})},function(e){return e})})}catch(e){return Promise.reject(e)}},Te=function(e){try{return Be(),Promise.resolve(xe()).then(function(t){var r=Z(t.services,\"authz\"),n=Z(t.services,\"pre-authz\");return V({},e,n?{tempId:\"CURRENT_USER\",resolve:function(e,t){try{return Promise.resolve(Ae({service:n,msg:t})).then(Ke)}catch(e){return Promise.reject(e)}}}:{tempId:\"CURRENT_USER\",resolve:null,addr:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.sansPrefix)(r.identity.address),keyId:r.identity.keyId,sequenceNum:null,signature:null,signingFunction:function(e){try{return Promise.resolve(Ae({service:r,msg:e,opts:{includeOlderJsonRpcCall:!0}})).then(Ne)}catch(e){return Promise.reject(e)}}})})}catch(e){return Promise.reject(e)}},_e=function(){function e(){}return e.prototype.then=function(t,r){var n=new e,o=this.s;if(o){var a=1&o?t:r;if(a){try{De(n,1,a(this.v))}catch(e){De(n,2,e)}return n}return this}return this.o=function(e){try{var o=e.v;1&e.s?De(n,1,t?t(o):o):r?De(n,1,r(o)):De(n,2,o)}catch(e){De(n,2,e)}},n},e}();function Ve(e){return e instanceof _e&&1&e.s}var xe=function(){try{return Promise.resolve(new Promise(function(e,r){try{return Be(),Promise.resolve(Ze()).then(function(r){return r.loggedIn&&Je(r)?e(r):Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"discovery.wallet\",\"challenge.handshake\"])).then(function(r){try{if(null==r)throw console.warn('Required value for \"discovery.wallet\" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration'),new Error('Required config value \"discovery.wallet\" is not defined')}catch(e){console.error(e)}return Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"discovery.wallet.method\",\"discovery.wallet.method.default\"],\"IFRAME/RPC\")).then(function(t){var n=function(e,n){try{var o=Me(function(){return Promise.resolve(Ae({service:{endpoint:r,method:t}})).then(function(e){return Promise.resolve(function(e){try{var t=(e=function(e){return e.addr=e.addr?(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.addr):null,e.paddr=e.paddr?(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.paddr):null,e}(e)).services||[];return Promise.resolve(function(e,t){try{if(null==e||null==t)return Promise.resolve([]);var r=new URL(e);return r.searchParams.append(\"code\",t),Promise.resolve(fetch(r,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}}).then(function(e){return e.json()})).then(function(e){if(Array.isArray(e))return e;var t=[];if(Array.isArray(e.authorizations))for(var r,n=M(e.authorizations);!(r=n()).done;)t.push(V({type:\"authz\",keyId:e.keyId},r.value));return null!=e.provider&&t.push(V({type:\"authn\",id:\"wallet-provider#authn\"},e.provider)),t})}catch(e){return Promise.reject(e)}}(e.hks,e.code)).then(function(r){var n,o,a=(n=t,o=r,void 0===n&&(n=[]),void 0===o&&(o=[]),[].concat(n,o)).map(function(t){return function(e,t){try{return K[e.type](e,t)}catch(t){return console.error(\"Unrecognized FCL Service Type [\"+e.type+\"]\",e,t),e}}(t,e)}),i=function(e,t){return t.find(function(e){return\"authn\"===e.type})}(0,a);return V({},z,{addr:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e.addr),cid:G(i),loggedIn:!0,services:a,expiresAt:e.exp})})}catch(e){return Promise.reject(e)}}(e)).then(function(e){(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.send)(We,ze,e)})})},function(e){console.error(\"Error while authenticating\",e)})}catch(e){return n(!0,e)}return o&&o.then?o.then(n.bind(null,!1),n.bind(null,!0)):n(!1,o)}(0,function(t,r){return Promise.resolve(Ze()).then(function(n){if(e(n),t)throw r;return r})});if(n&&n.then)return n.then(function(){})})})})}catch(e){return Promise.reject(e)}}))}catch(e){return Promise.reject(e)}};function Me(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}var We=\"CURRENT_USER\",Ue=\"CURRENT_USER/UPDATED\",ze=\"SET_CURRENT_USER\",He='{\\n  \"f_type\": \"User\",\\n  \"f_vsn\": \"1.0.0\",\\n  \"addr\":null,\\n  \"cid\":null,\\n  \"loggedIn\":null,\\n  \"expiresAt\":null,\\n  \"services\":[]\\n}',Ye=((fe={})[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.INIT]=function(e){try{return e.merge(JSON.parse(He)),Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"fcl.storage\",\"fcl.storage.default\"])).then(function(t){var r=function(){if(t.can)return Promise.resolve(function(e){try{var t=JSON.parse(He);return Promise.resolve(e.get(We)).then(function(r){return null!=r&&t.f_vsn!==r.f_vsn?(e.removeItem(We),t):r||t})}catch(e){return Promise.reject(e)}}(t)).then(function(t){Je(t)&&e.merge(t)})}();if(r&&r.then)return r.then(function(){})})}catch(e){return Promise.reject(e)}},fe[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.SUBSCRIBE]=function(e,t){e.subscribe(t.from),e.send(t.from,Ue,V({},e.all()))},fe[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UNSUBSCRIBE]=function(e,t){e.unsubscribe(t.from)},fe.SNAPSHOT=function(e,t){try{return t.reply(V({},e.all())),Promise.resolve()}catch(e){return Promise.reject(e)}},fe[ze]=function(e,r,n){try{return e.merge(n),Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"fcl.storage\",\"fcl.storage.default\"])).then(function(t){t.can&&t.put(We,e.all()),e.broadcast(Ue,V({},e.all()))})}catch(e){return Promise.reject(e)}},fe.DEL_CURRENT_USER=function(e,r){try{return e.merge(JSON.parse(He)),Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"fcl.storage\",\"fcl.storage.default\"])).then(function(t){t.can&&t.put(We,e.all()),e.broadcast(Ue,V({},e.all()))})}catch(e){return Promise.reject(e)}},fe),Be=function(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.spawn)(Ye,We)};function Je(e){return null==e.expiresAt||0===e.expiresAt||e.expiresAt>Date.now()}function qe(){Be(),(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.send)(We,\"DEL_CURRENT_USER\")}function Ke(e){var t=function(e){return{f_type:\"PreAuthzResponse\",f_vsn:\"1.0.0\",proposer:(e||{}).proposer,payer:(e||{}).payer||[],authorization:(e||{}).authorization||[]}}(e),r=[];null!=t.proposer&&r.push([\"PROPOSER\",t.proposer]);for(var n,o=M(t.payer||[]);!(n=o()).done;)r.push([\"PAYER\",n.value]);for(var a,i=M(t.authorization||[]);!(a=i()).done;)r.push([\"AUTHORIZER\",a.value]);return r.map(function(e){var t=e[0],r=e[1];return{tempId:[r.identity.address,r.identity.keyId].join(\"|\"),addr:r.identity.address,keyId:r.identity.keyId,signingFunction:function(e){return Ae({service:r,msg:e})},role:{proposer:\"PROPOSER\"===t,payer:\"PAYER\"===t,authorizer:\"AUTHORIZER\"===t}}})}function Ge(e){Be();var t=\"@EXIT\",r=(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.spawn)(function(r){try{var n;return r.send(We,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.SUBSCRIBE),Promise.resolve(function(e,t,r){for(var n;;){var o=e();if(Ve(o)&&(o=o.v),!o)return a;if(o.then){n=0;break}var a=r();if(a&&a.then){if(!Ve(a)){n=1;break}a=a.s}}var i=new _e,s=De.bind(null,i,2);return(0===n?o.then(u):1===n?a.then(c):(void 0).then(function(){(o=e())?o.then?o.then(u).then(void 0,s):u(o):De(i,1,a)})).then(void 0,s),i;function c(t){a=t;do{if(!(o=e())||Ve(o)&&!o.v)return void De(i,1,a);if(o.then)return void o.then(u).then(void 0,s);Ve(a=r())&&(a=a.v)}while(!a||!a.then);a.then(c).then(void 0,s)}function u(e){e?(a=r())&&a.then?a.then(c).then(void 0,s):c(a):De(i,1,a)}}(function(){return!n&&1},0,function(){return Promise.resolve(r.receive()).then(function(o){if(o.tag===t)return r.send(We,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UNSUBSCRIBE),void(n=1);e(o.data)})}))}catch(e){return Promise.reject(e)}});return function(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.send)(r,t)}}function Ze(){return Be(),(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.send)(We,\"SNAPSHOT\",null,{expectReply:!0,timeout:0})}var $e,Xe=function(e){return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(/^[0-9a-f]+$/i.test(e),\"Message must be a hex string\"),{message:e}},Qe=function(){return{authenticate:xe,unauthenticate:qe,authorization:Te,signUserMessage:je,verifyUserSignatures:ke,subscribe:Ge,snapshot:Ze}};Qe.authenticate=xe,Qe.unauthenticate=qe,Qe.authorization=Te,Qe.signUserMessage=je,Qe.verifyUserSignatures=ke,Qe.subscribe=Ge,Qe.snapshot=Ze;var et=function(e){try{return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.send)([(0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.getTransactionStatus)(e)]).then(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.decode))}catch(e){return Promise.reject(e)}},tt=function(e){return e.status>=4},rt=function(e){return e.status>=3},nt=function(e){return e.status>=2},ot=(($e={})[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.INIT]=function(e){try{return Promise.resolve(et(e.self())).then(function(t){tt(t)||setTimeout(function(){return e.sendSelf(\"POLL\")},2500),e.merge(t)})}catch(e){return Promise.reject(e)}},$e[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.SUBSCRIBE]=function(e,t){e.subscribe(t.from),e.send(t.from,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UPDATED,e.all())},$e[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UNSUBSCRIBE]=function(e,t){e.unsubscribe(t.from)},$e[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.SNAPSHOT]=function(e,t){try{return t.reply(e.all()),Promise.resolve()}catch(e){return Promise.reject(e)}},$e.POLL=function(e){try{return Promise.resolve(et(e.self())).then(function(t){var r,n;tt(t)||setTimeout(function(){return e.sendSelf(\"POLL\")},2500),r=e.all(),n=t,JSON.stringify(r)!==JSON.stringify(n)&&e.broadcast(_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UPDATED,t),e.merge(t)})}catch(e){return Promise.reject(e)}},$e),at=function(e){if(\"object\"==typeof e&&(e=e.transactionId),null==e)throw new Error(\"transactionId required\");return e},it=function(e){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.spawn)(ot,at(e))};function st(e){function t(t){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.subscriber)(at(e),it,t)}function r(e){return function(r){void 0===r&&(r={});var n=r.suppress||!1;return new Promise(function(r,o){var a=t(function(t){t.statusCode&&!n?(o(t.errorMessage),a()):e(t)&&(r(t),a())})})}}return{snapshot:function(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.snapshoter)(e,it)},subscribe:t,onceFinalized:r(nt),onceExecuted:r(rt),onceSealed:r(tt)}}st.isUnknown=function(e){return e.status>=0},st.isPending=function(e){return e.status>=1},st.isFinalized=nt,st.isExecuted=rt,st.isSealed=tt,st.isExpired=function(e){return 5===e.status};var ct,ut=function(t){void 0===t&&(t={});try{return Promise.resolve(function(r,n){try{var o=Promise.resolve(function(t){try{return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(O(t),\"mutate(opts) -- opts is required\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(N(t),\"mutate(opts) -- opts must be an object\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(O(t.cadence),\"mutate({ cadence }) -- cadence is required\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(D(t.cadence),\"mutate({ cadence }) -- cadence must be a string\"),Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.get(\"accessNode.api\")).then(function(e){(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(e,'Required value for \"accessNode.api\" not defined in config. See: https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration')})}catch(e){return Promise.reject(e)}}(t)).then(function(){return Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config().get(\"fcl.authz\",Qe().authorization)).then(function(r){return _onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.send([_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.transaction(t.cadence),_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.args(T(t.args||[])),t.limit&&j(t.limit)&&_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.limit(t.limit),_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.proposer(t.proposer||t.authz||r),_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.payer(t.payer||t.authz||r),_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.authorizations(t.authorizations||[t.authz||r])]).then(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.decode)})})}catch(e){return n(e)}return o&&o.then?o.then(void 0,n):o}(0,function(e){throw e}))}catch(e){return Promise.reject(e)}},dt=function(e,r){void 0===e&&(e=[]),void 0===r&&(r={});try{return Promise.resolve(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config.first([\"sdk.resolve\"],r.resolve||_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.resolve)).then(function(t){function r(){return Promise.resolve(t(e)).then(function(e){return JSON.stringify((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.createSignableVoucher)(e),null,2)})}var n=function(){if(Array.isArray(e))return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.interaction)(),e)).then(function(t){e=t})}();return n&&n.then?n.then(r):r()})}catch(e){return Promise.reject(e)}},lt=function(e){try{var r=setTimeout;return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.config)().get(\"fcl.eventPollRate\",1e4)).then(function(t){return r(function(){return e.sendSelf(\"TICK\")},t)})}catch(e){return Promise.reject(e)}},ft=((ct={}).TICK=function(e){try{if(!e.hasSubs())return Promise.resolve();var t=e.get(\"hwm\"),r=function(){if(null==t){var r=e.put;return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.latestBlock)()).then(function(t){r.call(e,\"hwm\",t);var n=e.put;return Promise.resolve(lt(e)).then(function(t){n.call(e,\"tick\",t)})})}return Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.latestBlock)()).then(function(r){return e.put(\"hwm\",r),Promise.resolve((0,_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.send)([getEvents(e.self(),t.height,r.height-1)]).then(_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.decode)).then(function(t){for(var r,n=M(t);!(r=n()).done;)e.broadcast(\"UPDATED\",r.value.data);var o=e.put;return Promise.resolve(lt(e)).then(function(t){o.call(e,\"tick\",t)})})})}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},ct[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.SUBSCRIBE]=function(e,t){try{var r=function(){e.subscribe(t.from)},n=function(){if(!e.hasSubs()){var t=e.put;return Promise.resolve(lt(e)).then(function(r){t.call(e,\"tick\",r)})}}();return Promise.resolve(n&&n.then?n.then(r):r())}catch(e){return Promise.reject(e)}},ct[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.UNSUBSCRIBE]=function(e,t){e.unsubscribe(t.from),e.hasSubs()||(clearTimeout(e.get(\"tick\")),e.delete(\"tick\"),e.delete(\"hwm\"))},ct),pt=function(e){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.spawn)(ft,e)};function ht(e){return{subscribe:function(t){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_3__.subscriber)(e,pt,t)}}}var vt=function(e,t){void 0===t&&(t={}),window.location!==window.parent.location?window.parent.postMessage(V({},t,{type:e}),\"*\"):window.opener.postMessage(V({},t,{type:e}),\"*\")},mt={__proto__:null,sendMsgToFCL:vt,close:function(){vt(\"FCL:VIEW:CLOSE\")},approve:function(e){vt(\"FCL:VIEW:RESPONSE\",{f_type:\"PollingResponse\",f_vsn:\"1.0.0\",status:\"APPROVED\",reason:null,data:e})},decline:function(e){vt(\"FCL:VIEW:RESPONSE\",{f_type:\"PollingResponse\",f_vsn:\"1.0.0\",status:\"DECLINED\",reason:e,data:null})},onMessageFromFCL:function(e,t){void 0===t&&(t=function(){});var r=function(r){var n=r.data;\"object\"==typeof n&&null!=typeof n&&n.type===e&&t(function(e){var t;return e.deprecated&&console.warn(\"DEPRECATION NOTICE\",e.deprecated.message),null==e||null==(t=e.body)||delete t.interaction,e}(n))};return window.addEventListener(\"message\",r),function(){return window.removeEventListener(\"message\",r)}},encodeMessageFromSignable:_onflow_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeMessageFromSignable,CompositeSignature:function(e,t,r){this.f_type=Y.f_type,this.f_vsn=Y.f_vsn,this.addr=(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_4__.withPrefix)(e),this.keyId=Number(t),this.signature=r}},yt=function(){return Qe().authenticate()},Et=function(){return Qe().unauthenticate()},gt=function(){return Qe().unauthenticate(),Qe().authenticate()},Pt=function(){return Qe().authenticate()},Ct=function(){return Qe().authenticate()},Rt=Qe().authorization,St=_onflow_types__WEBPACK_IMPORTED_MODULE_2__;\n//# sourceMappingURL=fcl.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/fcl/dist/fcl.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/fcl/node_modules/@onflow/types/dist/types.module.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@onflow/fcl/node_modules/@onflow/types/dist/types.module.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Address\": () => (/* binding */ N),\n/* harmony export */   \"Array\": () => (/* binding */ V),\n/* harmony export */   \"Bool\": () => (/* binding */ R),\n/* harmony export */   \"Character\": () => (/* binding */ O),\n/* harmony export */   \"Dictionary\": () => (/* binding */ P),\n/* harmony export */   \"Event\": () => (/* binding */ G),\n/* harmony export */   \"Fix64\": () => (/* binding */ w),\n/* harmony export */   \"Identity\": () => (/* binding */ c),\n/* harmony export */   \"Int\": () => (/* binding */ p),\n/* harmony export */   \"Int128\": () => (/* binding */ E),\n/* harmony export */   \"Int16\": () => (/* binding */ s),\n/* harmony export */   \"Int256\": () => (/* binding */ U),\n/* harmony export */   \"Int32\": () => (/* binding */ g),\n/* harmony export */   \"Int64\": () => (/* binding */ I),\n/* harmony export */   \"Int8\": () => (/* binding */ d),\n/* harmony export */   \"Optional\": () => (/* binding */ C),\n/* harmony export */   \"Reference\": () => (/* binding */ D),\n/* harmony export */   \"Resource\": () => (/* binding */ T),\n/* harmony export */   \"String\": () => (/* binding */ j),\n/* harmony export */   \"Struct\": () => (/* binding */ q),\n/* harmony export */   \"UFix64\": () => (/* binding */ h),\n/* harmony export */   \"UInt\": () => (/* binding */ a),\n/* harmony export */   \"UInt128\": () => (/* binding */ x),\n/* harmony export */   \"UInt16\": () => (/* binding */ v),\n/* harmony export */   \"UInt256\": () => (/* binding */ S),\n/* harmony export */   \"UInt32\": () => (/* binding */ y),\n/* harmony export */   \"UInt64\": () => (/* binding */ m),\n/* harmony export */   \"UInt8\": () => (/* binding */ l),\n/* harmony export */   \"Void\": () => (/* binding */ B),\n/* harmony export */   \"Word16\": () => (/* binding */ b),\n/* harmony export */   \"Word32\": () => (/* binding */ W),\n/* harmony export */   \"Word64\": () => (/* binding */ k),\n/* harmony export */   \"Word8\": () => (/* binding */ A),\n/* harmony export */   \"_Array\": () => (/* binding */ V)\n/* harmony export */ });\nvar t=function(t,n,e){return{label:t,asArgument:n,asInjection:e}},n=function(t){return Array.isArray(t)},e=function(t){return\"object\"==typeof t},r=function(t){return null==t},u=function(t){return\"number\"==typeof t},i=function(t){return Number.isInteger(t)},o=function(t){return\"string\"==typeof t},f=function(t){throw new Error(\"Type Error: \"+t)},c=t(\"Identity\",function(t){return t},function(t){return t}),a=t(\"UInt\",function(t){if(u(t)&&i(t))return{type:\"UInt\",value:t.toString()};f(\"Expected Positive Integer for type Unsigned Int\")},function(t){return t}),p=t(\"Int\",function(t){if(u(t)&&i(t))return{type:\"Int\",value:t.toString()};f(\"Expected Integer for type Int\")},function(t){return t}),l=t(\"UInt8\",function(t){if(u(t)&&i(t))return{type:\"UInt8\",value:t.toString()};f(\"Expected integer for UInt8\")},function(t){return t}),d=t(\"Int8\",function(t){if(u(t)&&i(t))return{type:\"Int8\",value:t.toString()};f(\"Expected positive integer for Int8\")},function(t){return t}),v=t(\"UInt16\",function(t){if(u(t)&&i(t))return{type:\"UInt16\",value:t.toString()};f(\"Expected integer for UInt16\")},function(t){return t}),s=t(\"Int16\",function(t){if(u(t)&&i(t))return{type:\"Int16\",value:t.toString()};f(\"Expected positive integer for Int16\")},function(t){return t}),y=t(\"UInt32\",function(t){if(u(t)&&i(t))return{type:\"UInt32\",value:t.toString()};f(\"Expected integer for UInt32\")},function(t){return t}),g=t(\"Int32\",function(t){if(u(t)&&i(t))return{type:\"Int32\",value:t.toString()};f(\"Expected positive integer for Int32\")},function(t){return t}),m=t(\"UInt64\",function(t){if(u(t)&&i(t))return{type:\"UInt64\",value:t.toString()};f(\"Expected integer for UInt64\")},function(t){return t}),I=t(\"Int64\",function(t){if(u(t)&&i(t))return{type:\"Int64\",value:t.toString()};f(\"Expected positive integer for Int64\")},function(t){return t}),x=t(\"UInt128\",function(t){if(u(t)&&i(t))return{type:\"UInt128\",value:t.toString()};f(\"Expected integer for UInt128\")},function(t){return t}),E=t(\"Int128\",function(t){if(u(t)&&i(t))return{type:\"Int128\",value:t.toString()};f(\"Expected positive integer for Int128\")},function(t){return t}),S=t(\"UInt256\",function(t){if(u(t)&&i(t))return{type:\"UInt256\",value:t.toString()};f(\"Expected integer for UInt256\")},function(t){return t}),U=t(\"Int256\",function(t){if(u(t)&&i(t))return{type:\"Int256\",value:t.toString()};f(\"Expected integer for Int256\")},function(t){return t}),A=t(\"Word8\",function(t){if(u(t)&&i(t))return{type:\"Word8\",value:t.toString()};f(\"Expected positive number for Word8\")},function(t){return t}),b=t(\"Word16\",function(t){if(u(t)&&i(t))return{type:\"Word16\",value:t.toString()};f(\"Expected positive number for Word16\")},function(t){return t}),W=t(\"Word32\",function(t){if(u(t)&&i(t))return{type:\"Word32\",value:t.toString()};f(\"Expected positive number for Word32\")},function(t){return t}),k=t(\"Word64\",function(t){if(u(t)&&i(t))return{type:\"Word64\",value:t.toString()};f(\"Expected positive number for Word64\")},function(t){return t}),F=function(){console.error(\"\\n          %c@onflow/types Deprecation Notice\\n          ========================\\n\\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\\n\\n          =======================\\n        \".replace(/\\n\\s+/g,\"\\n\").trim(),\"font-weight:bold;font-family:monospace;\")},h=t(\"UFix64\",function(t){return o(t)?{type:\"UFix64\",value:t}:u(t)?(F(),{type:\"UFix64\",value:t.toString()}):void f(\"Expected String for UFix64\")},function(t){return t}),w=t(\"Fix64\",function(t){return o(t)?{type:\"Fix64\",value:t}:u(t)?(F(),{type:\"Fix64\",value:t.toString()}):void f(\"Expected String for Fix64\")},function(t){return t}),j=t(\"String\",function(t){if(o(t))return{type:\"String\",value:t};f(\"Expected String for type String\")},function(t){return t}),O=t(\"Character\",function(t){if(o(t))return{type:\"Character\",value:t};f(\"Expected Character for type Character\")},function(t){return t}),R=t(\"Bool\",function(t){if(\"boolean\"==typeof t)return{type:\"Bool\",value:t};f(\"Expected Boolean for type Bool\")},function(t){return t}),N=t(\"Address\",function(t){if(o(t))return{type:\"Address\",value:t};f(\"Expected Address for type Address\")},function(t){return t}),B=t(\"Void\",function(t){if(!t||r(t))return{type:\"Void\"};f(\"Expected Void for type Void\")},function(t){return t}),C=function(n){return t(\"Optional\",function(t){return{type:\"Optional\",value:r(t)?null:n.asArgument(t)}},function(t){return t})},D=t(\"Reference\",function(t){if(e(t))return{type:\"Reference\",value:t};f(\"Expected Object for type Reference\")},function(t){return t}),V=function(e){return void 0===e&&(e=[]),t(\"Array\",function(t){return{type:\"Array\",value:n(e)?e.map(function(n,e){return n.asArgument(t[e])}):t.map(function(t){return e.asArgument(t)})}},function(t){return t})},P=function(r){return void 0===r&&(r=[]),t(\"Dictionary\",function(t){if(e(t))return{type:\"Dictionary\",value:n(r)?r.map(function(n,e){return{key:n.key.asArgument(t[e].key),value:n.value.asArgument(t[e].value)}}):n(t)?t.map(function(t){return{key:r.key.asArgument(t.key),value:r.value.asArgument(t.value)}}):[{key:r.key.asArgument(t.key),value:r.value.asArgument(t.value)}]};f(\"Expected Object for type Dictionary\")},function(t){return t})},G=function(r,u){return void 0===u&&(u=[]),t(\"Event\",function(t){if(e(t))return{type:\"Event\",value:{id:r,fields:n(u)?u.map(function(n,e){return{name:t.fields[e].name,value:n.value.asArgument(t.fields[e].value)}}):t.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};f(\"Expected Object for type Event\")},function(t){return t})},T=function(r,u){return void 0===u&&(u=[]),t(\"Resource\",function(t){if(e(t))return{type:\"Resource\",value:{id:r,fields:n(u)?u.map(function(n,e){return{name:t.fields[e].name,value:n.value.asArgument(t.fields[e].value)}}):t.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};f(\"Expected Object for type Resource\")},function(t){return t})},q=function(r,u){return void 0===u&&(u=[]),t(\"Struct\",function(t){if(e(t))return{type:\"Struct\",value:{id:r,fields:n(u)?u.map(function(n,e){return{name:t.fields[e].name,value:n.value.asArgument(t.fields[e].value)}}):t.fields.map(function(t){return{name:t.name,value:u.value.asArgument(t.value)}})}};f(\"Expected Object for type Struct\")},function(t){return t})};\n//# sourceMappingURL=types.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/fcl/node_modules/@onflow/types/dist/types.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/protobuf/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@onflow/protobuf/dist/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nmodule.exports=function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)o.d(r,s,function(t){return e[t]}.bind(null,s));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=21)}([function(module,exports){var $jscomp=$jscomp||{};$jscomp.scope={},$jscomp.findInternal=function(e,t,o){e instanceof String&&(e=String(e));for(var r=e.length,s=0;s<r;s++){var n=e[s];if(t.call(o,n,s,e))return{i:s,v:n}}return{i:-1,v:void 0}},$jscomp.ASSUME_ES5=!1,$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.SIMPLE_FROUND_POLYFILL=!1,$jscomp.defineProperty=$jscomp.ASSUME_ES5||\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,t,o){e!=Array.prototype&&e!=Object.prototype&&(e[t]=o.value)},$jscomp.getGlobal=function(e){return\"undefined\"!=typeof window&&window===e?e:\"undefined\"!=typeof __webpack_require__.g&&null!=__webpack_require__.g?__webpack_require__.g:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(e,t,o,r){if(t){for(o=$jscomp.global,e=e.split(\".\"),r=0;r<e.length-1;r++){var s=e[r];s in o||(o[s]={}),o=o[s]}(t=t(r=o[e=e[e.length-1]]))!=r&&null!=t&&$jscomp.defineProperty(o,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill(\"Array.prototype.findIndex\",(function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).i}}),\"es6\",\"es3\"),$jscomp.checkStringArgs=function(e,t,o){if(null==e)throw new TypeError(\"The 'this' value for String.prototype.\"+o+\" must not be null or undefined\");if(t instanceof RegExp)throw new TypeError(\"First argument to String.prototype.\"+o+\" must not be a regular expression\");return e+\"\"},$jscomp.polyfill(\"String.prototype.endsWith\",(function(e){return e||function(e,t){var o=$jscomp.checkStringArgs(this,e,\"endsWith\");e+=\"\",void 0===t&&(t=o.length),t=Math.max(0,Math.min(0|t,o.length));for(var r=e.length;0<r&&0<t;)if(o[--t]!=e[--r])return!1;return 0>=r}}),\"es6\",\"es3\"),$jscomp.polyfill(\"Array.prototype.find\",(function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}}),\"es6\",\"es3\"),$jscomp.polyfill(\"String.prototype.startsWith\",(function(e){return e||function(e,t){var o=$jscomp.checkStringArgs(this,e,\"startsWith\");e+=\"\";var r=o.length,s=e.length;t=Math.max(0,Math.min(0|t,o.length));for(var n=0;n<s&&t<r;)if(o[t++]!=e[n++])return!1;return n>=s}}),\"es6\",\"es3\"),$jscomp.polyfill(\"String.prototype.repeat\",(function(e){return e||function(e){var t=$jscomp.checkStringArgs(this,null,\"repeat\");if(0>e||1342177279<e)throw new RangeError(\"Invalid count value\");e|=0;for(var o=\"\";e;)1&e&&(o+=t),(e>>>=1)&&(t+=t);return o}}),\"es6\",\"es3\");var COMPILED=!0,goog=goog||{};goog.global=this||self,goog.isDef=function(e){return void 0!==e},goog.isString=function(e){return\"string\"==typeof e},goog.isBoolean=function(e){return\"boolean\"==typeof e},goog.isNumber=function(e){return\"number\"==typeof e},goog.exportPath_=function(e,t,o){e=e.split(\".\"),o=o||goog.global,e[0]in o||void 0===o.execScript||o.execScript(\"var \"+e[0]);for(var r;e.length&&(r=e.shift());)!e.length&&goog.isDef(t)?o[r]=t:o=o[r]&&o[r]!==Object.prototype[r]?o[r]:o[r]={}},goog.define=function(e,t){if(!COMPILED){var o=goog.global.CLOSURE_UNCOMPILED_DEFINES,r=goog.global.CLOSURE_DEFINES;o&&void 0===o.nodeType&&Object.prototype.hasOwnProperty.call(o,e)?t=o[e]:r&&void 0===r.nodeType&&Object.prototype.hasOwnProperty.call(r,e)&&(t=r[e])}return t},goog.FEATURESET_YEAR=2012,goog.DEBUG=!0,goog.LOCALE=\"en\",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(e){if(goog.isInModuleLoader_())throw Error(\"goog.provide cannot be used within a module.\");if(!COMPILED&&goog.isProvided_(e))throw Error('Namespace \"'+e+'\" already declared.');goog.constructNamespace_(e)},goog.constructNamespace_=function(e,t){if(!COMPILED){delete goog.implicitNamespaces_[e];for(var o=e;(o=o.substring(0,o.lastIndexOf(\".\")))&&!goog.getObjectByName(o);)goog.implicitNamespaces_[o]=!0}goog.exportPath_(e,t)},goog.getScriptNonce=function(e){return e&&e!=goog.global?goog.getScriptNonce_(e.document):(null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document)),goog.cspNonce_)},goog.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/,goog.cspNonce_=null,goog.getScriptNonce_=function(e){return(e=e.querySelector&&e.querySelector(\"script[nonce]\"))&&(e=e.nonce||e.getAttribute(\"nonce\"))&&goog.NONCE_PATTERN_.test(e)?e:\"\"},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(e){if(!goog.isString(e)||!e||-1==e.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInGoogModuleLoader_())throw Error(\"Module \"+e+\" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");if(goog.moduleLoaderState_.moduleName=e,!COMPILED){if(goog.isProvided_(e))throw Error('Namespace \"'+e+'\" already declared.');delete goog.implicitNamespaces_[e]}},goog.module.get=function(e){return goog.module.getInternal_(e)},goog.module.getInternal_=function(e){if(!COMPILED){if(e in goog.loadedModules_)return goog.loadedModules_[e].exports;if(!goog.implicitNamespaces_[e])return null!=(e=goog.getObjectByName(e))?e:null}return null},goog.ModuleType={ES6:\"es6\",GOOG:\"goog\"},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()},goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG},goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var e=goog.global.$jscomp;return!!e&&(\"function\"==typeof e.getCurrentModulePath&&!!e.getCurrentModulePath())},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.declareModuleId=function(e){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error(\"goog.declareModuleId may only be called once per module.\");if(e in goog.loadedModules_)throw Error('Module with namespace \"'+e+'\" already exists.')}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=e;else{var t=goog.global.$jscomp;if(!t||\"function\"!=typeof t.getCurrentModulePath)throw Error('Module with namespace \"'+e+'\" has been loaded incorrectly.');t=t.require(t.getCurrentModulePath()),goog.loadedModules_[e]={exports:t,type:goog.ModuleType.ES6,moduleId:e}}},goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||\"\",Error(\"Importing test-only code into non-debug environment\"+(e?\": \"+e:\".\"))},goog.forwardDeclare=function(e){},COMPILED||(goog.isProvided_=function(e){return e in goog.loadedModules_||!goog.implicitNamespaces_[e]&&goog.isDefAndNotNull(goog.getObjectByName(e))},goog.implicitNamespaces_={\"goog.module\":!0}),goog.getObjectByName=function(e,t){e=e.split(\".\"),t=t||goog.global;for(var o=0;o<e.length;o++)if(t=t[e[o]],!goog.isDefAndNotNull(t))return null;return t},goog.globalize=function(e,t){for(var o in t=t||goog.global,e)t[o]=e[o]},goog.addDependency=function(e,t,o,r){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(e,t,o,r)},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)},goog.require=function(e){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(e),goog.isProvided_(e)){if(goog.isInModuleLoader_())return goog.module.getInternal_(e)}else if(goog.ENABLE_DEBUG_LOADER){var t=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(e)}finally{goog.moduleLoaderState_=t}}return null}},goog.requireType=function(e){return{}},goog.basePath=\"\",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\")},goog.addSingletonGetter=function(e){e.instance_=void 0,e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.TRANSPILE=\"detect\",goog.ASSUME_ES_MODULES_TRANSPILED=!1,goog.TRANSPILE_TO_LANGUAGE=\"\",goog.TRANSPILER=\"transpile.js\",goog.hasBadLetScoping=null,goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('\"use strict\";let x = 1; function f() { return typeof x; };f() == \"number\";')}catch(e){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping},goog.workaroundSafari10EvalBug=function(e){return\"(function(){\"+e+\"\\n;})();\\n\"},goog.loadModule=function(e){var t=goog.moduleLoaderState_;try{if(goog.moduleLoaderState_={moduleName:\"\",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG},goog.isFunction(e))var o=e.call(void 0,{});else{if(!goog.isString(e))throw Error(\"Invalid module definition\");goog.useSafari10Workaround()&&(e=goog.workaroundSafari10EvalBug(e)),o=goog.loadModuleFromSource_.call(void 0,e)}var r=goog.moduleLoaderState_.moduleName;if(!goog.isString(r)||!r)throw Error('Invalid module name \"'+r+'\"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(r,o):goog.SEAL_MODULE_EXPORTS&&Object.seal&&\"object\"==typeof o&&null!=o&&Object.seal(o),goog.loadedModules_[r]={exports:o,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName}}finally{goog.moduleLoaderState_=t}},goog.loadModuleFromSource_=function(a){return eval(a),{}},goog.normalizePath_=function(e){e=e.split(\"/\");for(var t=0;t<e.length;)\".\"==e[t]?e.splice(t,1):t&&\"..\"==e[t]&&e[t-1]&&\"..\"!=e[t-1]?e.splice(--t,2):t++;return e.join(\"/\")},goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);try{var t=new goog.global.XMLHttpRequest;return t.open(\"get\",e,!1),t.send(),0==t.status||200==t.status?t.responseText:null}catch(e){return null}},goog.transpile_=function(e,t,o){var r=goog.global.$jscomp;r||(goog.global.$jscomp=r={});var s=r.transpile;if(!s){var n=goog.basePath+goog.TRANSPILER,i=goog.loadFileSync_(n);if(i){if(function(){(0,eval)(i+\"\\n//# sourceURL=\"+n)}.call(goog.global),goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the \"transpile\" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile,s=(r=goog.global.$jscomp).transpile}}return s||(s=r.transpile=function(e,t){return goog.logToConsole_(t+\" requires transpilation but no transpiler was found.\"),e}),s(e,t,o)},goog.typeOf=function(e){var t=typeof e;if(\"object\"==t){if(!e)return\"null\";if(e instanceof Array)return\"array\";if(e instanceof Object)return t;var o=Object.prototype.toString.call(e);if(\"[object Window]\"==o)return\"object\";if(\"[object Array]\"==o||\"number\"==typeof e.length&&void 0!==e.splice&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==o||void 0!==e.call&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable(\"call\"))return\"function\"}else if(\"function\"==t&&void 0===e.call)return\"object\";return t},goog.isNull=function(e){return null===e},goog.isDefAndNotNull=function(e){return null!=e},goog.isArray=function(e){return\"array\"==goog.typeOf(e)},goog.isArrayLike=function(e){var t=goog.typeOf(e);return\"array\"==t||\"object\"==t&&\"number\"==typeof e.length},goog.isDateLike=function(e){return goog.isObject(e)&&\"function\"==typeof e.getFullYear},goog.isFunction=function(e){return\"function\"==goog.typeOf(e)},goog.isObject=function(e){var t=typeof e;return\"object\"==t&&null!=e||\"function\"==t},goog.getUid=function(e){return e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]},goog.removeUid=function(e){null!==e&&\"removeAttribute\"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch(e){}},goog.UID_PROPERTY_=\"closure_uid_\"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(e){var t=goog.typeOf(e);if(\"object\"==t||\"array\"==t){if(\"function\"==typeof e.clone)return e.clone();for(var o in t=\"array\"==t?[]:{},e)t[o]=goog.cloneObject(e[o]);return t}return e},goog.bindNative_=function(e,t,o){return e.call.apply(e.bind,arguments)},goog.bindJs_=function(e,t,o){if(!e)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var o=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(o,r),e.apply(t,o)}}return function(){return e.apply(t,arguments)}},goog.bind=function(e,t,o){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(e,t){var o=Array.prototype.slice.call(arguments,1);return function(){var t=o.slice();return t.push.apply(t,arguments),e.apply(this,t)}},goog.mixin=function(e,t){for(var o in t)e[o]=t[o]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(e){if(goog.global.execScript)goog.global.execScript(e,\"JavaScript\");else{if(!goog.global.eval)throw Error(\"goog.globalEval not available\");if(null==goog.evalWorksForGlobals_){try{goog.global.eval(\"var _evalTest_ = 1;\")}catch(e){}if(void 0!==goog.global._evalTest_){try{delete goog.global._evalTest_}catch(e){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(e);else{var t=goog.global.document,o=t.createElement(\"SCRIPT\");o.type=\"text/javascript\",o.defer=!1,o.appendChild(t.createTextNode(e)),t.head.appendChild(o),t.head.removeChild(o)}}},goog.evalWorksForGlobals_=null,goog.getCssName=function(e,t){if(\".\"==String(e).charAt(0))throw Error('className passed in goog.getCssName must not start with \".\". You passed: '+e);var o=function(e){return goog.cssNameMapping_[e]||e},r=function(e){e=e.split(\"-\");for(var t=[],r=0;r<e.length;r++)t.push(o(e[r]));return t.join(\"-\")};return r=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?o:r:function(e){return e},e=t?e+\"-\"+r(t):r(e),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(e):e},goog.setCssNameMapping=function(e,t){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=t},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(e,t,o){return o&&o.html&&(e=e.replace(/</g,\"&lt;\")),t&&(e=e.replace(/\\{\\$([^}]+)}/g,(function(e,o){return null!=t&&o in t?t[o]:e}))),e},goog.getMsgWithFallback=function(e,t){return e},goog.exportSymbol=function(e,t,o){goog.exportPath_(e,t,o)},goog.exportProperty=function(e,t,o){e[t]=o},goog.inherits=function(e,t){function o(){}o.prototype=t.prototype,e.superClass_=t.prototype,e.prototype=new o,e.prototype.constructor=e,e.base=function(e,o,r){for(var s=Array(arguments.length-2),n=2;n<arguments.length;n++)s[n-2]=arguments[n];return t.prototype[o].apply(e,s)}},goog.base=function(e,t,o){var r=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!r)throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");if(void 0!==r.superClass_){for(var s=Array(arguments.length-1),n=1;n<arguments.length;n++)s[n-1]=arguments[n];return r.superClass_.constructor.apply(e,s)}if(\"string\"!=typeof t&&\"symbol\"!=typeof t)throw Error(\"method names provided to goog.base must be a string or a symbol\");for(s=Array(arguments.length-2),n=2;n<arguments.length;n++)s[n-2]=arguments[n];n=!1;for(var i=e.constructor.prototype;i;i=Object.getPrototypeOf(i))if(i[t]===r)n=!0;else if(n)return i[t].apply(e,s);if(e[t]===r)return e.constructor.prototype[t].apply(e,s);throw Error(\"goog.base called from a method of one name to a method of a different name\")},goog.scope=function(e){if(goog.isInModuleLoader_())throw Error(\"goog.scope is not supported within a module.\");e.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(e,t){var o=t.constructor,r=t.statics;return o&&o!=Object.prototype.constructor||(o=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\")}),o=goog.defineClass.createSealingConstructor_(o,e),e&&goog.inherits(o,e),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(o.prototype,t),null!=r&&(r instanceof Function?r(o):goog.defineClass.applyProperties_(o,r)),o},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(e,t){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return e;var o=!goog.defineClass.isUnsealable_(t),r=function(){var t=e.apply(this,arguments)||this;return t[goog.UID_PROPERTY_]=t[goog.UID_PROPERTY_],this.constructor===r&&o&&Object.seal instanceof Function&&Object.seal(t),t};return r},goog.defineClass.isUnsealable_=function(e){return e&&e.prototype&&e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),goog.defineClass.applyProperties_=function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);for(var r=0;r<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;r++)o=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[r],Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},goog.tagUnsealableClass=function(e){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)},goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_=\"goog_defineClass_legacy_unsealable\",!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var e=goog.global.document;return null!=e&&\"write\"in e},goog.isDocumentLoading_=function(){var e=goog.global.document;return e.attachEvent?\"complete\"!=e.readyState:\"loading\"==e.readyState},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var e=goog.global.document,t=e.currentScript;for(t=(e=t?[t]:e.getElementsByTagName(\"SCRIPT\")).length-1;0<=t;--t){var o=e[t].src,r=o.lastIndexOf(\"?\");if(r=-1==r?o.length:r,\"base.js\"==o.substr(r-7,7)){goog.basePath=o.substr(0,r-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null,this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(t,o){e?d[t]=!0:o()?(c=t,d[t]=!1):e=d[t]=!0}function b(a){try{return!!eval(a)}catch(e){return!1}}var c=\"es3\",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:\"\";return a(\"es5\",(function(){return b(\"[1,].length==1\")})),a(\"es6\",(function(){return!f.match(/Edge\\/(\\d+)(\\.\\d)*/i)&&b('(()=>{\"use strict\";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')})),a(\"es7\",(function(){return b(\"2 ** 2 == 4\")})),a(\"es8\",(function(){return b(\"async () => 1, true\")})),a(\"es9\",(function(){return b(\"({...rest} = {}), true\")})),a(\"es_next\",(function(){return!1})),{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(e,t){if(\"always\"==goog.TRANSPILE)return!0;if(\"never\"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var o=this.createRequiresTranspilation_();this.requiresTranspilation_=o.map,this.transpilationTarget_=this.transpilationTarget_||o.target}if(e in this.requiresTranspilation_)return!!this.requiresTranspilation_[e]||!(!goog.inHtmlDocument_()||\"es6\"!=t||\"noModule\"in goog.global.document.createElement(\"script\"));throw Error(\"Unknown language mode: \"+e)},goog.Transpiler.prototype.transpile=function(e,t){return goog.transpile_(e,t,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(e){return e.replace(/<\\/(SCRIPT)/gi,\"\\\\x3c/$1\")},goog.DebugLoader_=function(){this.dependencies_={},this.idToPath_={},this.written_={},this.loadingDeps_=[],this.depsToLoad_=[],this.paused_=!1,this.factory_=new goog.DependencyFactory(goog.transpiler_),this.deferredCallbacks_={},this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(e,t){function o(){r&&(goog.global.setTimeout(r,0),r=null)}var r=t;if(e.length){t=[];for(var s=0;s<e.length;s++){var n=this.getPathFromDeps_(e[s]);if(!n)throw Error(\"Unregonized namespace: \"+e[s]);t.push(this.dependencies_[n])}n=goog.require;var i=0;for(s=0;s<e.length;s++)n(e[s]),t[s].onLoad((function(){++i==e.length&&o()}))}else o()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+\"deps.js\"),\"deps.js\",[],[],{},!1)),this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(e,t){(e=this.getPathFromDeps_(e))&&(t||this.areDepsLoaded_(this.dependencies_[e].requires))&&(t=this.deferredCallbacks_[e])&&(delete this.deferredCallbacks_[e],t())},goog.DebugLoader_.prototype.setDependencyFactory=function(e){this.factory_=e},goog.DebugLoader_.prototype.load_=function(e){if(!this.getPathFromDeps_(e))throw e=\"goog.require could not find: \"+e,goog.logToConsole_(e),Error(e);var t=this,o=[],r=function(e){var s=t.getPathFromDeps_(e);if(!s)throw Error(\"Bad dependency path or symbol: \"+e);if(!t.written_[s]){for(t.written_[s]=!0,e=t.dependencies_[s],s=0;s<e.requires.length;s++)goog.isProvided_(e.requires[s])||r(e.requires[s]);o.push(e)}};r(e),e=!!this.depsToLoad_.length,this.depsToLoad_=this.depsToLoad_.concat(o),this.paused_||e||this.loadDeps_()},goog.DebugLoader_.prototype.loadDeps_=function(){for(var e=this,t=this.paused_;this.depsToLoad_.length&&!t;)!function(){var o=!1,r=e.depsToLoad_.shift(),s=!1;e.loading_(r);var n={pause:function(){if(o)throw Error(\"Cannot call pause after the call to load.\");t=!0},resume:function(){o?e.resume_():t=!1},loaded:function(){if(s)throw Error(\"Double call to loaded.\");s=!0,e.loaded_(r)},pending:function(){for(var t=[],o=0;o<e.loadingDeps_.length;o++)t.push(e.loadingDeps_[o]);return t},setModuleState:function(e){goog.moduleLoaderState_={type:e,moduleName:\"\",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(e,t,o){o&&(goog.loadedModules_[o]={exports:t,type:goog.ModuleType.ES6,moduleId:o||\"\"})},registerGoogModuleExports:function(e,t){goog.loadedModules_[e]={exports:t,type:goog.ModuleType.GOOG,moduleId:e}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(t){if(o)throw Error(\"Cannot register with defer after the call to load.\");e.defer_(r,t)},areDepsLoaded:function(){return e.areDepsLoaded_(r.requires)}};try{r.load(n)}finally{o=!0}}();t&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(e){this.loadingDeps_.push(e)},goog.DebugLoader_.prototype.loaded_=function(e){for(var t=0;t<this.loadingDeps_.length;t++)if(this.loadingDeps_[t]==e){this.loadingDeps_.splice(t,1);break}for(t=0;t<this.deferredQueue_.length;t++)if(this.deferredQueue_[t]==e.path){this.deferredQueue_.splice(t,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);e.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(e){for(var t=0;t<e.length;t++){var o=this.getPathFromDeps_(e[t]);if(!o||!(o in this.deferredCallbacks_)&&!goog.isProvided_(e[t]))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(e){return e in this.idToPath_?this.idToPath_[e]:e in this.dependencies_?e:null},goog.DebugLoader_.prototype.defer_=function(e,t){this.deferredCallbacks_[e.path]=t,this.deferredQueue_.push(e.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(e,t,o){},goog.LoadController.prototype.setModuleState=function(e){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(e){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(e,t,o,r,s){this.path=e,this.relativePath=t,this.provides=o,this.requires=r,this.loadFlags=s,this.loaded_=!1,this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var e=this.path,t=e.indexOf(\"://\");return 0<=t&&(0<=(t=(e=e.substring(t+3)).indexOf(\"/\"))&&(e=e.substring(t+1))),e},goog.Dependency.prototype.onLoad=function(e){this.loaded_?e():this.loadCallbacks_.push(e)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var e=this.loadCallbacks_;this.loadCallbacks_=[];for(var t=0;t<e.length;t++)e[t]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(e){var t=Math.random().toString(32);return goog.Dependency.callbackMap_[t]=e,t},goog.Dependency.unregisterCallback_=function(e){delete goog.Dependency.callbackMap_[e]},goog.Dependency.callback_=function(e,t){if(!(e in goog.Dependency.callbackMap_))throw Error(\"Callback key \"+e+\" does not exist (was base.js loaded more than once?).\");for(var o=goog.Dependency.callbackMap_[e],r=[],s=1;s<arguments.length;s++)r.push(arguments[s]);o.apply(void 0,r)},goog.Dependency.prototype.load=function(e){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?e.loaded():e.pause();else if(goog.inHtmlDocument_()){var t=goog.global.document;if(\"complete\"==t.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\bdeps.js$/.test(this.path))return void e.loaded();throw Error('Cannot write \"'+this.path+'\" after document load')}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var o=goog.Dependency.registerCallback_((function(t){goog.DebugLoader_.IS_OLD_IE_&&\"complete\"!=t.readyState||(goog.Dependency.unregisterCallback_(o),e.loaded())})),r=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?' nonce=\"'+goog.getScriptNonce()+'\"':\"\";r='<script src=\"'+this.path+'\" '+(goog.DebugLoader_.IS_OLD_IE_?\"onreadystatechange\":\"onload\")+\"=\\\"goog.Dependency.callback_('\"+o+'\\', this)\" type=\"text/javascript\" '+(goog.Dependency.defer_?\"defer\":\"\")+r+\"><\\/script>\",t.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(r):r)}else{var s=t.createElement(\"script\");s.defer=goog.Dependency.defer_,s.async=!1,s.type=\"text/javascript\",(r=goog.getScriptNonce())&&s.setAttribute(\"nonce\",r),goog.DebugLoader_.IS_OLD_IE_?(e.pause(),s.onreadystatechange=function(){\"loaded\"!=s.readyState&&\"complete\"!=s.readyState||(e.loaded(),e.resume())}):s.onload=function(){s.onload=null,e.loaded()},s.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path,t.head.appendChild(s)}}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),\"deps.js\"==this.relativePath?(goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"),e.loaded()):e.pause()},goog.Es6ModuleDependency=function(e,t,o,r,s){goog.Dependency.call(this,e,t,o,r,s)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(e){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?e.loaded():e.pause();else if(goog.inHtmlDocument_()){var t=goog.global.document,o=this;if(goog.isDocumentLoading_()){var r=function(e,o){e=o?'<script type=\"module\" crossorigin>'+o+\"<\\/script>\":'<script type=\"module\" crossorigin src=\"'+e+'\"><\\/script>',t.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(e):e)};goog.Dependency.defer_=!0}else r=function(e,o){var r=t.createElement(\"script\");r.defer=!0,r.async=!1,r.type=\"module\",r.setAttribute(\"crossorigin\",!0);var s=goog.getScriptNonce();s&&r.setAttribute(\"nonce\",s),o?r.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(o):o:r.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(e):e,t.head.appendChild(r)};var s=goog.Dependency.registerCallback_((function(){goog.Dependency.unregisterCallback_(s),e.setModuleState(goog.ModuleType.ES6)}));r(void 0,'goog.Dependency.callback_(\"'+s+'\")'),r(this.path,void 0);var n=goog.Dependency.registerCallback_((function(t){goog.Dependency.unregisterCallback_(n),e.registerEs6ModuleExports(o.path,t,goog.moduleLoaderState_.moduleName)}));r(void 0,'import * as m from \"'+this.path+'\"; goog.Dependency.callback_(\"'+n+'\", m)');var i=goog.Dependency.registerCallback_((function(){goog.Dependency.unregisterCallback_(i),e.clearModuleState(),e.loaded()}));r(void 0,'goog.Dependency.callback_(\"'+i+'\")')}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),e.pause()},goog.TransformedDependency=function(e,t,o,r,s){goog.Dependency.call(this,e,t,o,r,s),this.contents_=null,this.lazyFetch_=!goog.inHtmlDocument_()||!(\"noModule\"in goog.global.document.createElement(\"script\"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(e){function t(){r.contents_=goog.loadFileSync_(r.path),r.contents_&&(r.contents_=r.transform(r.contents_),r.contents_&&(r.contents_+=\"\\n//# sourceURL=\"+r.path))}function o(){if(r.lazyFetch_&&t(),r.contents_){s&&e.setModuleState(goog.ModuleType.ES6);try{var o=r.contents_;if(r.contents_=null,goog.globalEval(o),s)var n=goog.moduleLoaderState_.moduleName}finally{s&&e.clearModuleState()}s&&goog.global.$jscomp.require.ensure([r.getPathName()],(function(){e.registerEs6ModuleExports(r.path,goog.global.$jscomp.require(r.getPathName()),n)})),e.loaded()}}var r=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)t(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT(\"\",this.contents_)?(this.contents_=null,e.loaded()):e.pause();else{var s=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||t();var n=1<e.pending().length,i=n&&goog.DebugLoader_.IS_OLD_IE_;if(n=goog.Dependency.defer_&&(n||goog.isDocumentLoading_()),i||n)e.defer((function(){o()}));else{var a=goog.global.document;if(i=goog.inHtmlDocument_()&&\"ActiveXObject\"in goog.global,s&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!i){goog.Dependency.defer_=!0,e.pause();var g=a.onreadystatechange;a.onreadystatechange=function(){\"interactive\"==a.readyState&&(a.onreadystatechange=g,o(),e.resume()),goog.isFunction(g)&&g.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?function(){var e=goog.global.document,t=goog.Dependency.registerCallback_((function(){goog.Dependency.unregisterCallback_(t),o()})),r='<script type=\"text/javascript\">'+goog.protectScriptTag_('goog.Dependency.callback_(\"'+t+'\");')+\"<\\/script>\";e.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(r):r)}():o()}}},goog.TransformedDependency.prototype.transform=function(e){},goog.TranspiledDependency=function(e,t,o,r,s,n){goog.TransformedDependency.call(this,e,t,o,r,s),this.transpiler=n},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(e){return this.transpiler.transpile(e,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(e,t,o,r,s){goog.TransformedDependency.call(this,e,t,o,r,s)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(e){return e},goog.GoogModuleDependency=function(e,t,o,r,s,n,i){goog.TransformedDependency.call(this,e,t,o,r,s),this.needsTranspile_=n,this.transpiler_=i},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(e){return this.needsTranspile_&&(e=this.transpiler_.transpile(e,this.getPathName())),goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?\"goog.loadModule(\"+goog.global.JSON.stringify(e+\"\\n//# sourceURL=\"+this.path+\"\\n\")+\");\":'goog.loadModule(function(exports) {\"use strict\";'+e+\"\\n;return exports});\\n//# sourceURL=\"+this.path+\"\\n\"},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(e,t,o,r){t=t||[],e=e.replace(/\\\\/g,\"/\");var s=goog.normalizePath_(goog.basePath+e);for(r&&\"boolean\"!=typeof r||(r=r?{module:goog.ModuleType.GOOG}:{}),o=this.factory_.createDependency(s,e,t,o,r,goog.transpiler_.needsTranspile(r.lang||\"es3\",r.module)),this.dependencies_[s]=o,o=0;o<t.length;o++)this.idToPath_[t[o]]=s;this.idToPath_[e]=s},goog.DependencyFactory=function(e){this.transpiler=e},goog.DependencyFactory.prototype.createDependency=function(e,t,o,r,s,n){return s.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(e,t,o,r,s,n,this.transpiler):n?new goog.TranspiledDependency(e,t,o,r,s,this.transpiler):s.module==goog.ModuleType.ES6?\"never\"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(e,t,o,r,s):new goog.Es6ModuleDependency(e,t,o,r,s):new goog.Dependency(e,t,o,r,s)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(e){goog.debugLoader_.setDependencyFactory(e)},goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(e,t){goog.debugLoader_.bootstrap(e,t)}),goog.TRUSTED_TYPES_POLICY_NAME=\"\",goog.identity_=function(e){return e},goog.createTrustedTypesPolicy=function(e){var t=null;if(\"undefined\"==typeof TrustedTypes||!TrustedTypes.createPolicy)return t;try{t=TrustedTypes.createPolicy(e,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_})}catch(e){goog.logToConsole_(e.message)}return t},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#base\"):null;var jspb={BinaryConstants:{},ConstBinaryMessage:function(){},BinaryMessage:function(){}};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31},jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5},jspb.BinaryConstants.FieldTypeToWireType=function(e){var t=jspb.BinaryConstants.FieldType,o=jspb.BinaryConstants.WireType;switch(e){case t.INT32:case t.INT64:case t.UINT32:case t.UINT64:case t.SINT32:case t.SINT64:case t.BOOL:case t.ENUM:case t.VHASH64:return o.VARINT;case t.DOUBLE:case t.FIXED64:case t.SFIXED64:case t.FHASH64:return o.FIXED64;case t.STRING:case t.MESSAGE:case t.BYTES:return o.DELIMITED;case t.FLOAT:case t.FIXED32:case t.SFIXED32:return o.FIXED32;default:return o.INVALID}},jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1,jspb.BinaryConstants.FLOAT32_EPS=1401298464324817e-60,jspb.BinaryConstants.FLOAT32_MIN=11754943508222875e-54,jspb.BinaryConstants.FLOAT32_MAX=34028234663852886e22,jspb.BinaryConstants.FLOAT64_EPS=5e-324,jspb.BinaryConstants.FLOAT64_MIN=22250738585072014e-324,jspb.BinaryConstants.FLOAT64_MAX=17976931348623157e292,jspb.BinaryConstants.TWO_TO_20=1048576,jspb.BinaryConstants.TWO_TO_23=8388608,jspb.BinaryConstants.TWO_TO_31=2147483648,jspb.BinaryConstants.TWO_TO_32=4294967296,jspb.BinaryConstants.TWO_TO_52=4503599627370496,jspb.BinaryConstants.TWO_TO_63=0x8000000000000000,jspb.BinaryConstants.TWO_TO_64=0x10000000000000000,jspb.BinaryConstants.ZERO_HASH=\"\\0\\0\\0\\0\\0\\0\\0\\0\",goog.dom={},goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12},goog.debug={},goog.debug.Error=function(e){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var t=Error().stack;t&&(this.stack=t)}e&&(this.message=String(e)),this.reportErrorToServer=!0},goog.inherits(goog.debug.Error,Error),goog.debug.Error.prototype.name=\"CustomError\",goog.asserts={},goog.asserts.ENABLE_ASSERTS=goog.DEBUG,goog.asserts.AssertionError=function(e,t){goog.debug.Error.call(this,goog.asserts.subs_(e,t)),this.messagePattern=e},goog.inherits(goog.asserts.AssertionError,goog.debug.Error),goog.asserts.AssertionError.prototype.name=\"AssertionError\",goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e},goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER,goog.asserts.subs_=function(e,t){for(var o=\"\",r=(e=e.split(\"%s\")).length-1,s=0;s<r;s++)o+=e[s]+(s<t.length?t[s]:\"%s\");return o+e[r]},goog.asserts.doAssertFailure_=function(e,t,o,r){var s=\"Assertion failed\";if(o){s+=\": \"+o;var n=r}else e&&(s+=\": \"+e,n=t);e=new goog.asserts.AssertionError(\"\"+s,n||[]),goog.asserts.errorHandler_(e)},goog.asserts.setErrorHandler=function(e){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=e)},goog.asserts.assert=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!e&&goog.asserts.doAssertFailure_(\"\",null,t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertExists=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&null==e&&goog.asserts.doAssertFailure_(\"Expected to exist: %s.\",[e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.fail=function(e,t){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\"+(e?\": \"+e:\"\"),Array.prototype.slice.call(arguments,1)))},goog.asserts.assertNumber=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(e)&&goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertString=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isString(e)&&goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertFunction=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(e)&&goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertObject=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(e)&&goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertArray=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isArray(e)&&goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertBoolean=function(e,t,o){return goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(e)&&goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertElement=function(e,t,o){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(e)&&e.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertInstanceof=function(e,t,o,r){return!goog.asserts.ENABLE_ASSERTS||e instanceof t||goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\",[goog.asserts.getType_(t),goog.asserts.getType_(e)],o,Array.prototype.slice.call(arguments,3)),e},goog.asserts.assertFinite=function(e,t,o){return!goog.asserts.ENABLE_ASSERTS||\"number\"==typeof e&&isFinite(e)||goog.asserts.doAssertFailure_(\"Expected %s to be a finite number but it is not.\",[e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertObjectPrototypeIsIntact=function(){for(var e in Object.prototype)goog.asserts.fail(e+\" should not be enumerable in Object.prototype.\")},goog.asserts.getType_=function(e){return e instanceof Function?e.displayName||e.name||\"unknown type name\":e instanceof Object?e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e):null===e?\"null\":typeof e},goog.array={},goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE,goog.array.ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR,goog.array.peek=function(e){return e[e.length-1]},goog.array.last=goog.array.peek,goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.indexOf.call(e,t,o)}:function(e,t,o){if(o=null==o?0:0>o?Math.max(0,e.length+o):o,goog.isString(e))return goog.isString(t)&&1==t.length?e.indexOf(t,o):-1;for(;o<e.length;o++)if(o in e&&e[o]===t)return o;return-1},goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.lastIndexOf.call(e,t,null==o?e.length-1:o)}:function(e,t,o){if(0>(o=null==o?e.length-1:o)&&(o=Math.max(0,e.length+o)),goog.isString(e))return goog.isString(t)&&1==t.length?e.lastIndexOf(t,o):-1;for(;0<=o;o--)if(o in e&&e[o]===t)return o;return-1},goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(e,t,o){goog.asserts.assert(null!=e.length),Array.prototype.forEach.call(e,t,o)}:function(e,t,o){for(var r=e.length,s=goog.isString(e)?e.split(\"\"):e,n=0;n<r;n++)n in s&&t.call(o,s[n],n,e)},goog.array.forEachRight=function(e,t,o){var r=e.length,s=goog.isString(e)?e.split(\"\"):e;for(--r;0<=r;--r)r in s&&t.call(o,s[r],r,e)},goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.filter.call(e,t,o)}:function(e,t,o){for(var r=e.length,s=[],n=0,i=goog.isString(e)?e.split(\"\"):e,a=0;a<r;a++)if(a in i){var g=i[a];t.call(o,g,a,e)&&(s[n++]=g)}return s},goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.map.call(e,t,o)}:function(e,t,o){for(var r=e.length,s=Array(r),n=goog.isString(e)?e.split(\"\"):e,i=0;i<r;i++)i in n&&(s[i]=t.call(o,n[i],i,e));return s},goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(e,t,o,r){return goog.asserts.assert(null!=e.length),r&&(t=goog.bind(t,r)),Array.prototype.reduce.call(e,t,o)}:function(e,t,o,r){var s=o;return goog.array.forEach(e,(function(o,n){s=t.call(r,s,o,n,e)})),s},goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(e,t,o,r){return goog.asserts.assert(null!=e.length),goog.asserts.assert(null!=t),r&&(t=goog.bind(t,r)),Array.prototype.reduceRight.call(e,t,o)}:function(e,t,o,r){var s=o;return goog.array.forEachRight(e,(function(o,n){s=t.call(r,s,o,n,e)})),s},goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.some.call(e,t,o)}:function(e,t,o){for(var r=e.length,s=goog.isString(e)?e.split(\"\"):e,n=0;n<r;n++)if(n in s&&t.call(o,s[n],n,e))return!0;return!1},goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(e,t,o){return goog.asserts.assert(null!=e.length),Array.prototype.every.call(e,t,o)}:function(e,t,o){for(var r=e.length,s=goog.isString(e)?e.split(\"\"):e,n=0;n<r;n++)if(n in s&&!t.call(o,s[n],n,e))return!1;return!0},goog.array.count=function(e,t,o){var r=0;return goog.array.forEach(e,(function(e,s,n){t.call(o,e,s,n)&&++r}),o),r},goog.array.find=function(e,t,o){return 0>(t=goog.array.findIndex(e,t,o))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndex=function(e,t,o){for(var r=e.length,s=goog.isString(e)?e.split(\"\"):e,n=0;n<r;n++)if(n in s&&t.call(o,s[n],n,e))return n;return-1},goog.array.findRight=function(e,t,o){return 0>(t=goog.array.findIndexRight(e,t,o))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndexRight=function(e,t,o){var r=e.length,s=goog.isString(e)?e.split(\"\"):e;for(--r;0<=r;r--)if(r in s&&t.call(o,s[r],r,e))return r;return-1},goog.array.contains=function(e,t){return 0<=goog.array.indexOf(e,t)},goog.array.isEmpty=function(e){return 0==e.length},goog.array.clear=function(e){if(!goog.isArray(e))for(var t=e.length-1;0<=t;t--)delete e[t];e.length=0},goog.array.insert=function(e,t){goog.array.contains(e,t)||e.push(t)},goog.array.insertAt=function(e,t,o){goog.array.splice(e,o,0,t)},goog.array.insertArrayAt=function(e,t,o){goog.partial(goog.array.splice,e,o,0).apply(null,t)},goog.array.insertBefore=function(e,t,o){var r;2==arguments.length||0>(r=goog.array.indexOf(e,o))?e.push(t):goog.array.insertAt(e,t,r)},goog.array.remove=function(e,t){var o;return(o=0<=(t=goog.array.indexOf(e,t)))&&goog.array.removeAt(e,t),o},goog.array.removeLast=function(e,t){return 0<=(t=goog.array.lastIndexOf(e,t))&&(goog.array.removeAt(e,t),!0)},goog.array.removeAt=function(e,t){return goog.asserts.assert(null!=e.length),1==Array.prototype.splice.call(e,t,1).length},goog.array.removeIf=function(e,t,o){return 0<=(t=goog.array.findIndex(e,t,o))&&(goog.array.removeAt(e,t),!0)},goog.array.removeAllIf=function(e,t,o){var r=0;return goog.array.forEachRight(e,(function(s,n){t.call(o,s,n,e)&&goog.array.removeAt(e,n)&&r++})),r},goog.array.concat=function(e){return Array.prototype.concat.apply([],arguments)},goog.array.join=function(e){return Array.prototype.concat.apply([],arguments)},goog.array.toArray=function(e){var t=e.length;if(0<t){for(var o=Array(t),r=0;r<t;r++)o[r]=e[r];return o}return[]},goog.array.clone=goog.array.toArray,goog.array.extend=function(e,t){for(var o=1;o<arguments.length;o++){var r=arguments[o];if(goog.isArrayLike(r)){var s=e.length||0,n=r.length||0;e.length=s+n;for(var i=0;i<n;i++)e[s+i]=r[i]}else e.push(r)}},goog.array.splice=function(e,t,o,r){return goog.asserts.assert(null!=e.length),Array.prototype.splice.apply(e,goog.array.slice(arguments,1))},goog.array.slice=function(e,t,o){return goog.asserts.assert(null!=e.length),2>=arguments.length?Array.prototype.slice.call(e,t):Array.prototype.slice.call(e,t,o)},goog.array.removeDuplicates=function(e,t,o){t=t||e;var r=function(e){return goog.isObject(e)?\"o\"+goog.getUid(e):(typeof e).charAt(0)+e};o=o||r,r={};for(var s=0,n=0;n<e.length;){var i=e[n++],a=o(i);Object.prototype.hasOwnProperty.call(r,a)||(r[a]=!0,t[s++]=i)}t.length=s},goog.array.binarySearch=function(e,t,o){return goog.array.binarySearch_(e,o||goog.array.defaultCompare,!1,t)},goog.array.binarySelect=function(e,t,o){return goog.array.binarySearch_(e,t,!0,void 0,o)},goog.array.binarySearch_=function(e,t,o,r,s){for(var n,i=0,a=e.length;i<a;){var g=i+a>>1,l=o?t.call(s,e[g],g,e):t(r,e[g]);0<l?i=g+1:(a=g,n=!l)}return n?i:~i},goog.array.sort=function(e,t){e.sort(t||goog.array.defaultCompare)},goog.array.stableSort=function(e,t){for(var o=Array(e.length),r=0;r<e.length;r++)o[r]={index:r,value:e[r]};var s=t||goog.array.defaultCompare;for(goog.array.sort(o,(function(e,t){return s(e.value,t.value)||e.index-t.index})),r=0;r<e.length;r++)e[r]=o[r].value},goog.array.sortByKey=function(e,t,o){var r=o||goog.array.defaultCompare;goog.array.sort(e,(function(e,o){return r(t(e),t(o))}))},goog.array.sortObjectsByKey=function(e,t,o){goog.array.sortByKey(e,(function(e){return e[t]}),o)},goog.array.isSorted=function(e,t,o){t=t||goog.array.defaultCompare;for(var r=1;r<e.length;r++){var s=t(e[r-1],e[r]);if(0<s||0==s&&o)return!1}return!0},goog.array.equals=function(e,t,o){if(!goog.isArrayLike(e)||!goog.isArrayLike(t)||e.length!=t.length)return!1;var r=e.length;o=o||goog.array.defaultCompareEquality;for(var s=0;s<r;s++)if(!o(e[s],t[s]))return!1;return!0},goog.array.compare3=function(e,t,o){o=o||goog.array.defaultCompare;for(var r=Math.min(e.length,t.length),s=0;s<r;s++){var n=o(e[s],t[s]);if(0!=n)return n}return goog.array.defaultCompare(e.length,t.length)},goog.array.defaultCompare=function(e,t){return e>t?1:e<t?-1:0},goog.array.inverseDefaultCompare=function(e,t){return-goog.array.defaultCompare(e,t)},goog.array.defaultCompareEquality=function(e,t){return e===t},goog.array.binaryInsert=function(e,t,o){return 0>(o=goog.array.binarySearch(e,t,o))&&(goog.array.insertAt(e,t,-(o+1)),!0)},goog.array.binaryRemove=function(e,t,o){return 0<=(t=goog.array.binarySearch(e,t,o))&&goog.array.removeAt(e,t)},goog.array.bucket=function(e,t,o){for(var r={},s=0;s<e.length;s++){var n=e[s],i=t.call(o,n,s,e);goog.isDef(i)&&(r[i]||(r[i]=[])).push(n)}return r},goog.array.toObject=function(e,t,o){var r={};return goog.array.forEach(e,(function(s,n){r[t.call(o,s,n,e)]=s})),r},goog.array.range=function(e,t,o){var r=[],s=0,n=e;if(void 0!==t&&(s=e,n=t),0>(o=o||1)*(n-s))return[];if(0<o)for(e=s;e<n;e+=o)r.push(e);else for(e=s;e>n;e+=o)r.push(e);return r},goog.array.repeat=function(e,t){for(var o=[],r=0;r<t;r++)o[r]=e;return o},goog.array.flatten=function(e){for(var t=[],o=0;o<arguments.length;o++){var r=arguments[o];if(goog.isArray(r))for(var s=0;s<r.length;s+=8192){var n=goog.array.slice(r,s,s+8192);n=goog.array.flatten.apply(null,n);for(var i=0;i<n.length;i++)t.push(n[i])}else t.push(r)}return t},goog.array.rotate=function(e,t){return goog.asserts.assert(null!=e.length),e.length&&(0<(t%=e.length)?Array.prototype.unshift.apply(e,e.splice(-t,t)):0>t&&Array.prototype.push.apply(e,e.splice(0,-t))),e},goog.array.moveItem=function(e,t,o){goog.asserts.assert(0<=t&&t<e.length),goog.asserts.assert(0<=o&&o<e.length),t=Array.prototype.splice.call(e,t,1),Array.prototype.splice.call(e,o,0,t[0])},goog.array.zip=function(e){if(!arguments.length)return[];for(var t=[],o=arguments[0].length,r=1;r<arguments.length;r++)arguments[r].length<o&&(o=arguments[r].length);for(r=0;r<o;r++){for(var s=[],n=0;n<arguments.length;n++)s.push(arguments[n][r]);t.push(s)}return t},goog.array.shuffle=function(e,t){t=t||Math.random;for(var o=e.length-1;0<o;o--){var r=Math.floor(t()*(o+1)),s=e[o];e[o]=e[r],e[r]=s}},goog.array.copyByIndex=function(e,t){var o=[];return goog.array.forEach(t,(function(t){o.push(e[t])})),o},goog.array.concatMap=function(e,t,o){return goog.array.concat.apply([],goog.array.map(e,t,o))},goog.crypt={},goog.crypt.stringToByteArray=function(e){for(var t=[],o=0,r=0;r<e.length;r++){var s=e.charCodeAt(r);255<s&&(t[o++]=255&s,s>>=8),t[o++]=s}return t},goog.crypt.byteArrayToString=function(e){if(8192>=e.length)return String.fromCharCode.apply(null,e);for(var t=\"\",o=0;o<e.length;o+=8192){var r=goog.array.slice(e,o,o+8192);t+=String.fromCharCode.apply(null,r)}return t},goog.crypt.byteArrayToHex=function(e,t){return goog.array.map(e,(function(e){return 1<(e=e.toString(16)).length?e:\"0\"+e})).join(t||\"\")},goog.crypt.hexToByteArray=function(e){goog.asserts.assert(0==e.length%2,\"Key string length must be multiple of 2\");for(var t=[],o=0;o<e.length;o+=2)t.push(parseInt(e.substring(o,o+2),16));return t},goog.crypt.stringToUtf8ByteArray=function(e){for(var t=[],o=0,r=0;r<e.length;r++){var s=e.charCodeAt(r);128>s?t[o++]=s:(2048>s?t[o++]=s>>6|192:(55296==(64512&s)&&r+1<e.length&&56320==(64512&e.charCodeAt(r+1))?(s=65536+((1023&s)<<10)+(1023&e.charCodeAt(++r)),t[o++]=s>>18|240,t[o++]=s>>12&63|128):t[o++]=s>>12|224,t[o++]=s>>6&63|128),t[o++]=63&s|128)}return t},goog.crypt.utf8ByteArrayToString=function(e){for(var t=[],o=0,r=0;o<e.length;){var s=e[o++];if(128>s)t[r++]=String.fromCharCode(s);else if(191<s&&224>s){var n=e[o++];t[r++]=String.fromCharCode((31&s)<<6|63&n)}else if(239<s&&365>s){n=e[o++];var i=e[o++];s=((7&s)<<18|(63&n)<<12|(63&i)<<6|63&e[o++])-65536,t[r++]=String.fromCharCode(55296+(s>>10)),t[r++]=String.fromCharCode(56320+(1023&s))}else n=e[o++],i=e[o++],t[r++]=String.fromCharCode((15&s)<<12|(63&n)<<6|63&i)}return t.join(\"\")},goog.crypt.xorByteArray=function(e,t){goog.asserts.assert(e.length==t.length,\"XOR array lengths must match\");for(var o=[],r=0;r<e.length;r++)o.push(e[r]^t[r]);return o},goog.string={},goog.string.internal={},goog.string.internal.startsWith=function(e,t){return 0==e.lastIndexOf(t,0)},goog.string.internal.endsWith=function(e,t){var o=e.length-t.length;return 0<=o&&e.indexOf(t,o)==o},goog.string.internal.caseInsensitiveStartsWith=function(e,t){return 0==goog.string.internal.caseInsensitiveCompare(t,e.substr(0,t.length))},goog.string.internal.caseInsensitiveEndsWith=function(e,t){return 0==goog.string.internal.caseInsensitiveCompare(t,e.substr(e.length-t.length,t.length))},goog.string.internal.caseInsensitiveEquals=function(e,t){return e.toLowerCase()==t.toLowerCase()},goog.string.internal.isEmptyOrWhitespace=function(e){return/^[\\s\\xa0]*$/.test(e)},goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(e){return e.trim()}:function(e){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(e)[1]},goog.string.internal.caseInsensitiveCompare=function(e,t){return(e=String(e).toLowerCase())<(t=String(t).toLowerCase())?-1:e==t?0:1},goog.string.internal.newLineToBr=function(e,t){return e.replace(/(\\r\\n|\\r|\\n)/g,t?\"<br />\":\"<br>\")},goog.string.internal.htmlEscape=function(e,t){if(t)e=e.replace(goog.string.internal.AMP_RE_,\"&amp;\").replace(goog.string.internal.LT_RE_,\"&lt;\").replace(goog.string.internal.GT_RE_,\"&gt;\").replace(goog.string.internal.QUOT_RE_,\"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.internal.NULL_RE_,\"&#0;\");else{if(!goog.string.internal.ALL_RE_.test(e))return e;-1!=e.indexOf(\"&\")&&(e=e.replace(goog.string.internal.AMP_RE_,\"&amp;\")),-1!=e.indexOf(\"<\")&&(e=e.replace(goog.string.internal.LT_RE_,\"&lt;\")),-1!=e.indexOf(\">\")&&(e=e.replace(goog.string.internal.GT_RE_,\"&gt;\")),-1!=e.indexOf('\"')&&(e=e.replace(goog.string.internal.QUOT_RE_,\"&quot;\")),-1!=e.indexOf(\"'\")&&(e=e.replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\")),-1!=e.indexOf(\"\\0\")&&(e=e.replace(goog.string.internal.NULL_RE_,\"&#0;\"))}return e},goog.string.internal.AMP_RE_=/&/g,goog.string.internal.LT_RE_=/</g,goog.string.internal.GT_RE_=/>/g,goog.string.internal.QUOT_RE_=/\"/g,goog.string.internal.SINGLE_QUOTE_RE_=/'/g,goog.string.internal.NULL_RE_=/\\x00/g,goog.string.internal.ALL_RE_=/[\\x00&<>\"']/,goog.string.internal.whitespaceEscape=function(e,t){return goog.string.internal.newLineToBr(e.replace(/  /g,\" &#160;\"),t)},goog.string.internal.contains=function(e,t){return-1!=e.indexOf(t)},goog.string.internal.caseInsensitiveContains=function(e,t){return goog.string.internal.contains(e.toLowerCase(),t.toLowerCase())},goog.string.internal.compareVersions=function(e,t){var o=0;e=goog.string.internal.trim(String(e)).split(\".\"),t=goog.string.internal.trim(String(t)).split(\".\");for(var r=Math.max(e.length,t.length),s=0;0==o&&s<r;s++){var n=e[s]||\"\",i=t[s]||\"\";do{if(n=/(\\d*)(\\D*)(.*)/.exec(n)||[\"\",\"\",\"\",\"\"],i=/(\\d*)(\\D*)(.*)/.exec(i)||[\"\",\"\",\"\",\"\"],0==n[0].length&&0==i[0].length)break;o=0==n[1].length?0:parseInt(n[1],10);var a=0==i[1].length?0:parseInt(i[1],10);o=goog.string.internal.compareElements_(o,a)||goog.string.internal.compareElements_(0==n[2].length,0==i[2].length)||goog.string.internal.compareElements_(n[2],i[2]),n=n[3],i=i[3]}while(0==o)}return o},goog.string.internal.compareElements_=function(e,t){return e<t?-1:e>t?1:0},goog.string.TypedString=function(){},goog.string.Const=function(e,t){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=e===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&t||\"\",this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_},goog.string.Const.prototype.implementsGoogStringTypedString=!0,goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_},goog.string.Const.prototype.toString=function(){return\"Const{\"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+\"}\"},goog.string.Const.unwrap=function(e){return e instanceof goog.string.Const&&e.constructor===goog.string.Const&&e.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_?e.stringConstValueWithSecurityContract__googStringSecurityPrivate_:(goog.asserts.fail(\"expected object of type Const, got '\"+e+\"'\"),\"type_error:Const\")},goog.string.Const.from=function(e){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,e)},goog.string.Const.TYPE_MARKER_={},goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={},goog.string.Const.EMPTY=goog.string.Const.from(\"\"),goog.fs={},goog.fs.url={},goog.fs.url.createObjectUrl=function(e){return goog.fs.url.getUrlObject_().createObjectURL(e)},goog.fs.url.revokeObjectUrl=function(e){goog.fs.url.getUrlObject_().revokeObjectURL(e)},goog.fs.url.getUrlObject_=function(){var e=goog.fs.url.findUrlObject_();if(null!=e)return e;throw Error(\"This browser doesn't seem to support blob URLs\")},goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null},goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()},goog.html={},goog.html.trustedtypes={},goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#html\"):null,goog.i18n={},goog.i18n.bidi={},goog.i18n.bidi.FORCE_RTL=!1,goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||(\"ar\"==goog.LOCALE.substring(0,2).toLowerCase()||\"fa\"==goog.LOCALE.substring(0,2).toLowerCase()||\"he\"==goog.LOCALE.substring(0,2).toLowerCase()||\"iw\"==goog.LOCALE.substring(0,2).toLowerCase()||\"ps\"==goog.LOCALE.substring(0,2).toLowerCase()||\"sd\"==goog.LOCALE.substring(0,2).toLowerCase()||\"ug\"==goog.LOCALE.substring(0,2).toLowerCase()||\"ur\"==goog.LOCALE.substring(0,2).toLowerCase()||\"yi\"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||\"-\"==goog.LOCALE.substring(2,3)||\"_\"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&\"ckb\"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||\"-\"==goog.LOCALE.substring(3,4)||\"_\"==goog.LOCALE.substring(3,4))||7<=goog.LOCALE.length&&(\"-\"==goog.LOCALE.substring(2,3)||\"_\"==goog.LOCALE.substring(2,3))&&(\"adlm\"==goog.LOCALE.substring(3,7).toLowerCase()||\"arab\"==goog.LOCALE.substring(3,7).toLowerCase()||\"hebr\"==goog.LOCALE.substring(3,7).toLowerCase()||\"nkoo\"==goog.LOCALE.substring(3,7).toLowerCase()||\"rohg\"==goog.LOCALE.substring(3,7).toLowerCase()||\"thaa\"==goog.LOCALE.substring(3,7).toLowerCase())||8<=goog.LOCALE.length&&(\"-\"==goog.LOCALE.substring(3,4)||\"_\"==goog.LOCALE.substring(3,4))&&(\"adlm\"==goog.LOCALE.substring(4,8).toLowerCase()||\"arab\"==goog.LOCALE.substring(4,8).toLowerCase()||\"hebr\"==goog.LOCALE.substring(4,8).toLowerCase()||\"nkoo\"==goog.LOCALE.substring(4,8).toLowerCase()||\"rohg\"==goog.LOCALE.substring(4,8).toLowerCase()||\"thaa\"==goog.LOCALE.substring(4,8).toLowerCase()),goog.i18n.bidi.Format={LRE:\"‪\",RLE:\"‫\",PDF:\"‬\",LRM:\"‎\",RLM:\"‏\"},goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0},goog.i18n.bidi.RIGHT=\"right\",goog.i18n.bidi.LEFT=\"left\",goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT,goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,goog.i18n.bidi.toDir=function(e,t){return\"number\"==typeof e?0<e?goog.i18n.bidi.Dir.LTR:0>e?goog.i18n.bidi.Dir.RTL:t?null:goog.i18n.bidi.Dir.NEUTRAL:null==e?null:e?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR},goog.i18n.bidi.ltrChars_=\"A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿‎Ⰰ-\\ud801\\ud804-\\ud839\\ud83c-\\udbff豈-﬜︀-﹯﻽-￿\",goog.i18n.bidi.rtlChars_=\"֑-ۯۺ-ࣿ‏\\ud802-\\ud803\\ud83a-\\ud83bיִ-﷿ﹰ-ﻼ\",goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g,goog.i18n.bidi.stripHtmlIfNeeded_=function(e,t){return t?e.replace(goog.i18n.bidi.htmlSkipReg_,\"\"):e},goog.i18n.bidi.rtlCharReg_=new RegExp(\"[\"+goog.i18n.bidi.rtlChars_+\"]\"),goog.i18n.bidi.ltrCharReg_=new RegExp(\"[\"+goog.i18n.bidi.ltrChars_+\"]\"),goog.i18n.bidi.hasAnyRtl=function(e,t){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl,goog.i18n.bidi.hasAnyLtr=function(e,t){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.ltrRe_=new RegExp(\"^[\"+goog.i18n.bidi.ltrChars_+\"]\"),goog.i18n.bidi.rtlRe_=new RegExp(\"^[\"+goog.i18n.bidi.rtlChars_+\"]\"),goog.i18n.bidi.isRtlChar=function(e){return goog.i18n.bidi.rtlRe_.test(e)},goog.i18n.bidi.isLtrChar=function(e){return goog.i18n.bidi.ltrRe_.test(e)},goog.i18n.bidi.isNeutralChar=function(e){return!goog.i18n.bidi.isLtrChar(e)&&!goog.i18n.bidi.isRtlChar(e)},goog.i18n.bidi.ltrDirCheckRe_=new RegExp(\"^[^\"+goog.i18n.bidi.rtlChars_+\"]*[\"+goog.i18n.bidi.ltrChars_+\"]\"),goog.i18n.bidi.rtlDirCheckRe_=new RegExp(\"^[^\"+goog.i18n.bidi.ltrChars_+\"]*[\"+goog.i18n.bidi.rtlChars_+\"]\"),goog.i18n.bidi.startsWithRtl=function(e,t){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl,goog.i18n.bidi.startsWithLtr=function(e,t){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr,goog.i18n.bidi.isRequiredLtrRe_=/^http:\\/\\/.*/,goog.i18n.bidi.isNeutralText=function(e,t){return e=goog.i18n.bidi.stripHtmlIfNeeded_(e,t),goog.i18n.bidi.isRequiredLtrRe_.test(e)||!goog.i18n.bidi.hasAnyLtr(e)&&!goog.i18n.bidi.hasAnyRtl(e)},goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp(\"[\"+goog.i18n.bidi.ltrChars_+\"][^\"+goog.i18n.bidi.rtlChars_+\"]*$\"),goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp(\"[\"+goog.i18n.bidi.rtlChars_+\"][^\"+goog.i18n.bidi.ltrChars_+\"]*$\"),goog.i18n.bidi.endsWithLtr=function(e,t){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr,goog.i18n.bidi.endsWithRtl=function(e,t){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e,t))},goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl,goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i,goog.i18n.bidi.isRtlLanguage=function(e){return goog.i18n.bidi.rtlLocalesRe_.test(e)},goog.i18n.bidi.bracketGuardTextRe_=/(\\(.*?\\)+)|(\\[.*?\\]+)|(\\{.*?\\}+)|(<.*?>+)/g,goog.i18n.bidi.guardBracketInText=function(e,t){return t=(void 0===t?goog.i18n.bidi.hasAnyRtl(e):t)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM,e.replace(goog.i18n.bidi.bracketGuardTextRe_,t+\"$&\"+t)},goog.i18n.bidi.enforceRtlInHtml=function(e){return\"<\"==e.charAt(0)?e.replace(/<\\w+/,\"$& dir=rtl\"):\"\\n<span dir=rtl>\"+e+\"</span>\"},goog.i18n.bidi.enforceRtlInText=function(e){return goog.i18n.bidi.Format.RLE+e+goog.i18n.bidi.Format.PDF},goog.i18n.bidi.enforceLtrInHtml=function(e){return\"<\"==e.charAt(0)?e.replace(/<\\w+/,\"$& dir=ltr\"):\"\\n<span dir=ltr>\"+e+\"</span>\"},goog.i18n.bidi.enforceLtrInText=function(e){return goog.i18n.bidi.Format.LRE+e+goog.i18n.bidi.Format.PDF},goog.i18n.bidi.dimensionsRe_=/:\\s*([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)/g,goog.i18n.bidi.leftRe_=/left/gi,goog.i18n.bidi.rightRe_=/right/gi,goog.i18n.bidi.tempRe_=/%%%%/g,goog.i18n.bidi.mirrorCSS=function(e){return e.replace(goog.i18n.bidi.dimensionsRe_,\":$1 $4 $3 $2\").replace(goog.i18n.bidi.leftRe_,\"%%%%\").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)},goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\\u0591-\\u05f2])\"/g,goog.i18n.bidi.singleQuoteSubstituteRe_=/([\\u0591-\\u05f2])'/g,goog.i18n.bidi.normalizeHebrewQuote=function(e){return e.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,\"$1״\").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,\"$1׳\")},goog.i18n.bidi.wordSeparatorRe_=/\\s+/,goog.i18n.bidi.hasNumeralsRe_=/[\\d\\u06f0-\\u06f9]/,goog.i18n.bidi.rtlDetectionThreshold_=.4,goog.i18n.bidi.estimateDirection=function(e,t){var o=0,r=0,s=!1;for(e=goog.i18n.bidi.stripHtmlIfNeeded_(e,t).split(goog.i18n.bidi.wordSeparatorRe_),t=0;t<e.length;t++){var n=e[t];goog.i18n.bidi.startsWithRtl(n)?(o++,r++):goog.i18n.bidi.isRequiredLtrRe_.test(n)?s=!0:goog.i18n.bidi.hasAnyLtr(n)?r++:goog.i18n.bidi.hasNumeralsRe_.test(n)&&(s=!0)}return 0==r?s?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:o/r>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR},goog.i18n.bidi.detectRtlDirectionality=function(e,t){return goog.i18n.bidi.estimateDirection(e,t)==goog.i18n.bidi.Dir.RTL},goog.i18n.bidi.setElementDirAndAlign=function(e,t){e&&(t=goog.i18n.bidi.toDir(t))&&(e.style.textAlign=t==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,e.dir=t==goog.i18n.bidi.Dir.RTL?\"rtl\":\"ltr\")},goog.i18n.bidi.setElementDirByTextDirectionality=function(e,t){switch(goog.i18n.bidi.estimateDirection(t)){case goog.i18n.bidi.Dir.LTR:e.dir=\"ltr\";break;case goog.i18n.bidi.Dir.RTL:e.dir=\"rtl\";break;default:e.removeAttribute(\"dir\")}},goog.i18n.bidi.DirectionalString=function(){},goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=\"\",this.trustedURL_=null,this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_},goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0,goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()},goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0,goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR},goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(e,t){var o=goog.html.TrustedResourceUrl.unwrap(this),r=(o=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(o))[3]||\"\";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(o[1]+goog.html.TrustedResourceUrl.stringifyParams_(\"?\",o[2]||\"\",e)+goog.html.TrustedResourceUrl.stringifyParams_(\"#\",r,t))},goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+\"}\"}),goog.html.TrustedResourceUrl.unwrap=function(e){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(e).toString()},goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(e){return e instanceof goog.html.TrustedResourceUrl&&e.constructor===goog.html.TrustedResourceUrl&&e.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_:(goog.asserts.fail(\"expected object of type TrustedResourceUrl, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:TrustedResourceUrl\")},goog.html.TrustedResourceUrl.unwrapTrustedURL=function(e){return e.trustedURL_?e.trustedURL_:goog.html.TrustedResourceUrl.unwrap(e)},goog.html.TrustedResourceUrl.format=function(e,t){var o=goog.string.Const.unwrap(e);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(o))throw Error(\"Invalid TrustedResourceUrl format: \"+o);return e=o.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,(function(e,r){if(!Object.prototype.hasOwnProperty.call(t,r))throw Error('Found marker, \"'+r+'\", in format string, \"'+o+'\", but no valid label mapping found in args: '+JSON.stringify(t));return(e=t[r])instanceof goog.string.Const?goog.string.Const.unwrap(e):encodeURIComponent(String(e))})),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\w+)}/g,goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|\\/[^/\\\\]|[^:/\\\\%]+\\/|[^:/\\\\%]*[?#]|about:blank#)/i,goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/,goog.html.TrustedResourceUrl.formatWithParams=function(e,t,o,r){return goog.html.TrustedResourceUrl.format(e,t).cloneWithParams(o,r)},goog.html.TrustedResourceUrl.fromConstant=function(e){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e))},goog.html.TrustedResourceUrl.fromConstants=function(e){for(var t=\"\",o=0;o<e.length;o++)t+=goog.string.Const.unwrap(e[o]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t)},goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(e){var t=new goog.html.TrustedResourceUrl;return t.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(e):e,goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY&&(t.trustedURL_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(e)),t},goog.html.TrustedResourceUrl.stringifyParams_=function(e,t,o){if(null==o)return t;if(goog.isString(o))return o?e+encodeURIComponent(o):\"\";for(var r in o){var s=o[r];s=goog.isArray(s)?s:[s];for(var n=0;n<s.length;n++){var i=s[n];null!=i&&(t||(t=e),t+=(t.length>e.length?\"&\":\"\")+encodeURIComponent(r)+\"=\"+encodeURIComponent(String(i)))}}return t},goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=\"\",this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_},goog.html.SafeUrl.INNOCUOUS_STRING=\"about:invalid#zClosurez\",goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0,goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()},goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0,goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR},goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return\"SafeUrl{\"+this.privateDoNotAccessOrElseSafeUrlWrappedValue_+\"}\"}),goog.html.SafeUrl.unwrap=function(e){return goog.html.SafeUrl.unwrapTrustedURL(e).toString()},goog.html.SafeUrl.unwrapTrustedURL=function(e){return e instanceof goog.html.SafeUrl&&e.constructor===goog.html.SafeUrl&&e.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseSafeUrlWrappedValue_:(goog.asserts.fail(\"expected object of type SafeUrl, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:SafeUrl\")},goog.html.SafeUrl.fromConstant=function(e){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e))},goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\\/csv|video\\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\\w+=(?:\\w+|\"[\\w;=]+\"))*$/i,goog.html.SafeUrl.isSafeMimeType=function(e){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(e)},goog.html.SafeUrl.fromBlob=function(e){return e=goog.html.SAFE_MIME_TYPE_PATTERN_.test(e.type)?goog.fs.url.createObjectUrl(e):goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.DATA_URL_PATTERN_=/^data:([^,]*);base64,[a-z0-9+\\/]+=*$/i,goog.html.SafeUrl.fromDataUrl=function(e){var t=(e=e.replace(/(%0A|%0D)/g,\"\")).match(goog.html.DATA_URL_PATTERN_);return t=t&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(t[1]),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t?e:goog.html.SafeUrl.INNOCUOUS_STRING)},goog.html.SafeUrl.fromTelUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,\"tel:\")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\\/=^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$/i,goog.html.SafeUrl.fromSipUrl=function(e){return goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(e))||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeUrl.fromFacebookMessengerUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,\"fb-messenger://share\")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeUrl.fromWhatsAppUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,\"whatsapp://send\")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeUrl.fromSmsUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,\"sms:\")&&goog.html.SafeUrl.isSmsUrlBodyValid_(e)||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeUrl.isSmsUrlBodyValid_=function(e){var t=e.indexOf(\"#\");if(0<t&&(e=e.substring(0,t)),!(t=e.match(/[?&]body=/gi)))return!0;if(1<t.length)return!1;if(!(e=e.match(/[?&]body=([^&]*)/)[1]))return!0;try{decodeURIComponent(e)}catch(e){return!1}return/^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(e)},goog.html.SafeUrl.fromSshUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,\"ssh://\")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(e,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//,e,t)},goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(e,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//,e,t)},goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(e,t){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//,e,t)},goog.html.SafeUrl.sanitizeExtensionUrl_=function(e,t,o){return(e=e.exec(t))?(e=e[1],-1==(o instanceof goog.string.Const?[goog.string.Const.unwrap(o)]:o.map((function(e){return goog.string.Const.unwrap(e)}))).indexOf(e)&&(t=goog.html.SafeUrl.INNOCUOUS_STRING)):t=goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t)},goog.html.SafeUrl.fromTrustedResourceUrl=function(e){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(e))},goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i,goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_,goog.html.SafeUrl.sanitize=function(e){return e instanceof goog.html.SafeUrl?e:(e=\"object\"==typeof e&&e.implementsGoogStringTypedString?e.getTypedStringValue():String(e),goog.html.SAFE_URL_PATTERN_.test(e)||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e))},goog.html.SafeUrl.sanitizeAssertUnchanged=function(e,t){return e instanceof goog.html.SafeUrl?e:(e=\"object\"==typeof e&&e.implementsGoogStringTypedString?e.getTypedStringValue():String(e),t&&/^data:/i.test(e)&&(t=goog.html.SafeUrl.fromDataUrl(e)).getTypedStringValue()==e?t:(goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(e),\"%s does not match the safe URL pattern\",e)||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)))},goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(e){var t=new goog.html.SafeUrl;return t.privateDoNotAccessOrElseSafeUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(e):e,t},goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\"about:blank\"),goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=\"\",this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_},goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0,goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.SafeStyle.fromConstant=function(e){return 0===(e=goog.string.Const.unwrap(e)).length?goog.html.SafeStyle.EMPTY:(goog.asserts.assert(goog.string.internal.endsWith(e,\";\"),\"Last character of style string is not ';': \"+e),goog.asserts.assert(goog.string.internal.contains(e,\":\"),\"Style string must contain at least one ':', to specify a \\\"name: value\\\" pair: \"+e),goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(e))},goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_},goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return\"SafeStyle{\"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+\"}\"}),goog.html.SafeStyle.unwrap=function(e){return e instanceof goog.html.SafeStyle&&e.constructor===goog.html.SafeStyle&&e.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseSafeStyleWrappedValue_:(goog.asserts.fail(\"expected object of type SafeStyle, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:SafeStyle\")},goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(e){return(new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(e)},goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(e){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_=e,this},goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\"),goog.html.SafeStyle.INNOCUOUS_STRING=\"zClosurez\",goog.html.SafeStyle.create=function(e){var t,o=\"\";for(t in e){if(!/^[-_a-zA-Z0-9]+$/.test(t))throw Error(\"Name allows only [-_a-zA-Z0-9], got: \"+t);var r=e[t];null!=r&&(o+=t+\":\"+(r=goog.isArray(r)?goog.array.map(r,goog.html.SafeStyle.sanitizePropertyValue_).join(\" \"):goog.html.SafeStyle.sanitizePropertyValue_(r))+\";\")}return o?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(o):goog.html.SafeStyle.EMPTY},goog.html.SafeStyle.sanitizePropertyValue_=function(e){if(e instanceof goog.html.SafeUrl)return'url(\"'+goog.html.SafeUrl.unwrap(e).replace(/</g,\"%3c\").replace(/[\\\\\"]/g,\"\\\\$&\")+'\")';if(e=e instanceof goog.string.Const?goog.string.Const.unwrap(e):goog.html.SafeStyle.sanitizePropertyValueString_(String(e)),/[{;}]/.test(e))throw new goog.asserts.AssertionError(\"Value does not allow [{;}], got: %s.\",[e]);return e},goog.html.SafeStyle.sanitizePropertyValueString_=function(e){var t=e.replace(goog.html.SafeStyle.FUNCTIONS_RE_,\"$1\").replace(goog.html.SafeStyle.FUNCTIONS_RE_,\"$1\").replace(goog.html.SafeStyle.URL_RE_,\"url\");return goog.html.SafeStyle.VALUE_RE_.test(t)?goog.html.SafeStyle.COMMENT_RE_.test(e)?(goog.asserts.fail(\"String value disallows comments, got: \"+e),goog.html.SafeStyle.INNOCUOUS_STRING):goog.html.SafeStyle.hasBalancedQuotes_(e)?goog.html.SafeStyle.hasBalancedSquareBrackets_(e)?goog.html.SafeStyle.sanitizeUrl_(e):(goog.asserts.fail(\"String value requires balanced square brackets and one identifier per pair of brackets, got: \"+e),goog.html.SafeStyle.INNOCUOUS_STRING):(goog.asserts.fail(\"String value requires balanced quotes, got: \"+e),goog.html.SafeStyle.INNOCUOUS_STRING):(goog.asserts.fail(\"String value allows only \"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+\" and simple functions, got: \"+e),goog.html.SafeStyle.INNOCUOUS_STRING)},goog.html.SafeStyle.hasBalancedQuotes_=function(e){for(var t=!0,o=!0,r=0;r<e.length;r++){var s=e.charAt(r);\"'\"==s&&o?t=!t:'\"'==s&&t&&(o=!o)}return t&&o},goog.html.SafeStyle.hasBalancedSquareBrackets_=function(e){for(var t=!0,o=/^[-_a-zA-Z0-9]$/,r=0;r<e.length;r++){var s=e.charAt(r);if(\"]\"==s){if(t)return!1;t=!0}else if(\"[\"==s){if(!t)return!1;t=!1}else if(!t&&!o.test(s))return!1}return t},goog.html.SafeStyle.VALUE_ALLOWED_CHARS_=\"[-,.\\\"'%_!# a-zA-Z0-9\\\\[\\\\]]\",goog.html.SafeStyle.VALUE_RE_=new RegExp(\"^\"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+\"+$\"),goog.html.SafeStyle.URL_RE_=/\\b(url\\([ \\t\\n]*)('[ -&(-\\[\\]-~]*'|\"[ !#-\\[\\]-~]*\"|[!#-&*-\\[\\]-~]*)([ \\t\\n]*\\))/g,goog.html.SafeStyle.FUNCTIONS_RE_=/\\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\\([-+*/0-9a-z.%\\[\\], ]+\\)/g,goog.html.SafeStyle.COMMENT_RE_=/\\/\\*/,goog.html.SafeStyle.sanitizeUrl_=function(e){return e.replace(goog.html.SafeStyle.URL_RE_,(function(e,t,o,r){var s=\"\";return o=o.replace(/^(['\"])(.*)\\1$/,(function(e,t,o){return s=t,o})),e=goog.html.SafeUrl.sanitize(o).getTypedStringValue(),t+s+e+s+r}))},goog.html.SafeStyle.concat=function(e){var t=\"\",o=function(e){goog.isArray(e)?goog.array.forEach(e,o):t+=goog.html.SafeStyle.unwrap(e)};return goog.array.forEach(arguments,o),t?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t):goog.html.SafeStyle.EMPTY},goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=\"\",this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_},goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0,goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.SafeScript.fromConstant=function(e){return 0===(e=goog.string.Const.unwrap(e)).length?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeScript.fromConstantAndArgs=function(e,t){for(var o=[],r=1;r<arguments.length;r++)o.push(goog.html.SafeScript.stringify_(arguments[r]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"(\"+goog.string.Const.unwrap(e)+\")(\"+o.join(\", \")+\");\")},goog.html.SafeScript.fromJson=function(e){return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(e))},goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()},goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return\"SafeScript{\"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+\"}\"}),goog.html.SafeScript.unwrap=function(e){return goog.html.SafeScript.unwrapTrustedScript(e).toString()},goog.html.SafeScript.unwrapTrustedScript=function(e){return e instanceof goog.html.SafeScript&&e.constructor===goog.html.SafeScript&&e.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseSafeScriptWrappedValue_:(goog.asserts.fail(\"expected object of type SafeScript, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:SafeScript\")},goog.html.SafeScript.stringify_=function(e){return JSON.stringify(e).replace(/</g,\"\\\\x3c\")},goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(e){return(new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(e)},goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(e){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(e):e,this},goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"\"),goog.object={},goog.object.is=function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t},goog.object.forEach=function(e,t,o){for(var r in e)t.call(o,e[r],r,e)},goog.object.filter=function(e,t,o){var r,s={};for(r in e)t.call(o,e[r],r,e)&&(s[r]=e[r]);return s},goog.object.map=function(e,t,o){var r,s={};for(r in e)s[r]=t.call(o,e[r],r,e);return s},goog.object.some=function(e,t,o){for(var r in e)if(t.call(o,e[r],r,e))return!0;return!1},goog.object.every=function(e,t,o){for(var r in e)if(!t.call(o,e[r],r,e))return!1;return!0},goog.object.getCount=function(e){var t,o=0;for(t in e)o++;return o},goog.object.getAnyKey=function(e){for(var t in e)return t},goog.object.getAnyValue=function(e){for(var t in e)return e[t]},goog.object.contains=function(e,t){return goog.object.containsValue(e,t)},goog.object.getValues=function(e){var t,o=[],r=0;for(t in e)o[r++]=e[t];return o},goog.object.getKeys=function(e){var t,o=[],r=0;for(t in e)o[r++]=t;return o},goog.object.getValueByKeys=function(e,t){var o=goog.isArrayLike(t),r=o?t:arguments;for(o=o?0:1;o<r.length;o++){if(null==e)return;e=e[r[o]]}return e},goog.object.containsKey=function(e,t){return null!==e&&t in e},goog.object.containsValue=function(e,t){for(var o in e)if(e[o]==t)return!0;return!1},goog.object.findKey=function(e,t,o){for(var r in e)if(t.call(o,e[r],r,e))return r},goog.object.findValue=function(e,t,o){return(t=goog.object.findKey(e,t,o))&&e[t]},goog.object.isEmpty=function(e){for(var t in e)return!1;return!0},goog.object.clear=function(e){for(var t in e)delete e[t]},goog.object.remove=function(e,t){var o;return(o=t in e)&&delete e[t],o},goog.object.add=function(e,t,o){if(null!==e&&t in e)throw Error('The object already contains the key \"'+t+'\"');goog.object.set(e,t,o)},goog.object.get=function(e,t,o){return null!==e&&t in e?e[t]:o},goog.object.set=function(e,t,o){e[t]=o},goog.object.setIfUndefined=function(e,t,o){return t in e?e[t]:e[t]=o},goog.object.setWithReturnValueIfNotSet=function(e,t,o){return t in e?e[t]:(o=o(),e[t]=o)},goog.object.equals=function(e,t){for(var o in e)if(!(o in t)||e[o]!==t[o])return!1;for(var r in t)if(!(r in e))return!1;return!0},goog.object.clone=function(e){var t,o={};for(t in e)o[t]=e[t];return o},goog.object.unsafeClone=function(e){var t=goog.typeOf(e);if(\"object\"==t||\"array\"==t){if(goog.isFunction(e.clone))return e.clone();for(var o in t=\"array\"==t?[]:{},e)t[o]=goog.object.unsafeClone(e[o]);return t}return e},goog.object.transpose=function(e){var t,o={};for(t in e)o[e[t]]=t;return o},goog.object.PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),goog.object.extend=function(e,t){for(var o,r,s=1;s<arguments.length;s++){for(o in r=arguments[s])e[o]=r[o];for(var n=0;n<goog.object.PROTOTYPE_FIELDS_.length;n++)o=goog.object.PROTOTYPE_FIELDS_[n],Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}},goog.object.create=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(t%2)throw Error(\"Uneven number of arguments\");for(var o={},r=0;r<t;r+=2)o[arguments[r]]=arguments[r+1];return o},goog.object.createSet=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var o={},r=0;r<t;r++)o[arguments[r]]=!0;return o},goog.object.createImmutableView=function(e){var t=e;return Object.isFrozen&&!Object.isFrozen(e)&&(t=Object.create(e),Object.freeze(t)),t},goog.object.isImmutableView=function(e){return!!Object.isFrozen&&Object.isFrozen(e)},goog.object.getAllPropertyNames=function(e,t,o){if(!e)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(e);for(var r={};e&&(e!==Object.prototype||t)&&(e!==Function.prototype||o);){for(var s=Object.getOwnPropertyNames(e),n=0;n<s.length;n++)r[s[n]]=!0;e=Object.getPrototypeOf(e)}return goog.object.getKeys(r)},goog.object.getSuperClass=function(e){return(e=Object.getPrototypeOf(e.prototype))&&e.constructor},goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=\"\",this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_},goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0,goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.SafeStyleSheet.createRule=function(e,t){if(goog.string.internal.contains(e,\"<\"))throw Error(\"Selector does not allow '<', got: \"+e);var o=e.replace(/('|\")((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g,\"\");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|]+$/.test(o))throw Error(\"Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|] and strings, got: \"+e);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(o))throw Error(\"() and [] in selector must be balanced, got: \"+e);return t instanceof goog.html.SafeStyle||(t=goog.html.SafeStyle.create(t)),e=e+\"{\"+goog.html.SafeStyle.unwrap(t).replace(/</g,\"\\\\3C \")+\"}\",goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e)},goog.html.SafeStyleSheet.hasBalancedBrackets_=function(e){for(var t={\"(\":\")\",\"[\":\"]\"},o=[],r=0;r<e.length;r++){var s=e[r];if(t[s])o.push(t[s]);else if(goog.object.contains(t,s)&&o.pop()!=s)return!1}return 0==o.length},goog.html.SafeStyleSheet.concat=function(e){var t=\"\",o=function(e){goog.isArray(e)?goog.array.forEach(e,o):t+=goog.html.SafeStyleSheet.unwrap(e)};return goog.array.forEach(arguments,o),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t)},goog.html.SafeStyleSheet.fromConstant=function(e){return 0===(e=goog.string.Const.unwrap(e)).length?goog.html.SafeStyleSheet.EMPTY:(goog.asserts.assert(!goog.string.internal.contains(e,\"<\"),\"Forbidden '<' character in style sheet string: \"+e),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e))},goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_},goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return\"SafeStyleSheet{\"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+\"}\"}),goog.html.SafeStyleSheet.unwrap=function(e){return e instanceof goog.html.SafeStyleSheet&&e.constructor===goog.html.SafeStyleSheet&&e.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_:(goog.asserts.fail(\"expected object of type SafeStyleSheet, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:SafeStyleSheet\")},goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(e){return(new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(e)},goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(e){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=e,this},goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\"\"),goog.dom.tags={},goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},goog.dom.tags.isVoidTag=function(e){return!0===goog.dom.tags.VOID_TAGS_[e]},goog.dom.HtmlElement=function(){},goog.dom.TagName=function(e){this.tagName_=e},goog.dom.TagName.prototype.toString=function(){return this.tagName_},goog.dom.TagName.A=new goog.dom.TagName(\"A\"),goog.dom.TagName.ABBR=new goog.dom.TagName(\"ABBR\"),goog.dom.TagName.ACRONYM=new goog.dom.TagName(\"ACRONYM\"),goog.dom.TagName.ADDRESS=new goog.dom.TagName(\"ADDRESS\"),goog.dom.TagName.APPLET=new goog.dom.TagName(\"APPLET\"),goog.dom.TagName.AREA=new goog.dom.TagName(\"AREA\"),goog.dom.TagName.ARTICLE=new goog.dom.TagName(\"ARTICLE\"),goog.dom.TagName.ASIDE=new goog.dom.TagName(\"ASIDE\"),goog.dom.TagName.AUDIO=new goog.dom.TagName(\"AUDIO\"),goog.dom.TagName.B=new goog.dom.TagName(\"B\"),goog.dom.TagName.BASE=new goog.dom.TagName(\"BASE\"),goog.dom.TagName.BASEFONT=new goog.dom.TagName(\"BASEFONT\"),goog.dom.TagName.BDI=new goog.dom.TagName(\"BDI\"),goog.dom.TagName.BDO=new goog.dom.TagName(\"BDO\"),goog.dom.TagName.BIG=new goog.dom.TagName(\"BIG\"),goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName(\"BLOCKQUOTE\"),goog.dom.TagName.BODY=new goog.dom.TagName(\"BODY\"),goog.dom.TagName.BR=new goog.dom.TagName(\"BR\"),goog.dom.TagName.BUTTON=new goog.dom.TagName(\"BUTTON\"),goog.dom.TagName.CANVAS=new goog.dom.TagName(\"CANVAS\"),goog.dom.TagName.CAPTION=new goog.dom.TagName(\"CAPTION\"),goog.dom.TagName.CENTER=new goog.dom.TagName(\"CENTER\"),goog.dom.TagName.CITE=new goog.dom.TagName(\"CITE\"),goog.dom.TagName.CODE=new goog.dom.TagName(\"CODE\"),goog.dom.TagName.COL=new goog.dom.TagName(\"COL\"),goog.dom.TagName.COLGROUP=new goog.dom.TagName(\"COLGROUP\"),goog.dom.TagName.COMMAND=new goog.dom.TagName(\"COMMAND\"),goog.dom.TagName.DATA=new goog.dom.TagName(\"DATA\"),goog.dom.TagName.DATALIST=new goog.dom.TagName(\"DATALIST\"),goog.dom.TagName.DD=new goog.dom.TagName(\"DD\"),goog.dom.TagName.DEL=new goog.dom.TagName(\"DEL\"),goog.dom.TagName.DETAILS=new goog.dom.TagName(\"DETAILS\"),goog.dom.TagName.DFN=new goog.dom.TagName(\"DFN\"),goog.dom.TagName.DIALOG=new goog.dom.TagName(\"DIALOG\"),goog.dom.TagName.DIR=new goog.dom.TagName(\"DIR\"),goog.dom.TagName.DIV=new goog.dom.TagName(\"DIV\"),goog.dom.TagName.DL=new goog.dom.TagName(\"DL\"),goog.dom.TagName.DT=new goog.dom.TagName(\"DT\"),goog.dom.TagName.EM=new goog.dom.TagName(\"EM\"),goog.dom.TagName.EMBED=new goog.dom.TagName(\"EMBED\"),goog.dom.TagName.FIELDSET=new goog.dom.TagName(\"FIELDSET\"),goog.dom.TagName.FIGCAPTION=new goog.dom.TagName(\"FIGCAPTION\"),goog.dom.TagName.FIGURE=new goog.dom.TagName(\"FIGURE\"),goog.dom.TagName.FONT=new goog.dom.TagName(\"FONT\"),goog.dom.TagName.FOOTER=new goog.dom.TagName(\"FOOTER\"),goog.dom.TagName.FORM=new goog.dom.TagName(\"FORM\"),goog.dom.TagName.FRAME=new goog.dom.TagName(\"FRAME\"),goog.dom.TagName.FRAMESET=new goog.dom.TagName(\"FRAMESET\"),goog.dom.TagName.H1=new goog.dom.TagName(\"H1\"),goog.dom.TagName.H2=new goog.dom.TagName(\"H2\"),goog.dom.TagName.H3=new goog.dom.TagName(\"H3\"),goog.dom.TagName.H4=new goog.dom.TagName(\"H4\"),goog.dom.TagName.H5=new goog.dom.TagName(\"H5\"),goog.dom.TagName.H6=new goog.dom.TagName(\"H6\"),goog.dom.TagName.HEAD=new goog.dom.TagName(\"HEAD\"),goog.dom.TagName.HEADER=new goog.dom.TagName(\"HEADER\"),goog.dom.TagName.HGROUP=new goog.dom.TagName(\"HGROUP\"),goog.dom.TagName.HR=new goog.dom.TagName(\"HR\"),goog.dom.TagName.HTML=new goog.dom.TagName(\"HTML\"),goog.dom.TagName.I=new goog.dom.TagName(\"I\"),goog.dom.TagName.IFRAME=new goog.dom.TagName(\"IFRAME\"),goog.dom.TagName.IMG=new goog.dom.TagName(\"IMG\"),goog.dom.TagName.INPUT=new goog.dom.TagName(\"INPUT\"),goog.dom.TagName.INS=new goog.dom.TagName(\"INS\"),goog.dom.TagName.ISINDEX=new goog.dom.TagName(\"ISINDEX\"),goog.dom.TagName.KBD=new goog.dom.TagName(\"KBD\"),goog.dom.TagName.KEYGEN=new goog.dom.TagName(\"KEYGEN\"),goog.dom.TagName.LABEL=new goog.dom.TagName(\"LABEL\"),goog.dom.TagName.LEGEND=new goog.dom.TagName(\"LEGEND\"),goog.dom.TagName.LI=new goog.dom.TagName(\"LI\"),goog.dom.TagName.LINK=new goog.dom.TagName(\"LINK\"),goog.dom.TagName.MAIN=new goog.dom.TagName(\"MAIN\"),goog.dom.TagName.MAP=new goog.dom.TagName(\"MAP\"),goog.dom.TagName.MARK=new goog.dom.TagName(\"MARK\"),goog.dom.TagName.MATH=new goog.dom.TagName(\"MATH\"),goog.dom.TagName.MENU=new goog.dom.TagName(\"MENU\"),goog.dom.TagName.MENUITEM=new goog.dom.TagName(\"MENUITEM\"),goog.dom.TagName.META=new goog.dom.TagName(\"META\"),goog.dom.TagName.METER=new goog.dom.TagName(\"METER\"),goog.dom.TagName.NAV=new goog.dom.TagName(\"NAV\"),goog.dom.TagName.NOFRAMES=new goog.dom.TagName(\"NOFRAMES\"),goog.dom.TagName.NOSCRIPT=new goog.dom.TagName(\"NOSCRIPT\"),goog.dom.TagName.OBJECT=new goog.dom.TagName(\"OBJECT\"),goog.dom.TagName.OL=new goog.dom.TagName(\"OL\"),goog.dom.TagName.OPTGROUP=new goog.dom.TagName(\"OPTGROUP\"),goog.dom.TagName.OPTION=new goog.dom.TagName(\"OPTION\"),goog.dom.TagName.OUTPUT=new goog.dom.TagName(\"OUTPUT\"),goog.dom.TagName.P=new goog.dom.TagName(\"P\"),goog.dom.TagName.PARAM=new goog.dom.TagName(\"PARAM\"),goog.dom.TagName.PICTURE=new goog.dom.TagName(\"PICTURE\"),goog.dom.TagName.PRE=new goog.dom.TagName(\"PRE\"),goog.dom.TagName.PROGRESS=new goog.dom.TagName(\"PROGRESS\"),goog.dom.TagName.Q=new goog.dom.TagName(\"Q\"),goog.dom.TagName.RP=new goog.dom.TagName(\"RP\"),goog.dom.TagName.RT=new goog.dom.TagName(\"RT\"),goog.dom.TagName.RTC=new goog.dom.TagName(\"RTC\"),goog.dom.TagName.RUBY=new goog.dom.TagName(\"RUBY\"),goog.dom.TagName.S=new goog.dom.TagName(\"S\"),goog.dom.TagName.SAMP=new goog.dom.TagName(\"SAMP\"),goog.dom.TagName.SCRIPT=new goog.dom.TagName(\"SCRIPT\"),goog.dom.TagName.SECTION=new goog.dom.TagName(\"SECTION\"),goog.dom.TagName.SELECT=new goog.dom.TagName(\"SELECT\"),goog.dom.TagName.SMALL=new goog.dom.TagName(\"SMALL\"),goog.dom.TagName.SOURCE=new goog.dom.TagName(\"SOURCE\"),goog.dom.TagName.SPAN=new goog.dom.TagName(\"SPAN\"),goog.dom.TagName.STRIKE=new goog.dom.TagName(\"STRIKE\"),goog.dom.TagName.STRONG=new goog.dom.TagName(\"STRONG\"),goog.dom.TagName.STYLE=new goog.dom.TagName(\"STYLE\"),goog.dom.TagName.SUB=new goog.dom.TagName(\"SUB\"),goog.dom.TagName.SUMMARY=new goog.dom.TagName(\"SUMMARY\"),goog.dom.TagName.SUP=new goog.dom.TagName(\"SUP\"),goog.dom.TagName.SVG=new goog.dom.TagName(\"SVG\"),goog.dom.TagName.TABLE=new goog.dom.TagName(\"TABLE\"),goog.dom.TagName.TBODY=new goog.dom.TagName(\"TBODY\"),goog.dom.TagName.TD=new goog.dom.TagName(\"TD\"),goog.dom.TagName.TEMPLATE=new goog.dom.TagName(\"TEMPLATE\"),goog.dom.TagName.TEXTAREA=new goog.dom.TagName(\"TEXTAREA\"),goog.dom.TagName.TFOOT=new goog.dom.TagName(\"TFOOT\"),goog.dom.TagName.TH=new goog.dom.TagName(\"TH\"),goog.dom.TagName.THEAD=new goog.dom.TagName(\"THEAD\"),goog.dom.TagName.TIME=new goog.dom.TagName(\"TIME\"),goog.dom.TagName.TITLE=new goog.dom.TagName(\"TITLE\"),goog.dom.TagName.TR=new goog.dom.TagName(\"TR\"),goog.dom.TagName.TRACK=new goog.dom.TagName(\"TRACK\"),goog.dom.TagName.TT=new goog.dom.TagName(\"TT\"),goog.dom.TagName.U=new goog.dom.TagName(\"U\"),goog.dom.TagName.UL=new goog.dom.TagName(\"UL\"),goog.dom.TagName.VAR=new goog.dom.TagName(\"VAR\"),goog.dom.TagName.VIDEO=new goog.dom.TagName(\"VIDEO\"),goog.dom.TagName.WBR=new goog.dom.TagName(\"WBR\"),goog.labs={},goog.labs.userAgent={},goog.labs.userAgent.util={},goog.labs.userAgent.util.getNativeUserAgentString_=function(){var e=goog.labs.userAgent.util.getNavigator_();return e&&(e=e.userAgent)?e:\"\"},goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator},goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_(),goog.labs.userAgent.util.setUserAgent=function(e){goog.labs.userAgent.util.userAgent_=e||goog.labs.userAgent.util.getNativeUserAgentString_()},goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_},goog.labs.userAgent.util.matchUserAgent=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(t,e)},goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(t,e)},goog.labs.userAgent.util.extractVersionTuples=function(e){for(var t,o=/(\\w[\\w ]+)\\/([^\\s]+)\\s*(?:\\((.*?)\\))?/g,r=[];t=o.exec(e);)r.push([t[1],t[2],t[3]||void 0]);return r},goog.labs.userAgent.browser={},goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Opera\")},goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")},goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")},goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edg/\")},goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent(\"OPR\")},goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Firefox\")||goog.labs.userAgent.util.matchUserAgent(\"FxiOS\")},goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Safari\")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent(\"Android\"))},goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Coast\")},goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"iPad\")||goog.labs.userAgent.util.matchUserAgent(\"iPhone\"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\")},goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"Chrome\")||goog.labs.userAgent.util.matchUserAgent(\"CriOS\"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()},goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())},goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_,goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_,goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_,goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_,goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_,goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_,goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_,goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_,goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_,goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_,goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_,goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent(\"Silk\")},goog.labs.userAgent.browser.getVersion=function(){function e(e){return e=goog.array.find(e,r),o[e]||\"\"}var t=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(t);t=goog.labs.userAgent.util.extractVersionTuples(t);var o={};goog.array.forEach(t,(function(e){o[e[0]]=e[1]}));var r=goog.partial(goog.object.containsKey,o);return goog.labs.userAgent.browser.isOpera()?e([\"Version\",\"Opera\"]):goog.labs.userAgent.browser.isEdge()?e([\"Edge\"]):goog.labs.userAgent.browser.isEdgeChromium()?e([\"Edg\"]):goog.labs.userAgent.browser.isChrome()?e([\"Chrome\",\"CriOS\"]):(t=t[2])&&t[1]||\"\"},goog.labs.userAgent.browser.isVersionOrHigher=function(e){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),e)},goog.labs.userAgent.browser.getIEVersion_=function(e){var t=/rv: *([\\d\\.]*)/.exec(e);if(t&&t[1])return t[1];t=\"\";var o=/MSIE +([\\d\\.]+)/.exec(e);if(o&&o[1])if(e=/Trident\\/(\\d.\\d)/.exec(e),\"7.0\"==o[1])if(e&&e[1])switch(e[1]){case\"4.0\":t=\"8.0\";break;case\"5.0\":t=\"9.0\";break;case\"6.0\":t=\"10.0\";break;case\"7.0\":t=\"11.0\"}else t=\"7.0\";else t=o[1];return t},goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=\"\",this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_,this.dir_=null},goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0,goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_},goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0,goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()},goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return\"SafeHtml{\"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+\"}\"}),goog.html.SafeHtml.unwrap=function(e){return goog.html.SafeHtml.unwrapTrustedHTML(e).toString()},goog.html.SafeHtml.unwrapTrustedHTML=function(e){return e instanceof goog.html.SafeHtml&&e.constructor===goog.html.SafeHtml&&e.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_?e.privateDoNotAccessOrElseSafeHtmlWrappedValue_:(goog.asserts.fail(\"expected object of type SafeHtml, got '\"+e+\"' of type \"+goog.typeOf(e)),\"type_error:SafeHtml\")},goog.html.SafeHtml.htmlEscape=function(e){if(e instanceof goog.html.SafeHtml)return e;var t=\"object\"==typeof e,o=null;return t&&e.implementsGoogI18nBidiDirectionalString&&(o=e.getDirection()),e=t&&e.implementsGoogStringTypedString?e.getTypedStringValue():String(e),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(e),o)},goog.html.SafeHtml.htmlEscapePreservingNewlines=function(e){return e instanceof goog.html.SafeHtml?e:(e=goog.html.SafeHtml.htmlEscape(e),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(e)),e.getDirection()))},goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(e){return e instanceof goog.html.SafeHtml?e:(e=goog.html.SafeHtml.htmlEscape(e),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(e)),e.getDirection()))},goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape,goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/,goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0},goog.html.SafeHtml.create=function(e,t,o){return goog.html.SafeHtml.verifyTagName(String(e)),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(e),t,o)},goog.html.SafeHtml.verifyTagName=function(e){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(e))throw Error(\"Invalid tag name <\"+e+\">.\");if(e.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error(\"Tag name <\"+e+\"> is not allowed for SafeHtml.\")},goog.html.SafeHtml.createIframe=function(e,t,o,r){e&&goog.html.TrustedResourceUrl.unwrap(e);var s={};return s.src=e||null,s.srcdoc=t&&goog.html.SafeHtml.unwrap(t),e=goog.html.SafeHtml.combineAttributes(s,{sandbox:\"\"},o),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",e,r)},goog.html.SafeHtml.createSandboxIframe=function(e,t,o,r){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error(\"The browser does not support sandboxed iframes.\");var s={};return s.src=e?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e)):null,s.srcdoc=t||null,s.sandbox=\"\",e=goog.html.SafeHtml.combineAttributes(s,{},o),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",e,r)},goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&\"sandbox\"in goog.global.HTMLIFrameElement.prototype},goog.html.SafeHtml.createScriptSrc=function(e,t){return goog.html.TrustedResourceUrl.unwrap(e),e=goog.html.SafeHtml.combineAttributes({src:e},{},t),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",e)},goog.html.SafeHtml.createScript=function(e,t){for(var o in t){var r=o.toLowerCase();if(\"language\"==r||\"src\"==r||\"text\"==r||\"type\"==r)throw Error('Cannot set \"'+r+'\" attribute')}for(o=\"\",e=goog.array.concat(e),r=0;r<e.length;r++)o+=goog.html.SafeScript.unwrap(e[r]);return e=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o,goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",t,e)},goog.html.SafeHtml.createStyle=function(e,t){t=goog.html.SafeHtml.combineAttributes({type:\"text/css\"},{},t);var o=\"\";e=goog.array.concat(e);for(var r=0;r<e.length;r++)o+=goog.html.SafeStyleSheet.unwrap(e[r]);return e=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o,goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\",t,e)},goog.html.SafeHtml.createMetaRefresh=function(e,t){return e=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e)),(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(e,\";\")&&(e=\"'\"+e.replace(/'/g,\"%27\")+\"'\"),goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\",{\"http-equiv\":\"refresh\",content:(t||0)+\"; url=\"+e})},goog.html.SafeHtml.getAttrNameAndValue_=function(e,t,o){if(o instanceof goog.string.Const)o=goog.string.Const.unwrap(o);else if(\"style\"==t.toLowerCase())o=goog.html.SafeHtml.getStyleValue_(o);else{if(/^on/i.test(t))throw Error('Attribute \"'+t+'\" requires goog.string.Const value, \"'+o+'\" given.');if(t.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(o instanceof goog.html.TrustedResourceUrl)o=goog.html.TrustedResourceUrl.unwrap(o);else if(o instanceof goog.html.SafeUrl)o=goog.html.SafeUrl.unwrap(o);else{if(!goog.isString(o))throw Error('Attribute \"'+t+'\" on tag \"'+e+'\" requires goog.html.SafeUrl, goog.string.Const, or string, value \"'+o+'\" given.');o=goog.html.SafeUrl.sanitize(o).getTypedStringValue()}}return o.implementsGoogStringTypedString&&(o=o.getTypedStringValue()),goog.asserts.assert(goog.isString(o)||goog.isNumber(o),\"String or number value expected, got \"+typeof o+\" with value: \"+o),t+'=\"'+goog.string.internal.htmlEscape(String(o))+'\"'},goog.html.SafeHtml.getStyleValue_=function(e){if(!goog.isObject(e))throw Error('The \"style\" attribute requires goog.html.SafeStyle or map of style properties, '+typeof e+\" given: \"+e);return e instanceof goog.html.SafeStyle||(e=goog.html.SafeStyle.create(e)),goog.html.SafeStyle.unwrap(e)},goog.html.SafeHtml.createWithDir=function(e,t,o,r){return(t=goog.html.SafeHtml.create(t,o,r)).dir_=e,t},goog.html.SafeHtml.join=function(e,t){var o=(e=goog.html.SafeHtml.htmlEscape(e)).getDirection(),r=[],s=function(e){goog.isArray(e)?goog.array.forEach(e,s):(e=goog.html.SafeHtml.htmlEscape(e),r.push(goog.html.SafeHtml.unwrap(e)),e=e.getDirection(),o==goog.i18n.bidi.Dir.NEUTRAL?o=e:e!=goog.i18n.bidi.Dir.NEUTRAL&&o!=e&&(o=null))};return goog.array.forEach(t,s),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r.join(goog.html.SafeHtml.unwrap(e)),o)},goog.html.SafeHtml.concat=function(e){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))},goog.html.SafeHtml.concatWithDir=function(e,t){var o=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));return o.dir_=e,o},goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={},goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(e,t){return(new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(e,t)},goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(e,t){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(e):e,this.dir_=t,this},goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(e,t,o){var r=null,s=\"<\"+e+goog.html.SafeHtml.stringifyAttributes(e,t);return goog.isDefAndNotNull(o)?goog.isArray(o)||(o=[o]):o=[],goog.dom.tags.isVoidTag(e.toLowerCase())?(goog.asserts.assert(!o.length,\"Void tag <\"+e+\"> does not allow content.\"),s+=\">\"):(r=goog.html.SafeHtml.concat(o),s+=\">\"+goog.html.SafeHtml.unwrap(r)+\"</\"+e+\">\",r=r.getDirection()),(e=t&&t.dir)&&(r=/^(ltr|rtl|auto)$/i.test(e)?goog.i18n.bidi.Dir.NEUTRAL:null),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(s,r)},goog.html.SafeHtml.stringifyAttributes=function(e,t){var o=\"\";if(t)for(var r in t){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(r))throw Error('Invalid attribute name \"'+r+'\".');var s=t[r];goog.isDefAndNotNull(s)&&(o+=\" \"+goog.html.SafeHtml.getAttrNameAndValue_(e,r,s))}return o},goog.html.SafeHtml.combineAttributes=function(e,t,o){var r,s={};for(r in e)goog.asserts.assert(r.toLowerCase()==r,\"Must be lower case\"),s[r]=e[r];for(r in t)goog.asserts.assert(r.toLowerCase()==r,\"Must be lower case\"),s[r]=t[r];for(r in o){var n=r.toLowerCase();if(n in e)throw Error('Cannot override \"'+n+'\" attribute, got \"'+r+'\" with value \"'+o[r]+'\"');n in t&&delete s[n],s[r]=o[r]}return s},goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<!DOCTYPE html>\",goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\",goog.i18n.bidi.Dir.NEUTRAL),goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<br>\",goog.i18n.bidi.Dir.NEUTRAL),goog.html.uncheckedconversions={},goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(e,t,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(t,o||null)},goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(e,t){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(t)},goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(e,t){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t)},goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(e,t){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t)},goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(e,t){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t)},goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(e,t){return goog.asserts.assertString(goog.string.Const.unwrap(e),\"must provide justification\"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),\"must provide non-empty justification\"),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t)},goog.dom.asserts={},goog.dom.asserts.assertIsLocation=function(e){if(goog.asserts.ENABLE_ASSERTS){var t=goog.dom.asserts.getWindow_(e);t&&(!e||!(e instanceof t.Location)&&e instanceof t.Element)&&goog.asserts.fail(\"Argument is not a Location (or a non-Element mock); got: %s\",goog.dom.asserts.debugStringForType_(e))}return e},goog.dom.asserts.assertIsElementType_=function(e,t){if(goog.asserts.ENABLE_ASSERTS){var o=goog.dom.asserts.getWindow_(e);o&&void 0!==o[t]&&(e&&(e instanceof o[t]||!(e instanceof o.Location||e instanceof o.Element))||goog.asserts.fail(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",t,goog.dom.asserts.debugStringForType_(e)))}return e},goog.dom.asserts.assertIsHTMLAnchorElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLAnchorElement\")},goog.dom.asserts.assertIsHTMLButtonElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLButtonElement\")},goog.dom.asserts.assertIsHTMLLinkElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLLinkElement\")},goog.dom.asserts.assertIsHTMLImageElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLImageElement\")},goog.dom.asserts.assertIsHTMLAudioElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLAudioElement\")},goog.dom.asserts.assertIsHTMLVideoElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLVideoElement\")},goog.dom.asserts.assertIsHTMLInputElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLInputElement\")},goog.dom.asserts.assertIsHTMLTextAreaElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLTextAreaElement\")},goog.dom.asserts.assertIsHTMLCanvasElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLCanvasElement\")},goog.dom.asserts.assertIsHTMLEmbedElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLEmbedElement\")},goog.dom.asserts.assertIsHTMLFormElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLFormElement\")},goog.dom.asserts.assertIsHTMLFrameElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLFrameElement\")},goog.dom.asserts.assertIsHTMLIFrameElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLIFrameElement\")},goog.dom.asserts.assertIsHTMLObjectElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLObjectElement\")},goog.dom.asserts.assertIsHTMLScriptElement=function(e){return goog.dom.asserts.assertIsElementType_(e,\"HTMLScriptElement\")},goog.dom.asserts.debugStringForType_=function(e){if(!goog.isObject(e))return void 0===e?\"undefined\":null===e?\"null\":typeof e;try{return e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e)}catch(e){return\"<object could not be stringified>\"}},goog.dom.asserts.getWindow_=function(e){try{var t=e&&e.ownerDocument,o=t&&(t.defaultView||t.parentWindow);if((o=o||goog.global).Element&&o.Location)return o}catch(e){}return null},goog.functions={},goog.functions.constant=function(e){return function(){return e}},goog.functions.FALSE=function(){return!1},goog.functions.TRUE=function(){return!0},goog.functions.NULL=function(){return null},goog.functions.identity=function(e,t){return e},goog.functions.error=function(e){return function(){throw Error(e)}},goog.functions.fail=function(e){return function(){throw e}},goog.functions.lock=function(e,t){return t=t||0,function(){return e.apply(this,Array.prototype.slice.call(arguments,0,t))}},goog.functions.nth=function(e){return function(){return arguments[e]}},goog.functions.partialRight=function(e,t){var o=Array.prototype.slice.call(arguments,1);return function(){var t=Array.prototype.slice.call(arguments);return t.push.apply(t,o),e.apply(this,t)}},goog.functions.withReturnValue=function(e,t){return goog.functions.sequence(e,goog.functions.constant(t))},goog.functions.equalTo=function(e,t){return function(o){return t?e==o:e===o}},goog.functions.compose=function(e,t){var o=arguments,r=o.length;return function(){var e;r&&(e=o[r-1].apply(this,arguments));for(var t=r-2;0<=t;t--)e=o[t].call(this,e);return e}},goog.functions.sequence=function(e){var t=arguments,o=t.length;return function(){for(var e,r=0;r<o;r++)e=t[r].apply(this,arguments);return e}},goog.functions.and=function(e){var t=arguments,o=t.length;return function(){for(var e=0;e<o;e++)if(!t[e].apply(this,arguments))return!1;return!0}},goog.functions.or=function(e){var t=arguments,o=t.length;return function(){for(var e=0;e<o;e++)if(t[e].apply(this,arguments))return!0;return!1}},goog.functions.not=function(e){return function(){return!e.apply(this,arguments)}},goog.functions.create=function(e,t){var o=function(){};return o.prototype=e.prototype,o=new o,e.apply(o,Array.prototype.slice.call(arguments,1)),o},goog.functions.CACHE_RETURN_VALUE=!0,goog.functions.cacheReturnValue=function(e){var t,o=!1;return function(){return goog.functions.CACHE_RETURN_VALUE?(o||(t=e(),o=!0),t):e()}},goog.functions.once=function(e){var t=e;return function(){if(t){var e=t;t=null,e()}}},goog.functions.debounce=function(e,t,o){var r=0;return function(s){goog.global.clearTimeout(r);var n=arguments;r=goog.global.setTimeout((function(){e.apply(o,n)}),t)}},goog.functions.throttle=function(e,t,o){var r=0,s=!1,n=[],i=function(){r=0,s&&(s=!1,a())},a=function(){r=goog.global.setTimeout(i,t),e.apply(o,n)};return function(e){n=arguments,r?s=!0:a()}},goog.functions.rateLimit=function(e,t,o){var r=0,s=function(){r=0};return function(n){r||(r=goog.global.setTimeout(s,t),e.apply(o,arguments))}},goog.dom.safe={},goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:\"afterbegin\",AFTEREND:\"afterend\",BEFOREBEGIN:\"beforebegin\",BEFOREEND:\"beforeend\"},goog.dom.safe.insertAdjacentHtml=function(e,t,o){e.insertAdjacentHTML(t,goog.html.SafeHtml.unwrapTrustedHTML(o))},goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0},goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue((function(){if(goog.DEBUG&&\"undefined\"==typeof document)return!1;var e=document.createElement(\"div\"),t=document.createElement(\"div\");return t.appendChild(document.createElement(\"div\")),e.appendChild(t),!(goog.DEBUG&&!e.firstChild)&&(t=e.firstChild.firstChild,e.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY),!t.parentElement)})),goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(e,t){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;e.lastChild;)e.removeChild(e.lastChild);e.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(t)},goog.dom.safe.setInnerHtml=function(e,t){if(goog.asserts.ENABLE_ASSERTS){var o=e.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[o])throw Error(\"goog.dom.safe.setInnerHtml cannot be used to set content of \"+e.tagName+\".\")}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(e,t)},goog.dom.safe.setOuterHtml=function(e,t){e.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(t)},goog.dom.safe.setFormElementAction=function(e,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLFormElement(e).action=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setButtonFormAction=function(e,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLButtonElement(e).formAction=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setInputFormAction=function(e,t){t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),goog.dom.asserts.assertIsHTMLInputElement(e).formAction=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setStyle=function(e,t){e.style.cssText=goog.html.SafeStyle.unwrap(t)},goog.dom.safe.documentWrite=function(e,t){e.write(goog.html.SafeHtml.unwrapTrustedHTML(t))},goog.dom.safe.setAnchorHref=function(e,t){goog.dom.asserts.assertIsHTMLAnchorElement(e),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),e.href=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setImageSrc=function(e,t){if(goog.dom.asserts.assertIsHTMLImageElement(e),!(t instanceof goog.html.SafeUrl)){var o=/^data:image\\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,o)}e.src=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setAudioSrc=function(e,t){if(goog.dom.asserts.assertIsHTMLAudioElement(e),!(t instanceof goog.html.SafeUrl)){var o=/^data:audio\\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,o)}e.src=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setVideoSrc=function(e,t){if(goog.dom.asserts.assertIsHTMLVideoElement(e),!(t instanceof goog.html.SafeUrl)){var o=/^data:video\\//i.test(t);t=goog.html.SafeUrl.sanitizeAssertUnchanged(t,o)}e.src=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.setEmbedSrc=function(e,t){goog.dom.asserts.assertIsHTMLEmbedElement(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t)},goog.dom.safe.setFrameSrc=function(e,t){goog.dom.asserts.assertIsHTMLFrameElement(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)},goog.dom.safe.setIframeSrc=function(e,t){goog.dom.asserts.assertIsHTMLIFrameElement(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)},goog.dom.safe.setIframeSrcdoc=function(e,t){goog.dom.asserts.assertIsHTMLIFrameElement(e),e.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(t)},goog.dom.safe.setLinkHrefAndRel=function(e,t,o){goog.dom.asserts.assertIsHTMLLinkElement(e),e.rel=o,goog.string.internal.caseInsensitiveContains(o,\"stylesheet\")?(goog.asserts.assert(t instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"'),e.href=goog.html.TrustedResourceUrl.unwrapTrustedURL(t)):e.href=t instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrapTrustedURL(t):t instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrapTrustedURL(t):goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(t))},goog.dom.safe.setObjectData=function(e,t){goog.dom.asserts.assertIsHTMLObjectElement(e),e.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t)},goog.dom.safe.setScriptSrc=function(e,t){goog.dom.asserts.assertIsHTMLScriptElement(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t),(t=goog.getScriptNonce())&&e.setAttribute(\"nonce\",t)},goog.dom.safe.setScriptContent=function(e,t){goog.dom.asserts.assertIsHTMLScriptElement(e),e.text=goog.html.SafeScript.unwrapTrustedScript(t),(t=goog.getScriptNonce())&&e.setAttribute(\"nonce\",t)},goog.dom.safe.setLocationHref=function(e,t){goog.dom.asserts.assertIsLocation(e),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),e.href=goog.html.SafeUrl.unwrapTrustedURL(t)},goog.dom.safe.assignLocation=function(e,t){goog.dom.asserts.assertIsLocation(e),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),e.assign(goog.html.SafeUrl.unwrapTrustedURL(t))},goog.dom.safe.replaceLocation=function(e,t){goog.dom.asserts.assertIsLocation(e),t=t instanceof goog.html.SafeUrl?t:goog.html.SafeUrl.sanitizeAssertUnchanged(t),e.replace(goog.html.SafeUrl.unwrapTrustedURL(t))},goog.dom.safe.openInWindow=function(e,t,o,r,s){return e=e instanceof goog.html.SafeUrl?e:goog.html.SafeUrl.sanitizeAssertUnchanged(e),(t||goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(e),o?goog.string.Const.unwrap(o):\"\",r,s)},goog.dom.safe.parseFromStringHtml=function(e,t){return goog.dom.safe.parseFromString(e,t,\"text/html\")},goog.dom.safe.parseFromString=function(e,t,o){return e.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(t),o)},goog.dom.safe.createImageFromBlob=function(e){if(!/^image\\/.*/g.test(e.type))throw Error(\"goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\");var t=goog.global.URL.createObjectURL(e);return(e=new goog.global.Image).onload=function(){goog.global.URL.revokeObjectURL(t)},goog.dom.safe.setImageSrc(e,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Image blob URL.\"),t)),e},goog.string.DETECT_DOUBLE_ESCAPING=!1,goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1,goog.string.Unicode={NBSP:\" \"},goog.string.startsWith=goog.string.internal.startsWith,goog.string.endsWith=goog.string.internal.endsWith,goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith,goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith,goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals,goog.string.subs=function(e,t){for(var o=e.split(\"%s\"),r=\"\",s=Array.prototype.slice.call(arguments,1);s.length&&1<o.length;)r+=o.shift()+s.shift();return r+o.join(\"%s\")},goog.string.collapseWhitespace=function(e){return e.replace(/[\\s\\xa0]+/g,\" \").replace(/^\\s+|\\s+$/g,\"\")},goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace,goog.string.isEmptyString=function(e){return 0==e.length},goog.string.isEmpty=goog.string.isEmptyOrWhitespace,goog.string.isEmptyOrWhitespaceSafe=function(e){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e))},goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe,goog.string.isBreakingWhitespace=function(e){return!/[^\\t\\n\\r ]/.test(e)},goog.string.isAlpha=function(e){return!/[^a-zA-Z]/.test(e)},goog.string.isNumeric=function(e){return!/[^0-9]/.test(e)},goog.string.isAlphaNumeric=function(e){return!/[^a-zA-Z0-9]/.test(e)},goog.string.isSpace=function(e){return\" \"==e},goog.string.isUnicodeChar=function(e){return 1==e.length&&\" \"<=e&&\"~\">=e||\"\"<=e&&\"�\">=e},goog.string.stripNewlines=function(e){return e.replace(/(\\r\\n|\\r|\\n)+/g,\" \")},goog.string.canonicalizeNewlines=function(e){return e.replace(/(\\r\\n|\\r|\\n)/g,\"\\n\")},goog.string.normalizeWhitespace=function(e){return e.replace(/\\xa0|\\s/g,\" \")},goog.string.normalizeSpaces=function(e){return e.replace(/\\xa0|[ \\t]+/g,\" \")},goog.string.collapseBreakingSpaces=function(e){return e.replace(/[\\t\\r\\n ]+/g,\" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,\"\")},goog.string.trim=goog.string.internal.trim,goog.string.trimLeft=function(e){return e.replace(/^[\\s\\xa0]+/,\"\")},goog.string.trimRight=function(e){return e.replace(/[\\s\\xa0]+$/,\"\")},goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare,goog.string.numberAwareCompare_=function(e,t,o){if(e==t)return 0;if(!e)return-1;if(!t)return 1;for(var r=e.toLowerCase().match(o),s=t.toLowerCase().match(o),n=Math.min(r.length,s.length),i=0;i<n;i++){o=r[i];var a=s[i];if(o!=a)return e=parseInt(o,10),!isNaN(e)&&(t=parseInt(a,10),!isNaN(t)&&e-t)?e-t:o<a?-1:1}return r.length!=s.length?r.length-s.length:e<t?-1:1},goog.string.intAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\\d+|\\D+/g)},goog.string.floatAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\\d+|\\.\\d+|\\D+/g)},goog.string.numerateCompare=goog.string.floatAwareCompare,goog.string.urlEncode=function(e){return encodeURIComponent(String(e))},goog.string.urlDecode=function(e){return decodeURIComponent(e.replace(/\\+/g,\" \"))},goog.string.newLineToBr=goog.string.internal.newLineToBr,goog.string.htmlEscape=function(e,t){return e=goog.string.internal.htmlEscape(e,t),goog.string.DETECT_DOUBLE_ESCAPING&&(e=e.replace(goog.string.E_RE_,\"&#101;\")),e},goog.string.E_RE_=/e/g,goog.string.unescapeEntities=function(e){return goog.string.contains(e,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(e):goog.string.unescapePureXmlEntities_(e):e},goog.string.unescapeEntitiesWithDocument=function(e,t){return goog.string.contains(e,\"&\")?goog.string.unescapeEntitiesUsingDom_(e,t):e},goog.string.unescapeEntitiesUsingDom_=function(e,t){var o={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"'},r=t?t.createElement(\"div\"):goog.global.document.createElement(\"div\");return e.replace(goog.string.HTML_ENTITY_PATTERN_,(function(e,t){var s=o[e];return s||(\"#\"==t.charAt(0)&&(t=Number(\"0\"+t.substr(1)),isNaN(t)||(s=String.fromCharCode(t))),s||(goog.dom.safe.setInnerHtml(r,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Single HTML entity.\"),e+\" \")),s=r.firstChild.nodeValue.slice(0,-1)),o[e]=s)}))},goog.string.unescapePureXmlEntities_=function(e){return e.replace(/&([^;]+);/g,(function(e,t){switch(t){case\"amp\":return\"&\";case\"lt\":return\"<\";case\"gt\":return\">\";case\"quot\":return'\"';default:return\"#\"!=t.charAt(0)||(t=Number(\"0\"+t.substr(1)),isNaN(t))?e:String.fromCharCode(t)}}))},goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g,goog.string.whitespaceEscape=function(e,t){return goog.string.newLineToBr(e.replace(/  /g,\" &#160;\"),t)},goog.string.preserveSpaces=function(e){return e.replace(/(^|[\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)},goog.string.stripQuotes=function(e,t){for(var o=t.length,r=0;r<o;r++){var s=1==o?t:t.charAt(r);if(e.charAt(0)==s&&e.charAt(e.length-1)==s)return e.substring(1,e.length-1)}return e},goog.string.truncate=function(e,t,o){return o&&(e=goog.string.unescapeEntities(e)),e.length>t&&(e=e.substring(0,t-3)+\"...\"),o&&(e=goog.string.htmlEscape(e)),e},goog.string.truncateMiddle=function(e,t,o,r){if(o&&(e=goog.string.unescapeEntities(e)),r&&e.length>t){r>t&&(r=t);var s=e.length-r;e=e.substring(0,t-r)+\"...\"+e.substring(s)}else e.length>t&&(r=Math.floor(t/2),s=e.length-r,e=e.substring(0,r+t%2)+\"...\"+e.substring(s));return o&&(e=goog.string.htmlEscape(e)),e},goog.string.specialEscapeChars_={\"\\0\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\v\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"\\\\u003C\"},goog.string.jsEscapeCache_={\"'\":\"\\\\'\"},goog.string.quote=function(e){e=String(e);for(var t=['\"'],o=0;o<e.length;o++){var r=e.charAt(o),s=r.charCodeAt(0);t[o+1]=goog.string.specialEscapeChars_[r]||(31<s&&127>s?r:goog.string.escapeChar(r))}return t.push('\"'),t.join(\"\")},goog.string.escapeString=function(e){for(var t=[],o=0;o<e.length;o++)t[o]=goog.string.escapeChar(e.charAt(o));return t.join(\"\")},goog.string.escapeChar=function(e){if(e in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[e];if(e in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[e]=goog.string.specialEscapeChars_[e];var t=e.charCodeAt(0);if(31<t&&127>t)var o=e;else 256>t?(o=\"\\\\x\",(16>t||256<t)&&(o+=\"0\")):(o=\"\\\\u\",4096>t&&(o+=\"0\")),o+=t.toString(16).toUpperCase();return goog.string.jsEscapeCache_[e]=o},goog.string.contains=goog.string.internal.contains,goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains,goog.string.countOf=function(e,t){return e&&t?e.split(t).length-1:0},goog.string.removeAt=function(e,t,o){var r=e;return 0<=t&&t<e.length&&0<o&&(r=e.substr(0,t)+e.substr(t+o,e.length-t-o)),r},goog.string.remove=function(e,t){return e.replace(t,\"\")},goog.string.removeAll=function(e,t){return t=new RegExp(goog.string.regExpEscape(t),\"g\"),e.replace(t,\"\")},goog.string.replaceAll=function(e,t,o){return t=new RegExp(goog.string.regExpEscape(t),\"g\"),e.replace(t,o.replace(/\\$/g,\"$$$$\"))},goog.string.regExpEscape=function(e){return String(e).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")},goog.string.repeat=String.prototype.repeat?function(e,t){return e.repeat(t)}:function(e,t){return Array(t+1).join(e)},goog.string.padNumber=function(e,t,o){return-1==(o=(e=goog.isDef(o)?e.toFixed(o):String(e)).indexOf(\".\"))&&(o=e.length),goog.string.repeat(\"0\",Math.max(0,t-o))+e},goog.string.makeSafe=function(e){return null==e?\"\":String(e)},goog.string.buildString=function(e){return Array.prototype.join.call(arguments,\"\")},goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)},goog.string.compareVersions=goog.string.internal.compareVersions,goog.string.hashCode=function(e){for(var t=0,o=0;o<e.length;++o)t=31*t+e.charCodeAt(o)>>>0;return t},goog.string.uniqueStringCounter_=2147483648*Math.random()|0,goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++},goog.string.toNumber=function(e){var t=Number(e);return 0==t&&goog.string.isEmptyOrWhitespace(e)?NaN:t},goog.string.isLowerCamelCase=function(e){return/^[a-z]+([A-Z][a-z]*)*$/.test(e)},goog.string.isUpperCamelCase=function(e){return/^([A-Z][a-z]*)+$/.test(e)},goog.string.toCamelCase=function(e){return String(e).replace(/\\-([a-z])/g,(function(e,t){return t.toUpperCase()}))},goog.string.toSelectorCase=function(e){return String(e).replace(/([A-Z])/g,\"-$1\").toLowerCase()},goog.string.toTitleCase=function(e,t){return t=goog.isString(t)?goog.string.regExpEscape(t):\"\\\\s\",e.replace(new RegExp(\"(^\"+(t?\"|[\"+t+\"]+\":\"\")+\")([a-z])\",\"g\"),(function(e,t,o){return t+o.toUpperCase()}))},goog.string.capitalize=function(e){return String(e.charAt(0)).toUpperCase()+String(e.substr(1)).toLowerCase()},goog.string.parseInt=function(e){return isFinite(e)&&(e=String(e)),goog.isString(e)?/^\\s*-?0x/i.test(e)?parseInt(e,16):parseInt(e,10):NaN},goog.string.splitLimit=function(e,t,o){e=e.split(t);for(var r=[];0<o&&e.length;)r.push(e.shift()),o--;return e.length&&r.push(e.join(t)),r},goog.string.lastComponent=function(e,t){if(!t)return e;\"string\"==typeof t&&(t=[t]);for(var o=-1,r=0;r<t.length;r++)if(\"\"!=t[r]){var s=e.lastIndexOf(t[r]);s>o&&(o=s)}return-1==o?e:e.slice(o+1)},goog.string.editDistance=function(e,t){var o=[],r=[];if(e==t)return 0;if(!e.length||!t.length)return Math.max(e.length,t.length);for(var s=0;s<t.length+1;s++)o[s]=s;for(s=0;s<e.length;s++){r[0]=s+1;for(var n=0;n<t.length;n++)r[n+1]=Math.min(r[n]+1,o[n+1]+1,o[n]+Number(e[s]!=t[n]));for(n=0;n<o.length;n++)o[n]=r[n]}return r[t.length]},goog.labs.userAgent.platform={},goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")},goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPod\")},goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPhone\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPod\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPad\")},goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPad\")},goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()},goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\")},goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent(\"Linux\")},goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent(\"Windows\")},goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent(\"CrOS\")},goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent(\"CrKey\")},goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"KaiOS\")},goog.labs.userAgent.platform.isGo2Phone=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"GAFP\")},goog.labs.userAgent.platform.getVersion=function(){var e=goog.labs.userAgent.util.getUserAgent(),t=\"\";return goog.labs.userAgent.platform.isWindows()?t=(e=(t=/Windows (?:NT|Phone) ([0-9.]+)/).exec(e))?e[1]:\"0.0\":goog.labs.userAgent.platform.isIos()?t=(e=(t=/(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/).exec(e))&&e[1].replace(/_/g,\".\"):goog.labs.userAgent.platform.isMacintosh()?t=(e=(t=/Mac OS X ([0-9_.]+)/).exec(e))?e[1].replace(/_/g,\".\"):\"10\":goog.labs.userAgent.platform.isKaiOS()?t=(e=(t=/(?:KaiOS)\\/(\\S+)/i).exec(e))&&e[1]:goog.labs.userAgent.platform.isAndroid()?t=(e=(t=/Android\\s+([^\\);]+)(\\)|;)/).exec(e))&&e[1]:goog.labs.userAgent.platform.isChromeOS()&&(t=(e=(t=/(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/).exec(e))&&e[1]),t||\"\"},goog.labs.userAgent.platform.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),e)},goog.reflect={},goog.reflect.object=function(e,t){return t},goog.reflect.objectProperty=function(e,t){return e},goog.reflect.sinkValue=function(e){return goog.reflect.sinkValue[\" \"](e),e},goog.reflect.sinkValue[\" \"]=goog.nullFunction,goog.reflect.canAccessProperty=function(e,t){try{return goog.reflect.sinkValue(e[t]),!0}catch(e){}return!1},goog.reflect.cache=function(e,t,o,r){return r=r?r(t):t,Object.prototype.hasOwnProperty.call(e,r)?e[r]:e[r]=o(t)},goog.labs.userAgent.engine={},goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent(\"Presto\")},goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")},goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")},goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\")&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent(\"Gecko\")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.getVersion=function(){var e=goog.labs.userAgent.util.getUserAgent();if(e){e=goog.labs.userAgent.util.extractVersionTuples(e);var t,o=goog.labs.userAgent.engine.getEngineTuple_(e);if(o)return\"Gecko\"==o[0]?goog.labs.userAgent.engine.getVersionForKey_(e,\"Firefox\"):o[1];if((e=e[0])&&(t=e[2])&&(t=/Trident\\/([^\\s;]+)/.exec(t)))return t[1]}return\"\"},goog.labs.userAgent.engine.getEngineTuple_=function(e){if(!goog.labs.userAgent.engine.isEdge())return e[1];for(var t=0;t<e.length;t++){var o=e[t];if(\"Edge\"==o[0])return o}},goog.labs.userAgent.engine.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),e)},goog.labs.userAgent.engine.getVersionForKey_=function(e,t){return(e=goog.array.find(e,(function(e){return t==e[0]})))&&e[1]||\"\"},goog.userAgent={},goog.userAgent.ASSUME_IE=!1,goog.userAgent.ASSUME_EDGE=!1,goog.userAgent.ASSUME_GECKO=!1,goog.userAgent.ASSUME_WEBKIT=!1,goog.userAgent.ASSUME_MOBILE_WEBKIT=!1,goog.userAgent.ASSUME_OPERA=!1,goog.userAgent.ASSUME_ANY_VERSION=!1,goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA,goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()},goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null},goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()},goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera(),goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE(),goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge(),goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE,goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit(),goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent(\"Mobile\")},goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_(),goog.userAgent.SAFARI=goog.userAgent.WEBKIT,goog.userAgent.determinePlatform_=function(){var e=goog.userAgent.getNavigatorTyped();return e&&e.platform||\"\"},goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_(),goog.userAgent.ASSUME_MAC=!1,goog.userAgent.ASSUME_WINDOWS=!1,goog.userAgent.ASSUME_LINUX=!1,goog.userAgent.ASSUME_X11=!1,goog.userAgent.ASSUME_ANDROID=!1,goog.userAgent.ASSUME_IPHONE=!1,goog.userAgent.ASSUME_IPAD=!1,goog.userAgent.ASSUME_IPOD=!1,goog.userAgent.ASSUME_KAIOS=!1,goog.userAgent.ASSUME_GO2PHONE=!1,goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD,goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh(),goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows(),goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()},goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_(),goog.userAgent.isX11_=function(){var e=goog.userAgent.getNavigatorTyped();return!!e&&goog.string.contains(e.appVersion||\"\",\"X11\")},goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_(),goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid(),goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone(),goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod(),goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos(),goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS(),goog.userAgent.GO2PHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_GO2PHONE:goog.labs.userAgent.platform.isGo2Phone(),goog.userAgent.determineVersion_=function(){var e=\"\",t=goog.userAgent.getVersionRegexResult_();return t&&(e=t?t[1]:\"\"),goog.userAgent.IE&&(null!=(t=goog.userAgent.getDocumentMode_())&&t>parseFloat(e))?String(t):e},goog.userAgent.getVersionRegexResult_=function(){var e=goog.userAgent.getUserAgentString();return goog.userAgent.GECKO?/rv:([^\\);]+)(\\)|;)/.exec(e):goog.userAgent.EDGE?/Edge\\/([\\d\\.]+)/.exec(e):goog.userAgent.IE?/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(e):goog.userAgent.WEBKIT?/WebKit\\/(\\S+)/.exec(e):goog.userAgent.OPERA?/(?:Version)[ \\/]?(\\S+)/.exec(e):void 0},goog.userAgent.getDocumentMode_=function(){var e=goog.global.document;return e?e.documentMode:void 0},goog.userAgent.VERSION=goog.userAgent.determineVersion_(),goog.userAgent.compare=function(e,t){return goog.string.compareVersions(e,t)},goog.userAgent.isVersionOrHigherCache_={},goog.userAgent.isVersionOrHigher=function(e){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,e,(function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,e)}))},goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher,goog.userAgent.isDocumentModeOrHigher=function(e){return Number(goog.userAgent.DOCUMENT_MODE)>=e},goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher,goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE)return goog.userAgent.getDocumentMode_()}(),goog.userAgent.product={},goog.userAgent.product.ASSUME_FIREFOX=!1,goog.userAgent.product.ASSUME_IPHONE=!1,goog.userAgent.product.ASSUME_IPAD=!1,goog.userAgent.product.ASSUME_ANDROID=!1,goog.userAgent.product.ASSUME_CHROME=!1,goog.userAgent.product.ASSUME_SAFARI=!1,goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI,goog.userAgent.product.OPERA=goog.userAgent.OPERA,goog.userAgent.product.IE=goog.userAgent.IE,goog.userAgent.product.EDGE=goog.userAgent.EDGE,goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox(),goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()},goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_(),goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser(),goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome(),goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()},goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_(),goog.crypt.base64={},goog.crypt.base64.DEFAULT_ALPHABET_COMMON_=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+\"+/=\",goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+\"-_.\",goog.crypt.base64.Alphabet={DEFAULT:0,NO_PADDING:1,WEBSAFE:2,WEBSAFE_DOT_PADDING:3,WEBSAFE_NO_PADDING:4},goog.crypt.base64.paddingChars_=\"=.\",goog.crypt.base64.isPadding_=function(e){return goog.string.contains(goog.crypt.base64.paddingChars_,e)},goog.crypt.base64.byteToCharMaps_={},goog.crypt.base64.charToByteMap_=null,goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA,goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||\"function\"==typeof goog.global.btoa,goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&\"function\"==typeof goog.global.atob,goog.crypt.base64.encodeByteArray=function(e,t){goog.asserts.assert(goog.isArrayLike(e),\"encodeByteArray takes an array as a parameter\"),void 0===t&&(t=goog.crypt.base64.Alphabet.DEFAULT),goog.crypt.base64.init_(),t=goog.crypt.base64.byteToCharMaps_[t];for(var o=[],r=0;r<e.length;r+=3){var s=e[r],n=r+1<e.length,i=n?e[r+1]:0,a=r+2<e.length,g=a?e[r+2]:0,l=s>>2;s=(3&s)<<4|i>>4,i=(15&i)<<2|g>>6,g&=63,a||(g=64,n||(i=64)),o.push(t[l],t[s],t[i]||\"\",t[g]||\"\")}return o.join(\"\")},goog.crypt.base64.encodeString=function(e,t){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!t?goog.global.btoa(e):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(e),t)},goog.crypt.base64.decodeString=function(e,t){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!t)return goog.global.atob(e);var o=\"\";return goog.crypt.base64.decodeStringInternal_(e,(function(e){o+=String.fromCharCode(e)})),o},goog.crypt.base64.decodeStringToByteArray=function(e,t){var o=[];return goog.crypt.base64.decodeStringInternal_(e,(function(e){o.push(e)})),o},goog.crypt.base64.decodeStringToUint8Array=function(e){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher(\"10\"),\"Browser does not support typed arrays\");var t=e.length,o=3*t/4;o%3?o=Math.floor(o):goog.crypt.base64.isPadding_(e[t-1])&&(o=goog.crypt.base64.isPadding_(e[t-2])?o-2:o-1);var r=new Uint8Array(o),s=0;return goog.crypt.base64.decodeStringInternal_(e,(function(e){r[s++]=e})),r.subarray(0,s)},goog.crypt.base64.decodeStringInternal_=function(e,t){function o(t){for(;r<e.length;){var o=e.charAt(r++),s=goog.crypt.base64.charToByteMap_[o];if(null!=s)return s;if(!goog.string.isEmptyOrWhitespace(o))throw Error(\"Unknown base64 encoding at char: \"+o)}return t}goog.crypt.base64.init_();for(var r=0;;){var s=o(-1),n=o(0),i=o(64),a=o(64);if(64===a&&-1===s)break;t(s<<2|n>>4),64!=i&&(t(n<<4&240|i>>2),64!=a&&t(i<<6&192|a))}},goog.crypt.base64.init_=function(){if(!goog.crypt.base64.charToByteMap_){goog.crypt.base64.charToByteMap_={};for(var e=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(\"\"),t=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],o=0;5>o;o++){var r=e.concat(t[o].split(\"\"));goog.crypt.base64.byteToCharMaps_[o]=r;for(var s=0;s<r.length;s++){var n=r[s],i=goog.crypt.base64.charToByteMap_[n];void 0===i?goog.crypt.base64.charToByteMap_[n]=s:goog.asserts.assert(i===s)}}}},jspb.utils={},jspb.utils.split64Low=0,jspb.utils.split64High=0,jspb.utils.splitUint64=function(e){var t=e>>>0;e=Math.floor((e-t)/jspb.BinaryConstants.TWO_TO_32)>>>0,jspb.utils.split64Low=t,jspb.utils.split64High=e},jspb.utils.splitInt64=function(e){var t=0>e,o=(e=Math.abs(e))>>>0;e=Math.floor((e-o)/jspb.BinaryConstants.TWO_TO_32),e>>>=0,t&&(e=~e>>>0,4294967295<(o=1+(~o>>>0))&&(o=0,4294967295<++e&&(e=0))),jspb.utils.split64Low=o,jspb.utils.split64High=e},jspb.utils.splitZigzag64=function(e){var t=0>e;e=2*Math.abs(e),jspb.utils.splitUint64(e),e=jspb.utils.split64Low;var o=jspb.utils.split64High;t&&(0==e?0==o?o=e=4294967295:(o--,e=4294967295):e--),jspb.utils.split64Low=e,jspb.utils.split64High=o},jspb.utils.splitFloat32=function(e){var t=0>e?1:0;if(0===(e=t?-e:e))0<1/e?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648);else if(isNaN(e))jspb.utils.split64High=0,jspb.utils.split64Low=2147483647;else if(e>jspb.BinaryConstants.FLOAT32_MAX)jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|2139095040)>>>0;else if(e<jspb.BinaryConstants.FLOAT32_MIN)e=Math.round(e/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|e)>>>0;else{var o=Math.floor(Math.log(e)/Math.LN2);e*=Math.pow(2,-o),e=8388607&Math.round(e*jspb.BinaryConstants.TWO_TO_23),jspb.utils.split64High=0,jspb.utils.split64Low=(t<<31|o+127<<23|e)>>>0}},jspb.utils.splitFloat64=function(e){var t=0>e?1:0;if(0===(e=t?-e:e))jspb.utils.split64High=0<1/e?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(e))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(e>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(t<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(e<jspb.BinaryConstants.FLOAT64_MIN){var o=e/Math.pow(2,-1074);e=o/jspb.BinaryConstants.TWO_TO_32,jspb.utils.split64High=(t<<31|e)>>>0,jspb.utils.split64Low=o>>>0}else{var r=0;if(2<=(o=e))for(;2<=o&&1023>r;)r++,o/=2;else for(;1>o&&-1022<r;)o*=2,r--;e=(o=e*Math.pow(2,-r))*jspb.BinaryConstants.TWO_TO_20&1048575,o=o*jspb.BinaryConstants.TWO_TO_52>>>0,jspb.utils.split64High=(t<<31|r+1023<<20|e)>>>0,jspb.utils.split64Low=o}},jspb.utils.splitHash64=function(e){var t=e.charCodeAt(0),o=e.charCodeAt(1),r=e.charCodeAt(2),s=e.charCodeAt(3),n=e.charCodeAt(4),i=e.charCodeAt(5),a=e.charCodeAt(6);e=e.charCodeAt(7),jspb.utils.split64Low=t+(o<<8)+(r<<16)+(s<<24)>>>0,jspb.utils.split64High=n+(i<<8)+(a<<16)+(e<<24)>>>0},jspb.utils.joinUint64=function(e,t){return t*jspb.BinaryConstants.TWO_TO_32+(e>>>0)},jspb.utils.joinInt64=function(e,t){var o=2147483648&t;return o&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0)),e=jspb.utils.joinUint64(e,t),o?-e:e},jspb.utils.toZigzag64=function(e,t,o){var r=t>>31;return o(e<<1^r,(t<<1|e>>>31)^r)},jspb.utils.joinZigzag64=function(e,t){return jspb.utils.fromZigzag64(e,t,jspb.utils.joinInt64)},jspb.utils.fromZigzag64=function(e,t,o){var r=-(1&e);return o((e>>>1|t<<31)^r,t>>>1^r)},jspb.utils.joinFloat32=function(e,t){t=2*(e>>31)+1;var o=e>>>23&255;return e&=8388607,255==o?e?NaN:1/0*t:0==o?t*Math.pow(2,-149)*e:t*Math.pow(2,o-150)*(e+Math.pow(2,23))},jspb.utils.joinFloat64=function(e,t){var o=2*(t>>31)+1,r=t>>>20&2047;return e=jspb.BinaryConstants.TWO_TO_32*(1048575&t)+e,2047==r?e?NaN:1/0*o:0==r?o*Math.pow(2,-1074)*e:o*Math.pow(2,r-1075)*(e+jspb.BinaryConstants.TWO_TO_52)},jspb.utils.joinHash64=function(e,t){return String.fromCharCode(e>>>0&255,e>>>8&255,e>>>16&255,e>>>24&255,t>>>0&255,t>>>8&255,t>>>16&255,t>>>24&255)},jspb.utils.DIGITS=\"0123456789abcdef\".split(\"\"),jspb.utils.ZERO_CHAR_CODE_=48,jspb.utils.A_CHAR_CODE_=97,jspb.utils.joinUnsignedDecimalString=function(e,t){function o(e,t){return e=e?String(e):\"\",t?\"0000000\".slice(e.length)+e:e}if(2097151>=t)return\"\"+(jspb.BinaryConstants.TWO_TO_32*t+e);var r=(e>>>24|t<<8)>>>0&16777215;return e=(16777215&e)+6777216*r+6710656*(t=t>>16&65535),r+=8147497*t,t*=2,1e7<=e&&(r+=Math.floor(e/1e7),e%=1e7),1e7<=r&&(t+=Math.floor(r/1e7),r%=1e7),o(t,0)+o(r,t)+o(e,1)},jspb.utils.joinSignedDecimalString=function(e,t){var o=2147483648&t;return o&&(t=~t+(0==(e=1+~e>>>0)?1:0)>>>0),e=jspb.utils.joinUnsignedDecimalString(e,t),o?\"-\"+e:e},jspb.utils.hash64ToDecimalString=function(e,t){jspb.utils.splitHash64(e),e=jspb.utils.split64Low;var o=jspb.utils.split64High;return t?jspb.utils.joinSignedDecimalString(e,o):jspb.utils.joinUnsignedDecimalString(e,o)},jspb.utils.hash64ArrayToDecimalStrings=function(e,t){for(var o=Array(e.length),r=0;r<e.length;r++)o[r]=jspb.utils.hash64ToDecimalString(e[r],t);return o},jspb.utils.decimalStringToHash64=function(e){function t(e,t){for(var o=0;8>o&&(1!==e||0<t);o++)t=e*r[o]+t,r[o]=255&t,t>>>=8}goog.asserts.assert(0<e.length);var o=!1;\"-\"===e[0]&&(o=!0,e=e.slice(1));for(var r=[0,0,0,0,0,0,0,0],s=0;s<e.length;s++)t(10,e.charCodeAt(s)-jspb.utils.ZERO_CHAR_CODE_);return o&&(function(){for(var e=0;8>e;e++)r[e]=255&~r[e]}(),t(1,1)),goog.crypt.byteArrayToString(r)},jspb.utils.splitDecimalString=function(e){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e))},jspb.utils.toHexDigit_=function(e){return String.fromCharCode(10>e?jspb.utils.ZERO_CHAR_CODE_+e:jspb.utils.A_CHAR_CODE_-10+e)},jspb.utils.fromHexCharCode_=function(e){return e>=jspb.utils.A_CHAR_CODE_?e-jspb.utils.A_CHAR_CODE_+10:e-jspb.utils.ZERO_CHAR_CODE_},jspb.utils.hash64ToHexString=function(e){var t=Array(18);t[0]=\"0\",t[1]=\"x\";for(var o=0;8>o;o++){var r=e.charCodeAt(7-o);t[2*o+2]=jspb.utils.toHexDigit_(r>>4),t[2*o+3]=jspb.utils.toHexDigit_(15&r)}return t.join(\"\")},jspb.utils.hexStringToHash64=function(e){e=e.toLowerCase(),goog.asserts.assert(18==e.length),goog.asserts.assert(\"0\"==e[0]),goog.asserts.assert(\"x\"==e[1]);for(var t=\"\",o=0;8>o;o++){var r=jspb.utils.fromHexCharCode_(e.charCodeAt(2*o+2)),s=jspb.utils.fromHexCharCode_(e.charCodeAt(2*o+3));t=String.fromCharCode(16*r+s)+t}return t},jspb.utils.hash64ToNumber=function(e,t){jspb.utils.splitHash64(e),e=jspb.utils.split64Low;var o=jspb.utils.split64High;return t?jspb.utils.joinInt64(e,o):jspb.utils.joinUint64(e,o)},jspb.utils.numberToHash64=function(e){return jspb.utils.splitInt64(e),jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.utils.countVarints=function(e,t,o){for(var r=0,s=t;s<o;s++)r+=e[s]>>7;return o-t-r},jspb.utils.countVarintFields=function(e,t,o,r){var s=0;if(128>(r=8*r+jspb.BinaryConstants.WireType.VARINT))for(;t<o&&e[t++]==r;)for(s++;;){var n=e[t++];if(0==(128&n))break}else for(;t<o;){for(n=r;128<n;){if(e[t]!=(127&n|128))return s;t++,n>>=7}if(e[t++]!=n)break;for(s++;0!=(128&(n=e[t++])););}return s},jspb.utils.countFixedFields_=function(e,t,o,r,s){var n=0;if(128>r)for(;t<o&&e[t++]==r;)n++,t+=s;else for(;t<o;){for(var i=r;128<i;){if(e[t++]!=(127&i|128))return n;i>>=7}if(e[t++]!=i)break;n++,t+=s}return n},jspb.utils.countFixed32Fields=function(e,t,o,r){return jspb.utils.countFixedFields_(e,t,o,8*r+jspb.BinaryConstants.WireType.FIXED32,4)},jspb.utils.countFixed64Fields=function(e,t,o,r){return jspb.utils.countFixedFields_(e,t,o,8*r+jspb.BinaryConstants.WireType.FIXED64,8)},jspb.utils.countDelimitedFields=function(e,t,o,r){var s=0;for(r=8*r+jspb.BinaryConstants.WireType.DELIMITED;t<o;){for(var n=r;128<n;){if(e[t++]!=(127&n|128))return s;n>>=7}if(e[t++]!=n)break;s++;for(var i=0,a=1;i+=(127&(n=e[t++]))*a,a*=128,0!=(128&n););t+=i}return s},jspb.utils.debugBytesToTextFormat=function(e){var t='\"';if(e){e=jspb.utils.byteSourceToUint8Array(e);for(var o=0;o<e.length;o++)t+=\"\\\\x\",16>e[o]&&(t+=\"0\"),t+=e[o].toString(16)}return t+'\"'},jspb.utils.debugScalarToTextFormat=function(e){return\"string\"==typeof e?goog.string.quote(e):e.toString()},jspb.utils.stringToByteArray=function(e){for(var t=new Uint8Array(e.length),o=0;o<e.length;o++){var r=e.charCodeAt(o);if(255<r)throw Error(\"Conversion error: string contains codepoint outside of byte range\");t[o]=r}return t},jspb.utils.byteSourceToUint8Array=function(e){return e.constructor===Uint8Array?e:e.constructor===ArrayBuffer||\"undefined\"!=typeof Buffer&&e.constructor===Buffer||e.constructor===Array?new Uint8Array(e):e.constructor===String?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail(\"Type not convertible to Uint8Array.\"),new Uint8Array(0))},jspb.BinaryDecoder=function(e,t,o){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1,e&&this.setBlock(e,t,o)},jspb.BinaryDecoder.instanceCache_=[],jspb.BinaryDecoder.alloc=function(e,t,o){if(jspb.BinaryDecoder.instanceCache_.length){var r=jspb.BinaryDecoder.instanceCache_.pop();return e&&r.setBlock(e,t,o),r}return new jspb.BinaryDecoder(e,t,o)},jspb.BinaryDecoder.prototype.free=function(){this.clear(),100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)},jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)},jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1},jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_},jspb.BinaryDecoder.prototype.setBlock=function(e,t,o){this.bytes_=jspb.utils.byteSourceToUint8Array(e),this.start_=void 0!==t?t:0,this.end_=void 0!==o?this.start_+o:this.bytes_.length,this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_},jspb.BinaryDecoder.prototype.setEnd=function(e){this.end_=e},jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_},jspb.BinaryDecoder.prototype.setCursor=function(e){this.cursor_=e},jspb.BinaryDecoder.prototype.advance=function(e){this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_)},jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_},jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_},jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_},jspb.BinaryDecoder.prototype.readSplitVarint64=function(e){for(var t=128,o=0,r=0,s=0;4>s&&128<=t;s++)o|=(127&(t=this.bytes_[this.cursor_++]))<<7*s;if(128<=t&&(o|=(127&(t=this.bytes_[this.cursor_++]))<<28,r|=(127&t)>>4),128<=t)for(s=0;5>s&&128<=t;s++)r|=(127&(t=this.bytes_[this.cursor_++]))<<7*s+3;if(128>t)return e(o>>>0,r>>>0);goog.asserts.fail(\"Failed to read varint, encoding is invalid.\"),this.error_=!0},jspb.BinaryDecoder.prototype.readSplitZigzagVarint64=function(e){return this.readSplitVarint64((function(t,o){return jspb.utils.fromZigzag64(t,o,e)}))},jspb.BinaryDecoder.prototype.readSplitFixed64=function(e){var t=this.bytes_,o=this.cursor_;this.cursor_+=8;for(var r=0,s=0,n=o+7;n>=o;n--)r=r<<8|t[n],s=s<<8|t[n+4];return e(r,s)},jspb.BinaryDecoder.prototype.skipVarint=function(){for(;128&this.bytes_[this.cursor_];)this.cursor_++;this.cursor_++},jspb.BinaryDecoder.prototype.unskipVarint=function(e){for(;128<e;)this.cursor_--,e>>>=7;this.cursor_--},jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var e=this.bytes_,t=e[this.cursor_+0],o=127&t;return 128>t?(this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),o):(o|=(127&(t=e[this.cursor_+1]))<<7,128>t?(this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),o):(o|=(127&(t=e[this.cursor_+2]))<<14,128>t?(this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),o):(o|=(127&(t=e[this.cursor_+3]))<<21,128>t?(this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),o):(o|=(15&(t=e[this.cursor_+4]))<<28,128>t?(this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),o>>>0):(this.cursor_+=5,128<=e[this.cursor_++]&&128<=e[this.cursor_++]&&128<=e[this.cursor_++]&&128<=e[this.cursor_++]&&128<=e[this.cursor_++]&&goog.asserts.assert(!1),goog.asserts.assert(this.cursor_<=this.end_),o)))))},jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32,jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()},jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()},jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var e=this.readUnsignedVarint32();return e>>>1^-(1&e)},jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinUint64)},jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString)},jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinInt64)},jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinSignedDecimalString)},jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64(jspb.utils.joinZigzag64)},jspb.BinaryDecoder.prototype.readZigzagVarintHash64=function(){return this.readSplitZigzagVarint64(jspb.utils.joinHash64)},jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString)},jspb.BinaryDecoder.prototype.readUint8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e},jspb.BinaryDecoder.prototype.readUint16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8},jspb.BinaryDecoder.prototype.readUint32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],o=this.bytes_[this.cursor_+2],r=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8|o<<16|r<<24)>>>0},jspb.BinaryDecoder.prototype.readUint64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUint64(e,t)},jspb.BinaryDecoder.prototype.readUint64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUnsignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readInt8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e<<24>>24},jspb.BinaryDecoder.prototype.readInt16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8)<<16>>16},jspb.BinaryDecoder.prototype.readInt32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],o=this.bytes_[this.cursor_+2],r=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8|o<<16|r<<24},jspb.BinaryDecoder.prototype.readInt64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinInt64(e,t)},jspb.BinaryDecoder.prototype.readInt64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinSignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readFloat=function(){var e=this.readUint32();return jspb.utils.joinFloat32(e,0)},jspb.BinaryDecoder.prototype.readDouble=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinFloat64(e,t)},jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]},jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()},jspb.BinaryDecoder.prototype.readString=function(e){var t=this.bytes_,o=this.cursor_;e=o+e;for(var r=[],s=\"\";o<e;){var n=t[o++];if(128>n)r.push(n);else{if(192>n)continue;if(224>n){var i=t[o++];r.push((31&n)<<6|63&i)}else if(240>n){i=t[o++];var a=t[o++];r.push((15&n)<<12|(63&i)<<6|63&a)}else if(248>n){n=(7&n)<<18|(63&(i=t[o++]))<<12|(63&(a=t[o++]))<<6|63&t[o++],n-=65536,r.push(55296+(n>>10&1023),56320+(1023&n))}}8192<=r.length&&(s+=String.fromCharCode.apply(null,r),r.length=0)}return s+=goog.crypt.byteArrayToString(r),this.cursor_=o,s},jspb.BinaryDecoder.prototype.readStringWithLength=function(){var e=this.readUnsignedVarint32();return this.readString(e)},jspb.BinaryDecoder.prototype.readBytes=function(e){if(0>e||this.cursor_+e>this.bytes_.length)return this.error_=!0,goog.asserts.fail(\"Invalid byte length!\"),new Uint8Array(0);var t=this.bytes_.subarray(this.cursor_,this.cursor_+e);return this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_),t},jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64(jspb.utils.joinHash64)},jspb.BinaryDecoder.prototype.readFixedHash64=function(){var e=this.bytes_,t=this.cursor_,o=e[t+0],r=e[t+1],s=e[t+2],n=e[t+3],i=e[t+4],a=e[t+5],g=e[t+6];return e=e[t+7],this.cursor_+=8,String.fromCharCode(o,r,s,n,i,a,g,e)},jspb.BinaryReader=function(e,t,o){this.decoder_=jspb.BinaryDecoder.alloc(e,t,o),this.fieldCursor_=this.decoder_.getCursor(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null},jspb.BinaryReader.instanceCache_=[],jspb.BinaryReader.alloc=function(e,t,o){if(jspb.BinaryReader.instanceCache_.length){var r=jspb.BinaryReader.instanceCache_.pop();return e&&r.decoder_.setBlock(e,t,o),r}return new jspb.BinaryReader(e,t,o)},jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc,jspb.BinaryReader.prototype.free=function(){this.decoder_.clear(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null,100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)},jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_},jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()},jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()},jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_},jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_},jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP},jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()},jspb.BinaryReader.prototype.setBlock=function(e,t,o){this.decoder_.setBlock(e,t,o),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.advance=function(e){this.decoder_.advance(e)},jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail(\"Decoder hit an error\"),!1;this.fieldCursor_=this.decoder_.getCursor();var e=this.decoder_.readUnsignedVarint32(),t=e>>>3;return(e&=7)!=jspb.BinaryConstants.WireType.VARINT&&e!=jspb.BinaryConstants.WireType.FIXED32&&e!=jspb.BinaryConstants.WireType.FIXED64&&e!=jspb.BinaryConstants.WireType.DELIMITED&&e!=jspb.BinaryConstants.WireType.START_GROUP&&e!=jspb.BinaryConstants.WireType.END_GROUP?(goog.asserts.fail(\"Invalid wire type: %s (at position %s)\",e,this.fieldCursor_),this.error_=!0,!1):(this.nextField_=t,this.nextWireType_=e,!0)},jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)},jspb.BinaryReader.prototype.skipMatchingFields=function(){var e=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==e;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()},jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail(\"Invalid wire type for skipVarintField\"),this.skipField()):this.decoder_.skipVarint()},jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"),this.skipField();else{var e=this.decoder_.readUnsignedVarint32();this.decoder_.advance(e)}},jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"),this.skipField()):this.decoder_.advance(4)},jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"),this.skipField()):this.decoder_.advance(8)},jspb.BinaryReader.prototype.skipGroup=function(){for(var e=this.nextField_;;){if(!this.nextField()){goog.asserts.fail(\"Unmatched start-group tag: stream EOF\"),this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP){this.nextField_!=e&&(goog.asserts.fail(\"Unmatched end-group tag\"),this.error_=!0);break}this.skipField()}},jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail(\"Invalid wire encoding for field.\")}},jspb.BinaryReader.prototype.registerReadCallback=function(e,t){null===this.readCallbacks_&&(this.readCallbacks_={}),goog.asserts.assert(!this.readCallbacks_[e]),this.readCallbacks_[e]=t},jspb.BinaryReader.prototype.runReadCallback=function(e){return goog.asserts.assert(null!==this.readCallbacks_),e=this.readCallbacks_[e],goog.asserts.assert(e),e(this)},jspb.BinaryReader.prototype.readAny=function(e){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(e);var t=jspb.BinaryConstants.FieldType;switch(e){case t.DOUBLE:return this.readDouble();case t.FLOAT:return this.readFloat();case t.INT64:return this.readInt64();case t.UINT64:return this.readUint64();case t.INT32:return this.readInt32();case t.FIXED64:return this.readFixed64();case t.FIXED32:return this.readFixed32();case t.BOOL:return this.readBool();case t.STRING:return this.readString();case t.GROUP:goog.asserts.fail(\"Group field type not supported in readAny()\");case t.MESSAGE:goog.asserts.fail(\"Message field type not supported in readAny()\");case t.BYTES:return this.readBytes();case t.UINT32:return this.readUint32();case t.ENUM:return this.readEnum();case t.SFIXED32:return this.readSfixed32();case t.SFIXED64:return this.readSfixed64();case t.SINT32:return this.readSint32();case t.SINT64:return this.readSint64();case t.FHASH64:return this.readFixedHash64();case t.VHASH64:return this.readVarintHash64();default:goog.asserts.fail(\"Invalid field type in readAny()\")}return 0},jspb.BinaryReader.prototype.readMessage=function(e,t){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var o=this.decoder_.getEnd(),r=this.decoder_.readUnsignedVarint32();r=this.decoder_.getCursor()+r,this.decoder_.setEnd(r),t(e,this),this.decoder_.setCursor(r),this.decoder_.setEnd(o)},jspb.BinaryReader.prototype.readGroup=function(e,t,o){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP),goog.asserts.assert(this.nextField_==e),o(t,this),this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"),this.error_=!0)},jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32(),t=this.decoder_.getCursor(),o=t+e;return e=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),t,e),this.decoder_.setCursor(o),e},jspb.BinaryReader.prototype.readInt32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32()},jspb.BinaryReader.prototype.readInt32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32String()},jspb.BinaryReader.prototype.readInt64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readInt64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64String()},jspb.BinaryReader.prototype.readUint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readUint32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32String()},jspb.BinaryReader.prototype.readUint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64()},jspb.BinaryReader.prototype.readUint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64String()},jspb.BinaryReader.prototype.readSint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint32()},jspb.BinaryReader.prototype.readSint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64()},jspb.BinaryReader.prototype.readSint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64String()},jspb.BinaryReader.prototype.readFixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readUint32()},jspb.BinaryReader.prototype.readFixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64()},jspb.BinaryReader.prototype.readFixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64String()},jspb.BinaryReader.prototype.readSfixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32()},jspb.BinaryReader.prototype.readSfixed32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32().toString()},jspb.BinaryReader.prototype.readSfixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64()},jspb.BinaryReader.prototype.readSfixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64String()},jspb.BinaryReader.prototype.readFloat=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readFloat()},jspb.BinaryReader.prototype.readDouble=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readDouble()},jspb.BinaryReader.prototype.readBool=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),!!this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readEnum=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(e)},jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(e)},jspb.BinaryReader.prototype.readVarintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readVarintHash64()},jspb.BinaryReader.prototype.readSintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarintHash64()},jspb.BinaryReader.prototype.readSplitVarint64=function(e){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSplitVarint64(e)},jspb.BinaryReader.prototype.readSplitZigzagVarint64=function(e){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSplitVarint64((function(t,o){return jspb.utils.fromZigzag64(t,o,e)}))},jspb.BinaryReader.prototype.readFixedHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readFixedHash64()},jspb.BinaryReader.prototype.readSplitFixed64=function(e){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readSplitFixed64(e)},jspb.BinaryReader.prototype.readPackedField_=function(e){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var t=this.decoder_.readUnsignedVarint32();t=this.decoder_.getCursor()+t;for(var o=[];this.decoder_.getCursor()<t;)o.push(e.call(this.decoder_));return o},jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)},jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)},jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)},jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)},jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)},jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)},jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)},jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)},jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)},jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)},jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)},jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)},jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)},jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)},jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)},jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)},jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)},jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)},jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)},jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)},jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)},jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)},jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)},jspb.Map=function(e,t){this.arr_=e,this.valueCtor_=t,this.map_={},this.arrClean=!0,0<this.arr_.length&&this.loadFromArray_()},jspb.Map.prototype.loadFromArray_=function(){for(var e=0;e<this.arr_.length;e++){var t=this.arr_[e],o=t[0];this.map_[o.toString()]=new jspb.Map.Entry_(o,t[1])}this.arrClean=!0},jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var e,t=this.map_;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)){var o=t[e].valueWrapper;o&&o.toArray()}}}else{for(this.arr_.length=0,(t=this.stringKeys_()).sort(),e=0;e<t.length;e++){var r=this.map_[t[e]];(o=r.valueWrapper)&&o.toArray(),this.arr_.push([r.key,r.value])}this.arrClean=!0}return this.arr_},jspb.Map.prototype.toObject=function(e,t){for(var o=this.toArray(),r=[],s=0;s<o.length;s++){var n=this.map_[o[s][0].toString()];this.wrapEntry_(n);var i=n.valueWrapper;i?(goog.asserts.assert(t),r.push([n.key,t(e,i)])):r.push([n.key,n.value])}return r},jspb.Map.fromObject=function(e,t,o){t=new jspb.Map([],t);for(var r=0;r<e.length;r++){var s=e[r][0],n=o(e[r][1]);t.set(s,n)}return t},jspb.Map.ArrayIteratorIterable_=function(e){this.idx_=0,this.arr_=e},jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}},\"undefined\"!=typeof Symbol&&(jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this}),jspb.Map.prototype.getLength=function(){return this.stringKeys_().length},jspb.Map.prototype.clear=function(){this.map_={},this.arrClean=!1},jspb.Map.prototype.del=function(e){e=e.toString();var t=this.map_.hasOwnProperty(e);return delete this.map_[e],this.arrClean=!1,t},jspb.Map.prototype.getEntryList=function(){var e=[],t=this.stringKeys_();t.sort();for(var o=0;o<t.length;o++){var r=this.map_[t[o]];e.push([r.key,r.value])}return e},jspb.Map.prototype.entries=function(){var e=[],t=this.stringKeys_();t.sort();for(var o=0;o<t.length;o++){var r=this.map_[t[o]];e.push([r.key,this.wrapEntry_(r)])}return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.keys=function(){var e=[],t=this.stringKeys_();t.sort();for(var o=0;o<t.length;o++)e.push(this.map_[t[o]].key);return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.values=function(){var e=[],t=this.stringKeys_();t.sort();for(var o=0;o<t.length;o++)e.push(this.wrapEntry_(this.map_[t[o]]));return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.forEach=function(e,t){var o=this.stringKeys_();o.sort();for(var r=0;r<o.length;r++){var s=this.map_[o[r]];e.call(t,this.wrapEntry_(s),s.key,this)}},jspb.Map.prototype.set=function(e,t){var o=new jspb.Map.Entry_(e);return this.valueCtor_?(o.valueWrapper=t,o.value=t.toArray()):o.value=t,this.map_[e.toString()]=o,this.arrClean=!1,this},jspb.Map.prototype.wrapEntry_=function(e){return this.valueCtor_?(e.valueWrapper||(e.valueWrapper=new this.valueCtor_(e.value)),e.valueWrapper):e.value},jspb.Map.prototype.get=function(e){if(e=this.map_[e.toString()])return this.wrapEntry_(e)},jspb.Map.prototype.has=function(e){return e.toString()in this.map_},jspb.Map.prototype.serializeBinary=function(e,t,o,r,s){var n=this.stringKeys_();n.sort();for(var i=0;i<n.length;i++){var a=this.map_[n[i]];t.beginSubMessage(e),o.call(t,1,a.key),this.valueCtor_?r.call(t,2,this.wrapEntry_(a),s):r.call(t,2,a.value),t.endSubMessage()}},jspb.Map.deserializeBinary=function(e,t,o,r,s,n,i){for(;t.nextField()&&!t.isEndGroup();){var a=t.getFieldNumber();1==a?n=o.call(t):2==a&&(e.valueCtor_?(goog.asserts.assert(s),i||(i=new e.valueCtor_),r.call(t,i,s)):i=r.call(t))}goog.asserts.assert(null!=n),goog.asserts.assert(null!=i),e.set(n,i)},jspb.Map.prototype.stringKeys_=function(){var e,t=this.map_,o=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&o.push(e);return o},jspb.Map.Entry_=function(e,t){this.key=e,this.value=t,this.valueWrapper=void 0},jspb.ExtensionFieldInfo=function(e,t,o,r,s){this.fieldIndex=e,this.fieldName=t,this.ctor=o,this.toObjectFn=r,this.isRepeated=s},jspb.ExtensionFieldBinaryInfo=function(e,t,o,r,s,n){this.fieldInfo=e,this.binaryReaderFn=t,this.binaryWriterFn=o,this.binaryMessageSerializeFn=r,this.binaryMessageDeserializeFn=s,this.isPacked=n},jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor},jspb.Message=function(){},jspb.Message.GENERATE_TO_OBJECT=!0,jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE,jspb.Message.GENERATE_TO_STRING=!0,jspb.Message.ASSUME_LOCAL_ARRAYS=!1,jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0,jspb.Message.SUPPORTS_UINT8ARRAY_=\"function\"==typeof Uint8Array,jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_},jspb.Message.getIndex_=function(e,t){return t+e.arrayIndexOffset_},jspb.Message.hiddenES6Property_=function(){},jspb.Message.getFieldNumber_=function(e,t){return t-e.arrayIndexOffset_},jspb.Message.initialize=function(e,t,o,r,s,n){if(e.wrappers_=null,t||(t=o?[o]:[]),e.messageId_=o?String(o):void 0,e.arrayIndexOffset_=0===o?-1:0,e.array=t,jspb.Message.initPivotAndExtensionObject_(e,r),e.convertedPrimitiveFields_={},jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(e.repeatedFields=s),s)for(t=0;t<s.length;t++)(o=s[t])<e.pivot_?(o=jspb.Message.getIndex_(e,o),e.array[o]=e.array[o]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[o]=e.extensionObject_[o]||jspb.Message.EMPTY_LIST_SENTINEL_);if(n&&n.length)for(t=0;t<n.length;t++)jspb.Message.computeOneofCase(e,n[t])},jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[],jspb.Message.isArray_=function(e){return jspb.Message.ASSUME_LOCAL_ARRAYS?e instanceof Array:goog.isArray(e)},jspb.Message.isExtensionObject_=function(e){return!(null===e||\"object\"!=typeof e||jspb.Message.isArray_(e)||jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array)},jspb.Message.initPivotAndExtensionObject_=function(e,t){var o=e.array.length,r=-1;if(o&&(r=o-1,o=e.array[r],jspb.Message.isExtensionObject_(o)))return e.pivot_=jspb.Message.getFieldNumber_(e,r),void(e.extensionObject_=o);-1<t?(e.pivot_=Math.max(t,jspb.Message.getFieldNumber_(e,r+1)),e.extensionObject_=null):e.pivot_=Number.MAX_VALUE},jspb.Message.maybeInitEmptyExtensionObject_=function(e){var t=jspb.Message.getIndex_(e,e.pivot_);e.array[t]||(e.extensionObject_=e.array[t]={})},jspb.Message.toObjectList=function(e,t,o){for(var r=[],s=0;s<e.length;s++)r[s]=t.call(e[s],o,e[s]);return r},jspb.Message.toObjectExtension=function(e,t,o,r,s){for(var n in o){var i=o[n],a=r.call(e,i);if(null!=a){for(var g in i.fieldName)if(i.fieldName.hasOwnProperty(g))break;t[g]=i.toObjectFn?i.isRepeated?jspb.Message.toObjectList(a,i.toObjectFn,s):i.toObjectFn(s,a):a}}},jspb.Message.serializeBinaryExtensions=function(e,t,o,r){for(var s in o){var n=o[s],i=n.fieldInfo;if(!n.binaryWriterFn)throw Error(\"Message extension present that was generated without binary serialization support\");var a=r.call(e,i);if(null!=a)if(i.isMessageType()){if(!n.binaryMessageSerializeFn)throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");n.binaryWriterFn.call(t,i.fieldIndex,a,n.binaryMessageSerializeFn)}else n.binaryWriterFn.call(t,i.fieldIndex,a)}},jspb.Message.readBinaryExtension=function(e,t,o,r,s){var n=o[t.getFieldNumber()];if(n){if(o=n.fieldInfo,!n.binaryReaderFn)throw Error(\"Deserializing extension whose generated code does not support binary format\");if(o.isMessageType()){var i=new o.ctor;n.binaryReaderFn.call(t,i,n.binaryMessageDeserializeFn)}else i=n.binaryReaderFn.call(t);o.isRepeated&&!n.isPacked?(t=r.call(e,o))?t.push(i):s.call(e,o,[i]):s.call(e,o,i)}else t.skipField()},jspb.Message.getField=function(e,t){if(t<e.pivot_){t=jspb.Message.getIndex_(e,t);var o=e.array[t];return o===jspb.Message.EMPTY_LIST_SENTINEL_?e.array[t]=[]:o}if(e.extensionObject_)return(o=e.extensionObject_[t])===jspb.Message.EMPTY_LIST_SENTINEL_?e.extensionObject_[t]=[]:o},jspb.Message.getRepeatedField=function(e,t){return jspb.Message.getField(e,t)},jspb.Message.getOptionalFloatingPointField=function(e,t){return null==(e=jspb.Message.getField(e,t))?e:+e},jspb.Message.getBooleanField=function(e,t){return null==(e=jspb.Message.getField(e,t))?e:!!e},jspb.Message.getRepeatedFloatingPointField=function(e,t){var o=jspb.Message.getRepeatedField(e,t);if(e.convertedPrimitiveFields_||(e.convertedPrimitiveFields_={}),!e.convertedPrimitiveFields_[t]){for(var r=0;r<o.length;r++)o[r]=+o[r];e.convertedPrimitiveFields_[t]=!0}return o},jspb.Message.getRepeatedBooleanField=function(e,t){var o=jspb.Message.getRepeatedField(e,t);if(e.convertedPrimitiveFields_||(e.convertedPrimitiveFields_={}),!e.convertedPrimitiveFields_[t]){for(var r=0;r<o.length;r++)o[r]=!!o[r];e.convertedPrimitiveFields_[t]=!0}return o},jspb.Message.bytesAsB64=function(e){return null==e||\"string\"==typeof e?e:jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array?goog.crypt.base64.encodeByteArray(e):(goog.asserts.fail(\"Cannot coerce to b64 string: \"+goog.typeOf(e)),null)},jspb.Message.bytesAsU8=function(e){return null==e||e instanceof Uint8Array?e:\"string\"==typeof e?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail(\"Cannot coerce to Uint8Array: \"+goog.typeOf(e)),null)},jspb.Message.bytesListAsB64=function(e){return jspb.Message.assertConsistentTypes_(e),e.length&&\"string\"!=typeof e[0]?goog.array.map(e,jspb.Message.bytesAsB64):e},jspb.Message.bytesListAsU8=function(e){return jspb.Message.assertConsistentTypes_(e),!e.length||e[0]instanceof Uint8Array?e:goog.array.map(e,jspb.Message.bytesAsU8)},jspb.Message.assertConsistentTypes_=function(e){if(goog.DEBUG&&e&&1<e.length){var t=goog.typeOf(e[0]);goog.array.forEach(e,(function(e){goog.typeOf(e)!=t&&goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \"+goog.typeOf(e)+\" expected \"+t)}))}},jspb.Message.getFieldWithDefault=function(e,t,o){return null==(e=jspb.Message.getField(e,t))?o:e},jspb.Message.getBooleanFieldWithDefault=function(e,t,o){return null==(e=jspb.Message.getBooleanField(e,t))?o:e},jspb.Message.getFloatingPointFieldWithDefault=function(e,t,o){return null==(e=jspb.Message.getOptionalFloatingPointField(e,t))?o:e},jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault,jspb.Message.getMapField=function(e,t,o,r){if(e.wrappers_||(e.wrappers_={}),t in e.wrappers_)return e.wrappers_[t];var s=jspb.Message.getField(e,t);if(!s){if(o)return;s=[],jspb.Message.setField(e,t,s)}return e.wrappers_[t]=new jspb.Map(s,r)},jspb.Message.setField=function(e,t,o){return goog.asserts.assertInstanceof(e,jspb.Message),t<e.pivot_?e.array[jspb.Message.getIndex_(e,t)]=o:(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[t]=o),e},jspb.Message.setProto3IntField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,0)},jspb.Message.setProto3FloatField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,0)},jspb.Message.setProto3BooleanField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,!1)},jspb.Message.setProto3StringField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,\"\")},jspb.Message.setProto3BytesField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,\"\")},jspb.Message.setProto3EnumField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,0)},jspb.Message.setProto3StringIntField=function(e,t,o){return jspb.Message.setFieldIgnoringDefault_(e,t,o,\"0\")},jspb.Message.setFieldIgnoringDefault_=function(e,t,o,r){return goog.asserts.assertInstanceof(e,jspb.Message),o!==r?jspb.Message.setField(e,t,o):e.array[jspb.Message.getIndex_(e,t)]=null,e},jspb.Message.addToRepeatedField=function(e,t,o,r){return goog.asserts.assertInstanceof(e,jspb.Message),t=jspb.Message.getRepeatedField(e,t),null!=r?t.splice(r,0,o):t.push(o),e},jspb.Message.setOneofField=function(e,t,o,r){return goog.asserts.assertInstanceof(e,jspb.Message),(o=jspb.Message.computeOneofCase(e,o))&&o!==t&&void 0!==r&&(e.wrappers_&&o in e.wrappers_&&(e.wrappers_[o]=void 0),jspb.Message.setField(e,o,void 0)),jspb.Message.setField(e,t,r)},jspb.Message.computeOneofCase=function(e,t){for(var o,r,s=0;s<t.length;s++){var n=t[s],i=jspb.Message.getField(e,n);null!=i&&(o=n,r=i,jspb.Message.setField(e,n,void 0))}return o?(jspb.Message.setField(e,o,r),o):0},jspb.Message.getWrapperField=function(e,t,o,r){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[o]){var s=jspb.Message.getField(e,o);(r||s)&&(e.wrappers_[o]=new t(s))}return e.wrappers_[o]},jspb.Message.getRepeatedWrapperField=function(e,t,o){return jspb.Message.wrapRepeatedField_(e,t,o),(t=e.wrappers_[o])==jspb.Message.EMPTY_LIST_SENTINEL_&&(t=e.wrappers_[o]=[]),t},jspb.Message.wrapRepeatedField_=function(e,t,o){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[o]){for(var r=jspb.Message.getRepeatedField(e,o),s=[],n=0;n<r.length;n++)s[n]=new t(r[n]);e.wrappers_[o]=s}},jspb.Message.setWrapperField=function(e,t,o){goog.asserts.assertInstanceof(e,jspb.Message),e.wrappers_||(e.wrappers_={});var r=o?o.toArray():o;return e.wrappers_[t]=o,jspb.Message.setField(e,t,r)},jspb.Message.setOneofWrapperField=function(e,t,o,r){goog.asserts.assertInstanceof(e,jspb.Message),e.wrappers_||(e.wrappers_={});var s=r?r.toArray():r;return e.wrappers_[t]=r,jspb.Message.setOneofField(e,t,o,s)},jspb.Message.setRepeatedWrapperField=function(e,t,o){goog.asserts.assertInstanceof(e,jspb.Message),e.wrappers_||(e.wrappers_={}),o=o||[];for(var r=[],s=0;s<o.length;s++)r[s]=o[s].toArray();return e.wrappers_[t]=o,jspb.Message.setField(e,t,r)},jspb.Message.addToRepeatedWrapperField=function(e,t,o,r,s){jspb.Message.wrapRepeatedField_(e,r,t);var n=e.wrappers_[t];return n||(n=e.wrappers_[t]=[]),o=o||new r,e=jspb.Message.getRepeatedField(e,t),null!=s?(n.splice(s,0,o),e.splice(s,0,o.toArray())):(n.push(o),e.push(o.toArray())),o},jspb.Message.toMap=function(e,t,o,r){for(var s={},n=0;n<e.length;n++)s[t.call(e[n])]=o?o.call(e[n],r,e[n]):e[n];return s},jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var e in this.wrappers_){var t=this.wrappers_[e];if(goog.isArray(t))for(var o=0;o<t.length;o++)t[o]&&t[o].toArray();else t&&t.toArray()}},jspb.Message.prototype.toArray=function(){return this.syncMapFields_(),this.array},jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){return this.syncMapFields_(),this.array.toString()}),jspb.Message.prototype.getExtension=function(e){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var t=e.fieldIndex;if(e.isRepeated){if(e.isMessageType())return this.wrappers_[t]||(this.wrappers_[t]=goog.array.map(this.extensionObject_[t]||[],(function(t){return new e.ctor(t)}))),this.wrappers_[t]}else if(e.isMessageType())return!this.wrappers_[t]&&this.extensionObject_[t]&&(this.wrappers_[t]=new e.ctor(this.extensionObject_[t])),this.wrappers_[t];return this.extensionObject_[t]}},jspb.Message.prototype.setExtension=function(e,t){this.wrappers_||(this.wrappers_={}),jspb.Message.maybeInitEmptyExtensionObject_(this);var o=e.fieldIndex;return e.isRepeated?(t=t||[],e.isMessageType()?(this.wrappers_[o]=t,this.extensionObject_[o]=goog.array.map(t,(function(e){return e.toArray()}))):this.extensionObject_[o]=t):e.isMessageType()?(this.wrappers_[o]=t,this.extensionObject_[o]=t?t.toArray():t):this.extensionObject_[o]=t,this},jspb.Message.difference=function(e,t){if(!(e instanceof t.constructor))throw Error(\"Messages have different types.\");var o=e.toArray();t=t.toArray();var r=[],s=0,n=o.length>t.length?o.length:t.length;for(e.getJsPbMessageId()&&(r[0]=e.getJsPbMessageId(),s=1);s<n;s++)jspb.Message.compareFields(o[s],t[s])||(r[s]=t[s]);return new e.constructor(r)},jspb.Message.equals=function(e,t){return e==t||!(!e||!t)&&e instanceof t.constructor&&jspb.Message.compareFields(e.toArray(),t.toArray())},jspb.Message.compareExtensions=function(e,t){e=e||{},t=t||{};var o,r={};for(o in e)r[o]=0;for(o in t)r[o]=0;for(o in r)if(!jspb.Message.compareFields(e[o],t[o]))return!1;return!0},jspb.Message.compareFields=function(e,t){if(e==t)return!0;if(!goog.isObject(e)||!goog.isObject(t))return!!(\"number\"==typeof e&&isNaN(e)||\"number\"==typeof t&&isNaN(t))&&String(e)==String(t);if(e.constructor!=t.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e.constructor===Uint8Array){if(e.length!=t.length)return!1;for(var o=0;o<e.length;o++)if(e[o]!=t[o])return!1;return!0}if(e.constructor===Array){var r=void 0,s=void 0,n=Math.max(e.length,t.length);for(o=0;o<n;o++){var i=e[o],a=t[o];if(i&&i.constructor==Object&&(goog.asserts.assert(void 0===r),goog.asserts.assert(o===e.length-1),r=i,i=void 0),a&&a.constructor==Object&&(goog.asserts.assert(void 0===s),goog.asserts.assert(o===t.length-1),s=a,a=void 0),!jspb.Message.compareFields(i,a))return!1}return!r&&!s||(r=r||{},s=s||{},jspb.Message.compareExtensions(r,s))}if(e.constructor===Object)return jspb.Message.compareExtensions(e,t);throw Error(\"Invalid type in JSPB array\")},jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)},jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)},jspb.Message.clone=function(e){return jspb.Message.cloneMessage(e)},jspb.Message.cloneMessage=function(e){return new e.constructor(jspb.Message.clone_(e.toArray()))},jspb.Message.copyInto=function(e,t){goog.asserts.assertInstanceof(e,jspb.Message),goog.asserts.assertInstanceof(t,jspb.Message),goog.asserts.assert(e.constructor==t.constructor,\"Copy source and target message should have the same type.\"),e=jspb.Message.clone(e);for(var o=t.toArray(),r=e.toArray(),s=o.length=0;s<r.length;s++)o[s]=r[s];t.wrappers_=e.wrappers_,t.extensionObject_=e.extensionObject_},jspb.Message.clone_=function(e){if(goog.isArray(e)){for(var t=Array(e.length),o=0;o<e.length;o++){var r=e[o];null!=r&&(t[o]=\"object\"==typeof r?jspb.Message.clone_(goog.asserts.assert(r)):r)}return t}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array)return new Uint8Array(e);for(o in t={},e)null!=(r=e[o])&&(t[o]=\"object\"==typeof r?jspb.Message.clone_(goog.asserts.assert(r)):r);return t},jspb.Message.registerMessageType=function(e,t){t.messageId=e},jspb.Message.messageSetExtensions={},jspb.Message.messageSetExtensionsBinary={},jspb.arith={},jspb.arith.UInt64=function(e,t){this.lo=e,this.hi=t},jspb.arith.UInt64.prototype.cmp=function(e){return this.hi<e.hi||this.hi==e.hi&&this.lo<e.lo?-1:this.hi==e.hi&&this.lo==e.lo?0:1},jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(1&this.hi)<<31)>>>0,this.hi>>>1>>>0)},jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)},jspb.arith.UInt64.prototype.msb=function(){return!!(2147483648&this.hi)},jspb.arith.UInt64.prototype.lsb=function(){return!!(1&this.lo)},jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi},jspb.arith.UInt64.prototype.add=function(e){return new jspb.arith.UInt64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.UInt64.prototype.sub=function(e){return new jspb.arith.UInt64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.UInt64.mul32x32=function(e,t){var o=65535&e,r=65535&t,s=t>>>16;for(t=o*r+65536*(o*s&65535)+65536*((e>>>=16)*r&65535),o=e*s+(o*s>>>16)+(e*r>>>16);4294967296<=t;)t-=4294967296,o+=1;return new jspb.arith.UInt64(t>>>0,o>>>0)},jspb.arith.UInt64.prototype.mul=function(e){var t=jspb.arith.UInt64.mul32x32(this.lo,e);return(e=jspb.arith.UInt64.mul32x32(this.hi,e)).hi=e.lo,e.lo=0,t.add(e)},jspb.arith.UInt64.prototype.div=function(e){if(0==e)return[];var t=new jspb.arith.UInt64(0,0),o=new jspb.arith.UInt64(this.lo,this.hi);e=new jspb.arith.UInt64(e,0);for(var r=new jspb.arith.UInt64(1,0);!e.msb();)e=e.leftShift(),r=r.leftShift();for(;!r.zero();)0>=e.cmp(o)&&(t=t.add(r),o=o.sub(e)),e=e.rightShift(),r=r.rightShift();return[t,o]},jspb.arith.UInt64.prototype.toString=function(){for(var e=\"\",t=this;!t.zero();){var o=(t=t.div(10))[0];e=t[1].lo+e,t=o}return\"\"==e&&(e=\"0\"),e},jspb.arith.UInt64.fromString=function(e){for(var t=new jspb.arith.UInt64(0,0),o=new jspb.arith.UInt64(0,0),r=0;r<e.length;r++){if(\"0\">e[r]||\"9\"<e[r])return null;var s=parseInt(e[r],10);o.lo=s,t=t.mul(10).add(o)}return t},jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)},jspb.arith.Int64=function(e,t){this.lo=e,this.hi=t},jspb.arith.Int64.prototype.add=function(e){return new jspb.arith.Int64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.sub=function(e){return new jspb.arith.Int64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)},jspb.arith.Int64.prototype.toString=function(){var e=0!=(2147483648&this.hi),t=new jspb.arith.UInt64(this.lo,this.hi);return e&&(t=new jspb.arith.UInt64(0,0).sub(t)),(e?\"-\":\"\")+t.toString()},jspb.arith.Int64.fromString=function(e){var t=0<e.length&&\"-\"==e[0];return t&&(e=e.substring(1)),null===(e=jspb.arith.UInt64.fromString(e))?null:(t&&(e=new jspb.arith.UInt64(0,0).sub(e)),new jspb.arith.Int64(e.lo,e.hi))},jspb.BinaryEncoder=function(){this.buffer_=[]},jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length},jspb.BinaryEncoder.prototype.end=function(){var e=this.buffer_;return this.buffer_=[],e},jspb.BinaryEncoder.prototype.writeSplitVarint64=function(e,t){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32);0<t||127<e;)this.buffer_.push(127&e|128),e=(e>>>7|t<<25)>>>0,t>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSplitFixed64=function(e,t){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUint32(e),this.writeUint32(t)},jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(e){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32);127<e;)this.buffer_.push(127&e|128),e>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSignedVarint32=function(e){if(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),0<=e)this.writeUnsignedVarint32(e);else{for(var t=0;9>t;t++)this.buffer_.push(127&e|128),e>>=7;this.buffer_.push(1)}},jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeSignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeUnsignedVarint32((e<<1^e>>31)>>>0)},jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitZigzag64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(e){this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(e))},jspb.BinaryEncoder.prototype.writeZigzagVarintHash64=function(e){var t=this;jspb.utils.splitHash64(e),jspb.utils.toZigzag64(jspb.utils.split64Low,jspb.utils.split64High,(function(e,o){t.writeSplitVarint64(e>>>0,o>>>0)}))},jspb.BinaryEncoder.prototype.writeUint8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&256>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeUint16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&65536>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeUint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeUint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitUint64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-128<=e&&128>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeInt16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-32768<=e&&32768>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeInt32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeInt64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt64String=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(+e>=-jspb.BinaryConstants.TWO_TO_63&&+e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e)),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFloat=function(e){goog.asserts.assert(1/0===e||-1/0===e||isNaN(e)||e>=-jspb.BinaryConstants.FLOAT32_MAX&&e<=jspb.BinaryConstants.FLOAT32_MAX),jspb.utils.splitFloat32(e),this.writeUint32(jspb.utils.split64Low)},jspb.BinaryEncoder.prototype.writeDouble=function(e){goog.asserts.assert(1/0===e||-1/0===e||isNaN(e)||e>=-jspb.BinaryConstants.FLOAT64_MAX&&e<=jspb.BinaryConstants.FLOAT64_MAX),jspb.utils.splitFloat64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeBool=function(e){goog.asserts.assert(\"boolean\"==typeof e||\"number\"==typeof e),this.buffer_.push(e?1:0)},jspb.BinaryEncoder.prototype.writeEnum=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32(e)},jspb.BinaryEncoder.prototype.writeBytes=function(e){this.buffer_.push.apply(this.buffer_,e)},jspb.BinaryEncoder.prototype.writeVarintHash64=function(e){jspb.utils.splitHash64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFixedHash64=function(e){jspb.utils.splitHash64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeString=function(e){for(var t=this.buffer_.length,o=0;o<e.length;o++){var r=e.charCodeAt(o);if(128>r)this.buffer_.push(r);else if(2048>r)this.buffer_.push(r>>6|192),this.buffer_.push(63&r|128);else if(65536>r)if(55296<=r&&56319>=r&&o+1<e.length){var s=e.charCodeAt(o+1);56320<=s&&57343>=s&&(r=1024*(r-55296)+s-56320+65536,this.buffer_.push(r>>18|240),this.buffer_.push(r>>12&63|128),this.buffer_.push(r>>6&63|128),this.buffer_.push(63&r|128),o++)}else this.buffer_.push(r>>12|224),this.buffer_.push(r>>6&63|128),this.buffer_.push(63&r|128)}return this.buffer_.length-t},jspb.BinaryWriter=function(){this.blocks_=[],this.totalLength_=0,this.encoder_=new jspb.BinaryEncoder,this.bookmarks_=[]},jspb.BinaryWriter.prototype.appendUint8Array_=function(e){var t=this.encoder_.end();this.blocks_.push(t),this.blocks_.push(e),this.totalLength_+=t.length+e.length},jspb.BinaryWriter.prototype.beginDelimited_=function(e){return this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),e=this.encoder_.end(),this.blocks_.push(e),this.totalLength_+=e.length,e.push(this.totalLength_),e},jspb.BinaryWriter.prototype.endDelimited_=function(e){var t=e.pop();for(t=this.totalLength_+this.encoder_.length()-t,goog.asserts.assert(0<=t);127<t;)e.push(127&t|128),t>>>=7,this.totalLength_++;e.push(t),this.totalLength_++},jspb.BinaryWriter.prototype.writeSerializedMessage=function(e,t,o){this.appendUint8Array_(e.subarray(t,o))},jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(e,t,o){null!=e&&null!=t&&null!=o&&this.writeSerializedMessage(e,t,o)},jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[],this.encoder_.end(),this.totalLength_=0,this.bookmarks_=[]},jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var e=new Uint8Array(this.totalLength_+this.encoder_.length()),t=this.blocks_,o=t.length,r=0,s=0;s<o;s++){var n=t[s];e.set(n,r),r+=n.length}return t=this.encoder_.end(),e.set(t,r),r+=t.length,goog.asserts.assert(r==e.length),this.blocks_=[e],e},jspb.BinaryWriter.prototype.getResultBase64String=function(e){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),e)},jspb.BinaryWriter.prototype.beginSubMessage=function(e){this.bookmarks_.push(this.beginDelimited_(e))},jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length),this.endDelimited_(this.bookmarks_.pop())},jspb.BinaryWriter.prototype.writeFieldHeader_=function(e,t){goog.asserts.assert(1<=e&&e==Math.floor(e)),this.encoder_.writeUnsignedVarint32(8*e+t)},jspb.BinaryWriter.prototype.writeAny=function(e,t,o){var r=jspb.BinaryConstants.FieldType;switch(e){case r.DOUBLE:this.writeDouble(t,o);break;case r.FLOAT:this.writeFloat(t,o);break;case r.INT64:this.writeInt64(t,o);break;case r.UINT64:this.writeUint64(t,o);break;case r.INT32:this.writeInt32(t,o);break;case r.FIXED64:this.writeFixed64(t,o);break;case r.FIXED32:this.writeFixed32(t,o);break;case r.BOOL:this.writeBool(t,o);break;case r.STRING:this.writeString(t,o);break;case r.GROUP:goog.asserts.fail(\"Group field type not supported in writeAny()\");break;case r.MESSAGE:goog.asserts.fail(\"Message field type not supported in writeAny()\");break;case r.BYTES:this.writeBytes(t,o);break;case r.UINT32:this.writeUint32(t,o);break;case r.ENUM:this.writeEnum(t,o);break;case r.SFIXED32:this.writeSfixed32(t,o);break;case r.SFIXED64:this.writeSfixed64(t,o);break;case r.SINT32:this.writeSint32(t,o);break;case r.SINT64:this.writeSint64(t,o);break;case r.FHASH64:this.writeFixedHash64(t,o);break;case r.VHASH64:this.writeVarintHash64(t,o);break;default:goog.asserts.fail(\"Invalid field type in writeAny()\")}},jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(t))},jspb.BinaryWriter.prototype.writeSignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(t))},jspb.BinaryWriter.prototype.writeSignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(t))},jspb.BinaryWriter.prototype.writeZigzagVarintHash64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarintHash64(t))},jspb.BinaryWriter.prototype.writeInt32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeInt32String=function(e,t){null!=t&&(t=parseInt(t,10),goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeInt64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeInt64String=function(e,t){null!=t&&(t=jspb.arith.Int64.fromString(t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t.lo,t.hi))},jspb.BinaryWriter.prototype.writeUint32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeUint32String=function(e,t){null!=t&&(t=parseInt(t,10),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeUint64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeUint64String=function(e,t){null!=t&&(t=jspb.arith.UInt64.fromString(t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t.lo,t.hi))},jspb.BinaryWriter.prototype.writeSint32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(e,t))},jspb.BinaryWriter.prototype.writeSint64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(e,t))},jspb.BinaryWriter.prototype.writeSintHash64=function(e,t){null!=t&&this.writeZigzagVarintHash64_(e,t)},jspb.BinaryWriter.prototype.writeSint64String=function(e,t){null!=t&&this.writeZigzagVarint64String_(e,t)},jspb.BinaryWriter.prototype.writeFixed32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(t))},jspb.BinaryWriter.prototype.writeFixed64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(t))},jspb.BinaryWriter.prototype.writeFixed64String=function(e,t){null!=t&&(t=jspb.arith.UInt64.fromString(t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t.lo,t.hi))},jspb.BinaryWriter.prototype.writeSfixed32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(t))},jspb.BinaryWriter.prototype.writeSfixed64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(t))},jspb.BinaryWriter.prototype.writeSfixed64String=function(e,t){null!=t&&(t=jspb.arith.Int64.fromString(t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t.lo,t.hi))},jspb.BinaryWriter.prototype.writeFloat=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(t))},jspb.BinaryWriter.prototype.writeDouble=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(t))},jspb.BinaryWriter.prototype.writeBool=function(e,t){null!=t&&(goog.asserts.assert(\"boolean\"==typeof t||\"number\"==typeof t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(t))},jspb.BinaryWriter.prototype.writeEnum=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeString=function(e,t){null!=t&&(e=this.beginDelimited_(e),this.encoder_.writeString(t),this.endDelimited_(e))},jspb.BinaryWriter.prototype.writeBytes=function(e,t){null!=t&&(t=jspb.utils.byteSourceToUint8Array(t),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length),this.appendUint8Array_(t))},jspb.BinaryWriter.prototype.writeMessage=function(e,t,o){null!=t&&(e=this.beginDelimited_(e),o(t,this),this.endDelimited_(e))},jspb.BinaryWriter.prototype.writeMessageSet=function(e,t,o){null!=t&&(this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.START_GROUP),this.writeFieldHeader_(2,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(e),e=this.beginDelimited_(3),o(t,this),this.endDelimited_(e),this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.END_GROUP))},jspb.BinaryWriter.prototype.writeGroup=function(e,t,o){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),o(t,this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP))},jspb.BinaryWriter.prototype.writeFixedHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(t))},jspb.BinaryWriter.prototype.writeVarintHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(t))},jspb.BinaryWriter.prototype.writeSplitFixed64=function(e,t,o){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(t,o)},jspb.BinaryWriter.prototype.writeSplitVarint64=function(e,t,o){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(t,o)},jspb.BinaryWriter.prototype.writeSplitZigzagVarint64=function(e,t,o){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT);var r=this.encoder_;jspb.utils.toZigzag64(t,o,(function(e,t){r.writeSplitVarint64(e>>>0,t>>>0)}))},jspb.BinaryWriter.prototype.writeRepeatedInt32=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeSignedVarint32_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeInt32String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedInt64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeSignedVarint64_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64=function(e,t,o,r){if(null!=t)for(var s=0;s<t.length;s++)this.writeSplitFixed64(e,o(t[s]),r(t[s]))},jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64=function(e,t,o,r){if(null!=t)for(var s=0;s<t.length;s++)this.writeSplitVarint64(e,o(t[s]),r(t[s]))},jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64=function(e,t,o,r){if(null!=t)for(var s=0;s<t.length;s++)this.writeSplitZigzagVarint64(e,o(t[s]),r(t[s]))},jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeInt64String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedUint32=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeUnsignedVarint32_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeUint32String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedUint64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeUnsignedVarint64_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeUint64String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSint32=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeZigzagVarint32_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSint64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeZigzagVarint64_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeZigzagVarint64String_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSintHash64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeZigzagVarintHash64_(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeFixed32(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeFixed64(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeFixed64String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeSfixed32(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeSfixed64(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeSfixed64String(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedFloat=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeFloat(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedDouble=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeDouble(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedBool=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeBool(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedEnum=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeEnum(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedString=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeString(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedBytes=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeBytes(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedMessage=function(e,t,o){if(null!=t)for(var r=0;r<t.length;r++){var s=this.beginDelimited_(e);o(t[r],this),this.endDelimited_(s)}},jspb.BinaryWriter.prototype.writeRepeatedGroup=function(e,t,o){if(null!=t)for(var r=0;r<t.length;r++)this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),o(t[r],this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP)},jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeFixedHash64(e,t[o])},jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(e,t){if(null!=t)for(var o=0;o<t.length;o++)this.writeVarintHash64(e,t[o])},jspb.BinaryWriter.prototype.writePackedInt32=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeSignedVarint32(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedInt32String=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeSignedVarint32(parseInt(t[o],10));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedInt64=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeSignedVarint64(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSplitFixed64=function(e,t,o,r){if(null!=t){e=this.beginDelimited_(e);for(var s=0;s<t.length;s++)this.encoder_.writeSplitFixed64(o(t[s]),r(t[s]));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSplitVarint64=function(e,t,o,r){if(null!=t){e=this.beginDelimited_(e);for(var s=0;s<t.length;s++)this.encoder_.writeSplitVarint64(o(t[s]),r(t[s]));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64=function(e,t,o,r){if(null!=t){e=this.beginDelimited_(e);for(var s=this.encoder_,n=0;n<t.length;n++)jspb.utils.toZigzag64(o(t[n]),r(t[n]),(function(e,t){s.writeSplitVarint64(e>>>0,t>>>0)}));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedInt64String=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++){var r=jspb.arith.Int64.fromString(t[o]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedUint32=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeUnsignedVarint32(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedUint32String=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeUnsignedVarint32(parseInt(t[o],10));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedUint64=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeUnsignedVarint64(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedUint64String=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++){var r=jspb.arith.UInt64.fromString(t[o]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSint32=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeZigzagVarint32(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSint64=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeZigzagVarint64(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSint64String=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(t[o]));this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedSintHash64=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeZigzagVarintHash64(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedFixed32=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),e=0;e<t.length;e++)this.encoder_.writeUint32(t[e])},jspb.BinaryWriter.prototype.writePackedFixed64=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++)this.encoder_.writeUint64(t[e])},jspb.BinaryWriter.prototype.writePackedFixed64String=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++){var o=jspb.arith.UInt64.fromString(t[e]);this.encoder_.writeSplitFixed64(o.lo,o.hi)}},jspb.BinaryWriter.prototype.writePackedSfixed32=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),e=0;e<t.length;e++)this.encoder_.writeInt32(t[e])},jspb.BinaryWriter.prototype.writePackedSfixed64=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++)this.encoder_.writeInt64(t[e])},jspb.BinaryWriter.prototype.writePackedSfixed64String=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++)this.encoder_.writeInt64String(t[e])},jspb.BinaryWriter.prototype.writePackedFloat=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length),e=0;e<t.length;e++)this.encoder_.writeFloat(t[e])},jspb.BinaryWriter.prototype.writePackedDouble=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++)this.encoder_.writeDouble(t[e])},jspb.BinaryWriter.prototype.writePackedBool=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length),e=0;e<t.length;e++)this.encoder_.writeBool(t[e])},jspb.BinaryWriter.prototype.writePackedEnum=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeEnum(t[o]);this.endDelimited_(e)}},jspb.BinaryWriter.prototype.writePackedFixedHash64=function(e,t){if(null!=t&&t.length)for(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length),e=0;e<t.length;e++)this.encoder_.writeFixedHash64(t[e])},jspb.BinaryWriter.prototype.writePackedVarintHash64=function(e,t){if(null!=t&&t.length){e=this.beginDelimited_(e);for(var o=0;o<t.length;o++)this.encoder_.writeVarintHash64(t[o]);this.endDelimited_(e)}},jspb.Export={},exports.Map=jspb.Map,exports.Message=jspb.Message,exports.BinaryReader=jspb.BinaryReader,exports.BinaryWriter=jspb.BinaryWriter,exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo,exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo,exports.exportSymbol=goog.exportSymbol,exports.inherits=goog.inherits,exports.object={extend:goog.object.extend},exports.typeOf=goog.typeOf},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.flow.entities.Account\",null,n),s.exportSymbol(\"proto.flow.entities.AccountKey\",null,n),proto.flow.entities.Account=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.Account.repeatedFields_,null)},s.inherits(proto.flow.entities.Account,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Account.displayName=\"proto.flow.entities.Account\"),proto.flow.entities.AccountKey=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.entities.AccountKey,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.AccountKey.displayName=\"proto.flow.entities.AccountKey\"),proto.flow.entities.Account.repeatedFields_=[4],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Account.prototype.toObject=function(e){return proto.flow.entities.Account.toObject(e,this)},proto.flow.entities.Account.toObject=function(e,t){var o,s={address:t.getAddress_asB64(),balance:r.Message.getFieldWithDefault(t,2,0),code:t.getCode_asB64(),keysList:r.Message.toObjectList(t.getKeysList(),proto.flow.entities.AccountKey.toObject,e),contractsMap:(o=t.getContractsMap())?o.toObject(e,void 0):[]};return e&&(s.$jspbMessageInstance=t),s}),proto.flow.entities.Account.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Account;return proto.flow.entities.Account.deserializeBinaryFromReader(o,t)},proto.flow.entities.Account.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;case 2:o=t.readUint64();e.setBalance(o);break;case 3:o=t.readBytes();e.setCode(o);break;case 4:o=new proto.flow.entities.AccountKey;t.readMessage(o,proto.flow.entities.AccountKey.deserializeBinaryFromReader),e.addKeys(o);break;case 5:o=e.getContractsMap();t.readMessage(o,(function(e,t){r.Map.deserializeBinary(e,t,r.BinaryReader.prototype.readString,r.BinaryReader.prototype.readBytes,null,\"\",\"\")}));break;default:t.skipField()}}return e},proto.flow.entities.Account.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Account.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Account.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getBalance())&&t.writeUint64(2,o),(o=e.getCode_asU8()).length>0&&t.writeBytes(3,o),(o=e.getKeysList()).length>0&&t.writeRepeatedMessage(4,o,proto.flow.entities.AccountKey.serializeBinaryToWriter),(o=e.getContractsMap(!0))&&o.getLength()>0&&o.serializeBinary(5,t,r.BinaryWriter.prototype.writeString,r.BinaryWriter.prototype.writeBytes)},proto.flow.entities.Account.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Account.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.entities.Account.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.entities.Account.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Account.prototype.getBalance=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.entities.Account.prototype.setBalance=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.entities.Account.prototype.getCode=function(){return r.Message.getFieldWithDefault(this,3,\"\")},proto.flow.entities.Account.prototype.getCode_asB64=function(){return r.Message.bytesAsB64(this.getCode())},proto.flow.entities.Account.prototype.getCode_asU8=function(){return r.Message.bytesAsU8(this.getCode())},proto.flow.entities.Account.prototype.setCode=function(e){return r.Message.setProto3BytesField(this,3,e)},proto.flow.entities.Account.prototype.getKeysList=function(){return r.Message.getRepeatedWrapperField(this,proto.flow.entities.AccountKey,4)},proto.flow.entities.Account.prototype.setKeysList=function(e){return r.Message.setRepeatedWrapperField(this,4,e)},proto.flow.entities.Account.prototype.addKeys=function(e,t){return r.Message.addToRepeatedWrapperField(this,4,e,proto.flow.entities.AccountKey,t)},proto.flow.entities.Account.prototype.clearKeysList=function(){return this.setKeysList([])},proto.flow.entities.Account.prototype.getContractsMap=function(e){return r.Message.getMapField(this,5,e,null)},proto.flow.entities.Account.prototype.clearContractsMap=function(){return this.getContractsMap().clear(),this},r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.AccountKey.prototype.toObject=function(e){return proto.flow.entities.AccountKey.toObject(e,this)},proto.flow.entities.AccountKey.toObject=function(e,t){var o={index:r.Message.getFieldWithDefault(t,1,0),publicKey:t.getPublicKey_asB64(),signAlgo:r.Message.getFieldWithDefault(t,3,0),hashAlgo:r.Message.getFieldWithDefault(t,4,0),weight:r.Message.getFieldWithDefault(t,5,0),sequenceNumber:r.Message.getFieldWithDefault(t,6,0),revoked:r.Message.getBooleanFieldWithDefault(t,7,!1)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.AccountKey.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.AccountKey;return proto.flow.entities.AccountKey.deserializeBinaryFromReader(o,t)},proto.flow.entities.AccountKey.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readUint32();e.setIndex(o);break;case 2:o=t.readBytes();e.setPublicKey(o);break;case 3:o=t.readUint32();e.setSignAlgo(o);break;case 4:o=t.readUint32();e.setHashAlgo(o);break;case 5:o=t.readUint32();e.setWeight(o);break;case 6:o=t.readUint32();e.setSequenceNumber(o);break;case 7:o=t.readBool();e.setRevoked(o);break;default:t.skipField()}}return e},proto.flow.entities.AccountKey.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.AccountKey.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.AccountKey.serializeBinaryToWriter=function(e,t){var o=void 0;0!==(o=e.getIndex())&&t.writeUint32(1,o),(o=e.getPublicKey_asU8()).length>0&&t.writeBytes(2,o),0!==(o=e.getSignAlgo())&&t.writeUint32(3,o),0!==(o=e.getHashAlgo())&&t.writeUint32(4,o),0!==(o=e.getWeight())&&t.writeUint32(5,o),0!==(o=e.getSequenceNumber())&&t.writeUint32(6,o),(o=e.getRevoked())&&t.writeBool(7,o)},proto.flow.entities.AccountKey.prototype.getIndex=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.entities.AccountKey.prototype.setIndex=function(e){return r.Message.setProto3IntField(this,1,e)},proto.flow.entities.AccountKey.prototype.getPublicKey=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.entities.AccountKey.prototype.getPublicKey_asB64=function(){return r.Message.bytesAsB64(this.getPublicKey())},proto.flow.entities.AccountKey.prototype.getPublicKey_asU8=function(){return r.Message.bytesAsU8(this.getPublicKey())},proto.flow.entities.AccountKey.prototype.setPublicKey=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.entities.AccountKey.prototype.getSignAlgo=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.entities.AccountKey.prototype.setSignAlgo=function(e){return r.Message.setProto3IntField(this,3,e)},proto.flow.entities.AccountKey.prototype.getHashAlgo=function(){return r.Message.getFieldWithDefault(this,4,0)},proto.flow.entities.AccountKey.prototype.setHashAlgo=function(e){return r.Message.setProto3IntField(this,4,e)},proto.flow.entities.AccountKey.prototype.getWeight=function(){return r.Message.getFieldWithDefault(this,5,0)},proto.flow.entities.AccountKey.prototype.setWeight=function(e){return r.Message.setProto3IntField(this,5,e)},proto.flow.entities.AccountKey.prototype.getSequenceNumber=function(){return r.Message.getFieldWithDefault(this,6,0)},proto.flow.entities.AccountKey.prototype.setSequenceNumber=function(e){return r.Message.setProto3IntField(this,6,e)},proto.flow.entities.AccountKey.prototype.getRevoked=function(){return r.Message.getBooleanFieldWithDefault(this,7,!1)},proto.flow.entities.AccountKey.prototype.setRevoked=function(e){return r.Message.setProto3BooleanField(this,7,e)},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.flow.entities.Collection\",null,n),s.exportSymbol(\"proto.flow.entities.CollectionGuarantee\",null,n),proto.flow.entities.Collection=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.Collection.repeatedFields_,null)},s.inherits(proto.flow.entities.Collection,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Collection.displayName=\"proto.flow.entities.Collection\"),proto.flow.entities.CollectionGuarantee=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.CollectionGuarantee.repeatedFields_,null)},s.inherits(proto.flow.entities.CollectionGuarantee,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.CollectionGuarantee.displayName=\"proto.flow.entities.CollectionGuarantee\"),proto.flow.entities.Collection.repeatedFields_=[2],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Collection.prototype.toObject=function(e){return proto.flow.entities.Collection.toObject(e,this)},proto.flow.entities.Collection.toObject=function(e,t){var o={id:t.getId_asB64(),transactionIdsList:t.getTransactionIdsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.Collection.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Collection;return proto.flow.entities.Collection.deserializeBinaryFromReader(o,t)},proto.flow.entities.Collection.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;case 2:o=t.readBytes();e.addTransactionIds(o);break;default:t.skipField()}}return e},proto.flow.entities.Collection.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Collection.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Collection.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getTransactionIdsList_asU8()).length>0&&t.writeRepeatedBytes(2,o)},proto.flow.entities.Collection.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Collection.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.entities.Collection.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.entities.Collection.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Collection.prototype.getTransactionIdsList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.entities.Collection.prototype.getTransactionIdsList_asB64=function(){return r.Message.bytesListAsB64(this.getTransactionIdsList())},proto.flow.entities.Collection.prototype.getTransactionIdsList_asU8=function(){return r.Message.bytesListAsU8(this.getTransactionIdsList())},proto.flow.entities.Collection.prototype.setTransactionIdsList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.entities.Collection.prototype.addTransactionIds=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.entities.Collection.prototype.clearTransactionIdsList=function(){return this.setTransactionIdsList([])},proto.flow.entities.CollectionGuarantee.repeatedFields_=[2],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.CollectionGuarantee.prototype.toObject=function(e){return proto.flow.entities.CollectionGuarantee.toObject(e,this)},proto.flow.entities.CollectionGuarantee.toObject=function(e,t){var o={collectionId:t.getCollectionId_asB64(),signaturesList:t.getSignaturesList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.CollectionGuarantee.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.CollectionGuarantee;return proto.flow.entities.CollectionGuarantee.deserializeBinaryFromReader(o,t)},proto.flow.entities.CollectionGuarantee.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setCollectionId(o);break;case 2:o=t.readBytes();e.addSignatures(o);break;default:t.skipField()}}return e},proto.flow.entities.CollectionGuarantee.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.CollectionGuarantee.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.CollectionGuarantee.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getCollectionId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getSignaturesList_asU8()).length>0&&t.writeRepeatedBytes(2,o)},proto.flow.entities.CollectionGuarantee.prototype.getCollectionId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.CollectionGuarantee.prototype.getCollectionId_asB64=function(){return r.Message.bytesAsB64(this.getCollectionId())},proto.flow.entities.CollectionGuarantee.prototype.getCollectionId_asU8=function(){return r.Message.bytesAsU8(this.getCollectionId())},proto.flow.entities.CollectionGuarantee.prototype.setCollectionId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList_asB64=function(){return r.Message.bytesListAsB64(this.getSignaturesList())},proto.flow.entities.CollectionGuarantee.prototype.getSignaturesList_asU8=function(){return r.Message.bytesListAsU8(this.getSignaturesList())},proto.flow.entities.CollectionGuarantee.prototype.setSignaturesList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.entities.CollectionGuarantee.prototype.addSignatures=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.entities.CollectionGuarantee.prototype.clearSignaturesList=function(){return this.setSignaturesList([])},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.flow.entities.Event\",null,n),proto.flow.entities.Event=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.entities.Event,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Event.displayName=\"proto.flow.entities.Event\"),r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Event.prototype.toObject=function(e){return proto.flow.entities.Event.toObject(e,this)},proto.flow.entities.Event.toObject=function(e,t){var o={type:r.Message.getFieldWithDefault(t,1,\"\"),transactionId:t.getTransactionId_asB64(),transactionIndex:r.Message.getFieldWithDefault(t,3,0),eventIndex:r.Message.getFieldWithDefault(t,4,0),payload:t.getPayload_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.Event.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Event;return proto.flow.entities.Event.deserializeBinaryFromReader(o,t)},proto.flow.entities.Event.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readString();e.setType(o);break;case 2:o=t.readBytes();e.setTransactionId(o);break;case 3:o=t.readUint32();e.setTransactionIndex(o);break;case 4:o=t.readUint32();e.setEventIndex(o);break;case 5:o=t.readBytes();e.setPayload(o);break;default:t.skipField()}}return e},proto.flow.entities.Event.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Event.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Event.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getType()).length>0&&t.writeString(1,o),(o=e.getTransactionId_asU8()).length>0&&t.writeBytes(2,o),0!==(o=e.getTransactionIndex())&&t.writeUint32(3,o),0!==(o=e.getEventIndex())&&t.writeUint32(4,o),(o=e.getPayload_asU8()).length>0&&t.writeBytes(5,o)},proto.flow.entities.Event.prototype.getType=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Event.prototype.setType=function(e){return r.Message.setProto3StringField(this,1,e)},proto.flow.entities.Event.prototype.getTransactionId=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.entities.Event.prototype.getTransactionId_asB64=function(){return r.Message.bytesAsB64(this.getTransactionId())},proto.flow.entities.Event.prototype.getTransactionId_asU8=function(){return r.Message.bytesAsU8(this.getTransactionId())},proto.flow.entities.Event.prototype.setTransactionId=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.entities.Event.prototype.getTransactionIndex=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.entities.Event.prototype.setTransactionIndex=function(e){return r.Message.setProto3IntField(this,3,e)},proto.flow.entities.Event.prototype.getEventIndex=function(){return r.Message.getFieldWithDefault(this,4,0)},proto.flow.entities.Event.prototype.setEventIndex=function(e){return r.Message.setProto3IntField(this,4,e)},proto.flow.entities.Event.prototype.getPayload=function(){return r.Message.getFieldWithDefault(this,5,\"\")},proto.flow.entities.Event.prototype.getPayload_asB64=function(){return r.Message.bytesAsB64(this.getPayload())},proto.flow.entities.Event.prototype.getPayload_asU8=function(){return r.Message.bytesAsU8(this.getPayload())},proto.flow.entities.Event.prototype.setPayload=function(e){return r.Message.setProto3BytesField(this,5,e)},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")(),i=o(1);s.object.extend(proto,i);var a=o(5);s.object.extend(proto,a);var g=o(7);s.object.extend(proto,g);var l=o(2);s.object.extend(proto,l);var c=o(3);s.object.extend(proto,c);var u=o(9);s.object.extend(proto,u);var p=o(6);s.object.extend(proto,p),s.exportSymbol(\"proto.flow.access.AccountResponse\",null,n),s.exportSymbol(\"proto.flow.access.BlockHeaderResponse\",null,n),s.exportSymbol(\"proto.flow.access.BlockResponse\",null,n),s.exportSymbol(\"proto.flow.access.CollectionResponse\",null,n),s.exportSymbol(\"proto.flow.access.EventsResponse\",null,n),s.exportSymbol(\"proto.flow.access.EventsResponse.Result\",null,n),s.exportSymbol(\"proto.flow.access.ExecuteScriptAtBlockHeightRequest\",null,n),s.exportSymbol(\"proto.flow.access.ExecuteScriptAtBlockIDRequest\",null,n),s.exportSymbol(\"proto.flow.access.ExecuteScriptAtLatestBlockRequest\",null,n),s.exportSymbol(\"proto.flow.access.ExecuteScriptResponse\",null,n),s.exportSymbol(\"proto.flow.access.GetAccountAtBlockHeightRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetAccountAtLatestBlockRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetAccountRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetAccountResponse\",null,n),s.exportSymbol(\"proto.flow.access.GetBlockByHeightRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetBlockByIDRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetBlockHeaderByHeightRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetBlockHeaderByIDRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetCollectionByIDRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetEventsForBlockIDsRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetEventsForHeightRangeRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetLatestBlockHeaderRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetLatestBlockRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetNetworkParametersRequest\",null,n),s.exportSymbol(\"proto.flow.access.GetNetworkParametersResponse\",null,n),s.exportSymbol(\"proto.flow.access.GetTransactionRequest\",null,n),s.exportSymbol(\"proto.flow.access.PingRequest\",null,n),s.exportSymbol(\"proto.flow.access.PingResponse\",null,n),s.exportSymbol(\"proto.flow.access.SendTransactionRequest\",null,n),s.exportSymbol(\"proto.flow.access.SendTransactionResponse\",null,n),s.exportSymbol(\"proto.flow.access.TransactionResponse\",null,n),s.exportSymbol(\"proto.flow.access.TransactionResultResponse\",null,n),proto.flow.access.PingRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.PingRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.PingRequest.displayName=\"proto.flow.access.PingRequest\"),proto.flow.access.PingResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.PingResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.PingResponse.displayName=\"proto.flow.access.PingResponse\"),proto.flow.access.GetLatestBlockHeaderRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetLatestBlockHeaderRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetLatestBlockHeaderRequest.displayName=\"proto.flow.access.GetLatestBlockHeaderRequest\"),proto.flow.access.GetBlockHeaderByIDRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetBlockHeaderByIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetBlockHeaderByIDRequest.displayName=\"proto.flow.access.GetBlockHeaderByIDRequest\"),proto.flow.access.GetBlockHeaderByHeightRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetBlockHeaderByHeightRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetBlockHeaderByHeightRequest.displayName=\"proto.flow.access.GetBlockHeaderByHeightRequest\"),proto.flow.access.BlockHeaderResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.BlockHeaderResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.BlockHeaderResponse.displayName=\"proto.flow.access.BlockHeaderResponse\"),proto.flow.access.GetLatestBlockRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetLatestBlockRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetLatestBlockRequest.displayName=\"proto.flow.access.GetLatestBlockRequest\"),proto.flow.access.GetBlockByIDRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetBlockByIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetBlockByIDRequest.displayName=\"proto.flow.access.GetBlockByIDRequest\"),proto.flow.access.GetBlockByHeightRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetBlockByHeightRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetBlockByHeightRequest.displayName=\"proto.flow.access.GetBlockByHeightRequest\"),proto.flow.access.BlockResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.BlockResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.BlockResponse.displayName=\"proto.flow.access.BlockResponse\"),proto.flow.access.GetCollectionByIDRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetCollectionByIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetCollectionByIDRequest.displayName=\"proto.flow.access.GetCollectionByIDRequest\"),proto.flow.access.CollectionResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.CollectionResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.CollectionResponse.displayName=\"proto.flow.access.CollectionResponse\"),proto.flow.access.SendTransactionRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.SendTransactionRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.SendTransactionRequest.displayName=\"proto.flow.access.SendTransactionRequest\"),proto.flow.access.SendTransactionResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.SendTransactionResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.SendTransactionResponse.displayName=\"proto.flow.access.SendTransactionResponse\"),proto.flow.access.GetTransactionRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetTransactionRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetTransactionRequest.displayName=\"proto.flow.access.GetTransactionRequest\"),proto.flow.access.TransactionResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.TransactionResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.TransactionResponse.displayName=\"proto.flow.access.TransactionResponse\"),proto.flow.access.TransactionResultResponse=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.TransactionResultResponse.repeatedFields_,null)},s.inherits(proto.flow.access.TransactionResultResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.TransactionResultResponse.displayName=\"proto.flow.access.TransactionResultResponse\"),proto.flow.access.GetAccountRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetAccountRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetAccountRequest.displayName=\"proto.flow.access.GetAccountRequest\"),proto.flow.access.GetAccountResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetAccountResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetAccountResponse.displayName=\"proto.flow.access.GetAccountResponse\"),proto.flow.access.GetAccountAtLatestBlockRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetAccountAtLatestBlockRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetAccountAtLatestBlockRequest.displayName=\"proto.flow.access.GetAccountAtLatestBlockRequest\"),proto.flow.access.AccountResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.AccountResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.AccountResponse.displayName=\"proto.flow.access.AccountResponse\"),proto.flow.access.GetAccountAtBlockHeightRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetAccountAtBlockHeightRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetAccountAtBlockHeightRequest.displayName=\"proto.flow.access.GetAccountAtBlockHeightRequest\"),proto.flow.access.ExecuteScriptAtLatestBlockRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.ExecuteScriptAtLatestBlockRequest.repeatedFields_,null)},s.inherits(proto.flow.access.ExecuteScriptAtLatestBlockRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.ExecuteScriptAtLatestBlockRequest.displayName=\"proto.flow.access.ExecuteScriptAtLatestBlockRequest\"),proto.flow.access.ExecuteScriptAtBlockIDRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.ExecuteScriptAtBlockIDRequest.repeatedFields_,null)},s.inherits(proto.flow.access.ExecuteScriptAtBlockIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.ExecuteScriptAtBlockIDRequest.displayName=\"proto.flow.access.ExecuteScriptAtBlockIDRequest\"),proto.flow.access.ExecuteScriptAtBlockHeightRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.ExecuteScriptAtBlockHeightRequest.repeatedFields_,null)},s.inherits(proto.flow.access.ExecuteScriptAtBlockHeightRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.ExecuteScriptAtBlockHeightRequest.displayName=\"proto.flow.access.ExecuteScriptAtBlockHeightRequest\"),proto.flow.access.ExecuteScriptResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.ExecuteScriptResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.ExecuteScriptResponse.displayName=\"proto.flow.access.ExecuteScriptResponse\"),proto.flow.access.GetEventsForHeightRangeRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetEventsForHeightRangeRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetEventsForHeightRangeRequest.displayName=\"proto.flow.access.GetEventsForHeightRangeRequest\"),proto.flow.access.GetEventsForBlockIDsRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.GetEventsForBlockIDsRequest.repeatedFields_,null)},s.inherits(proto.flow.access.GetEventsForBlockIDsRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetEventsForBlockIDsRequest.displayName=\"proto.flow.access.GetEventsForBlockIDsRequest\"),proto.flow.access.EventsResponse=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.EventsResponse.repeatedFields_,null)},s.inherits(proto.flow.access.EventsResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.EventsResponse.displayName=\"proto.flow.access.EventsResponse\"),proto.flow.access.EventsResponse.Result=function(e){r.Message.initialize(this,e,0,-1,proto.flow.access.EventsResponse.Result.repeatedFields_,null)},s.inherits(proto.flow.access.EventsResponse.Result,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.EventsResponse.Result.displayName=\"proto.flow.access.EventsResponse.Result\"),proto.flow.access.GetNetworkParametersRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetNetworkParametersRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetNetworkParametersRequest.displayName=\"proto.flow.access.GetNetworkParametersRequest\"),proto.flow.access.GetNetworkParametersResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.access.GetNetworkParametersResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.access.GetNetworkParametersResponse.displayName=\"proto.flow.access.GetNetworkParametersResponse\"),r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.PingRequest.prototype.toObject=function(e){return proto.flow.access.PingRequest.toObject(e,this)},proto.flow.access.PingRequest.toObject=function(e,t){var o={};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.PingRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.PingRequest;return proto.flow.access.PingRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.PingRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.flow.access.PingRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.PingRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.PingRequest.serializeBinaryToWriter=function(e,t){},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.PingResponse.prototype.toObject=function(e){return proto.flow.access.PingResponse.toObject(e,this)},proto.flow.access.PingResponse.toObject=function(e,t){var o={};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.PingResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.PingResponse;return proto.flow.access.PingResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.PingResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.flow.access.PingResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.PingResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.PingResponse.serializeBinaryToWriter=function(e,t){},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetLatestBlockHeaderRequest.prototype.toObject=function(e){return proto.flow.access.GetLatestBlockHeaderRequest.toObject(e,this)},proto.flow.access.GetLatestBlockHeaderRequest.toObject=function(e,t){var o={isSealed:r.Message.getBooleanFieldWithDefault(t,1,!1)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetLatestBlockHeaderRequest;return proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetLatestBlockHeaderRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBool();e.setIsSealed(o);break;default:t.skipField()}}return e},proto.flow.access.GetLatestBlockHeaderRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetLatestBlockHeaderRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetLatestBlockHeaderRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getIsSealed())&&t.writeBool(1,o)},proto.flow.access.GetLatestBlockHeaderRequest.prototype.getIsSealed=function(){return r.Message.getBooleanFieldWithDefault(this,1,!1)},proto.flow.access.GetLatestBlockHeaderRequest.prototype.setIsSealed=function(e){return r.Message.setProto3BooleanField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetBlockHeaderByIDRequest.prototype.toObject=function(e){return proto.flow.access.GetBlockHeaderByIDRequest.toObject(e,this)},proto.flow.access.GetBlockHeaderByIDRequest.toObject=function(e,t){var o={id:t.getId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetBlockHeaderByIDRequest;return proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetBlockHeaderByIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;default:t.skipField()}}return e},proto.flow.access.GetBlockHeaderByIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetBlockHeaderByIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetBlockHeaderByIDRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.access.GetBlockHeaderByIDRequest.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.access.GetBlockHeaderByIDRequest.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetBlockHeaderByHeightRequest.prototype.toObject=function(e){return proto.flow.access.GetBlockHeaderByHeightRequest.toObject(e,this)},proto.flow.access.GetBlockHeaderByHeightRequest.toObject=function(e,t){var o={height:r.Message.getFieldWithDefault(t,1,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetBlockHeaderByHeightRequest;return proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetBlockHeaderByHeightRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readUint64();e.setHeight(o);break;default:t.skipField()}}return e},proto.flow.access.GetBlockHeaderByHeightRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetBlockHeaderByHeightRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetBlockHeaderByHeightRequest.serializeBinaryToWriter=function(e,t){var o;0!==(o=e.getHeight())&&t.writeUint64(1,o)},proto.flow.access.GetBlockHeaderByHeightRequest.prototype.getHeight=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.access.GetBlockHeaderByHeightRequest.prototype.setHeight=function(e){return r.Message.setProto3IntField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.BlockHeaderResponse.prototype.toObject=function(e){return proto.flow.access.BlockHeaderResponse.toObject(e,this)},proto.flow.access.BlockHeaderResponse.toObject=function(e,t){var o,r={block:(o=t.getBlock())&&a.BlockHeader.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.BlockHeaderResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.BlockHeaderResponse;return proto.flow.access.BlockHeaderResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.BlockHeaderResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new a.BlockHeader;t.readMessage(o,a.BlockHeader.deserializeBinaryFromReader),e.setBlock(o);break;default:t.skipField()}}return e},proto.flow.access.BlockHeaderResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.BlockHeaderResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.BlockHeaderResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getBlock())&&t.writeMessage(1,o,a.BlockHeader.serializeBinaryToWriter)},proto.flow.access.BlockHeaderResponse.prototype.getBlock=function(){return r.Message.getWrapperField(this,a.BlockHeader,1)},proto.flow.access.BlockHeaderResponse.prototype.setBlock=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.BlockHeaderResponse.prototype.clearBlock=function(){return this.setBlock(void 0)},proto.flow.access.BlockHeaderResponse.prototype.hasBlock=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetLatestBlockRequest.prototype.toObject=function(e){return proto.flow.access.GetLatestBlockRequest.toObject(e,this)},proto.flow.access.GetLatestBlockRequest.toObject=function(e,t){var o={isSealed:r.Message.getBooleanFieldWithDefault(t,1,!1)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetLatestBlockRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetLatestBlockRequest;return proto.flow.access.GetLatestBlockRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetLatestBlockRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBool();e.setIsSealed(o);break;default:t.skipField()}}return e},proto.flow.access.GetLatestBlockRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetLatestBlockRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetLatestBlockRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getIsSealed())&&t.writeBool(1,o)},proto.flow.access.GetLatestBlockRequest.prototype.getIsSealed=function(){return r.Message.getBooleanFieldWithDefault(this,1,!1)},proto.flow.access.GetLatestBlockRequest.prototype.setIsSealed=function(e){return r.Message.setProto3BooleanField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetBlockByIDRequest.prototype.toObject=function(e){return proto.flow.access.GetBlockByIDRequest.toObject(e,this)},proto.flow.access.GetBlockByIDRequest.toObject=function(e,t){var o={id:t.getId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetBlockByIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetBlockByIDRequest;return proto.flow.access.GetBlockByIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetBlockByIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;default:t.skipField()}}return e},proto.flow.access.GetBlockByIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetBlockByIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetBlockByIDRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetBlockByIDRequest.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetBlockByIDRequest.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.access.GetBlockByIDRequest.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.access.GetBlockByIDRequest.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetBlockByHeightRequest.prototype.toObject=function(e){return proto.flow.access.GetBlockByHeightRequest.toObject(e,this)},proto.flow.access.GetBlockByHeightRequest.toObject=function(e,t){var o={height:r.Message.getFieldWithDefault(t,1,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetBlockByHeightRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetBlockByHeightRequest;return proto.flow.access.GetBlockByHeightRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetBlockByHeightRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readUint64();e.setHeight(o);break;default:t.skipField()}}return e},proto.flow.access.GetBlockByHeightRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetBlockByHeightRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetBlockByHeightRequest.serializeBinaryToWriter=function(e,t){var o;0!==(o=e.getHeight())&&t.writeUint64(1,o)},proto.flow.access.GetBlockByHeightRequest.prototype.getHeight=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.access.GetBlockByHeightRequest.prototype.setHeight=function(e){return r.Message.setProto3IntField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.BlockResponse.prototype.toObject=function(e){return proto.flow.access.BlockResponse.toObject(e,this)},proto.flow.access.BlockResponse.toObject=function(e,t){var o,r={block:(o=t.getBlock())&&g.Block.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.BlockResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.BlockResponse;return proto.flow.access.BlockResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.BlockResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new g.Block;t.readMessage(o,g.Block.deserializeBinaryFromReader),e.setBlock(o);break;default:t.skipField()}}return e},proto.flow.access.BlockResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.BlockResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.BlockResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getBlock())&&t.writeMessage(1,o,g.Block.serializeBinaryToWriter)},proto.flow.access.BlockResponse.prototype.getBlock=function(){return r.Message.getWrapperField(this,g.Block,1)},proto.flow.access.BlockResponse.prototype.setBlock=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.BlockResponse.prototype.clearBlock=function(){return this.setBlock(void 0)},proto.flow.access.BlockResponse.prototype.hasBlock=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetCollectionByIDRequest.prototype.toObject=function(e){return proto.flow.access.GetCollectionByIDRequest.toObject(e,this)},proto.flow.access.GetCollectionByIDRequest.toObject=function(e,t){var o={id:t.getId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetCollectionByIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetCollectionByIDRequest;return proto.flow.access.GetCollectionByIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetCollectionByIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;default:t.skipField()}}return e},proto.flow.access.GetCollectionByIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetCollectionByIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetCollectionByIDRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetCollectionByIDRequest.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetCollectionByIDRequest.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.access.GetCollectionByIDRequest.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.access.GetCollectionByIDRequest.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.CollectionResponse.prototype.toObject=function(e){return proto.flow.access.CollectionResponse.toObject(e,this)},proto.flow.access.CollectionResponse.toObject=function(e,t){var o,r={collection:(o=t.getCollection())&&l.Collection.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.CollectionResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.CollectionResponse;return proto.flow.access.CollectionResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.CollectionResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new l.Collection;t.readMessage(o,l.Collection.deserializeBinaryFromReader),e.setCollection(o);break;default:t.skipField()}}return e},proto.flow.access.CollectionResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.CollectionResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.CollectionResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getCollection())&&t.writeMessage(1,o,l.Collection.serializeBinaryToWriter)},proto.flow.access.CollectionResponse.prototype.getCollection=function(){return r.Message.getWrapperField(this,l.Collection,1)},proto.flow.access.CollectionResponse.prototype.setCollection=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.CollectionResponse.prototype.clearCollection=function(){return this.setCollection(void 0)},proto.flow.access.CollectionResponse.prototype.hasCollection=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.SendTransactionRequest.prototype.toObject=function(e){return proto.flow.access.SendTransactionRequest.toObject(e,this)},proto.flow.access.SendTransactionRequest.toObject=function(e,t){var o,r={transaction:(o=t.getTransaction())&&u.Transaction.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.SendTransactionRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.SendTransactionRequest;return proto.flow.access.SendTransactionRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.SendTransactionRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new u.Transaction;t.readMessage(o,u.Transaction.deserializeBinaryFromReader),e.setTransaction(o);break;default:t.skipField()}}return e},proto.flow.access.SendTransactionRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.SendTransactionRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.SendTransactionRequest.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getTransaction())&&t.writeMessage(1,o,u.Transaction.serializeBinaryToWriter)},proto.flow.access.SendTransactionRequest.prototype.getTransaction=function(){return r.Message.getWrapperField(this,u.Transaction,1)},proto.flow.access.SendTransactionRequest.prototype.setTransaction=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.SendTransactionRequest.prototype.clearTransaction=function(){return this.setTransaction(void 0)},proto.flow.access.SendTransactionRequest.prototype.hasTransaction=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.SendTransactionResponse.prototype.toObject=function(e){return proto.flow.access.SendTransactionResponse.toObject(e,this)},proto.flow.access.SendTransactionResponse.toObject=function(e,t){var o={id:t.getId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.SendTransactionResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.SendTransactionResponse;return proto.flow.access.SendTransactionResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.SendTransactionResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;default:t.skipField()}}return e},proto.flow.access.SendTransactionResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.SendTransactionResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.SendTransactionResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.SendTransactionResponse.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.SendTransactionResponse.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.access.SendTransactionResponse.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.access.SendTransactionResponse.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetTransactionRequest.prototype.toObject=function(e){return proto.flow.access.GetTransactionRequest.toObject(e,this)},proto.flow.access.GetTransactionRequest.toObject=function(e,t){var o={id:t.getId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetTransactionRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetTransactionRequest;return proto.flow.access.GetTransactionRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetTransactionRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;default:t.skipField()}}return e},proto.flow.access.GetTransactionRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetTransactionRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetTransactionRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetTransactionRequest.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetTransactionRequest.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.access.GetTransactionRequest.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.access.GetTransactionRequest.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.TransactionResponse.prototype.toObject=function(e){return proto.flow.access.TransactionResponse.toObject(e,this)},proto.flow.access.TransactionResponse.toObject=function(e,t){var o,r={transaction:(o=t.getTransaction())&&u.Transaction.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.TransactionResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.TransactionResponse;return proto.flow.access.TransactionResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.TransactionResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new u.Transaction;t.readMessage(o,u.Transaction.deserializeBinaryFromReader),e.setTransaction(o);break;default:t.skipField()}}return e},proto.flow.access.TransactionResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.TransactionResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.TransactionResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getTransaction())&&t.writeMessage(1,o,u.Transaction.serializeBinaryToWriter)},proto.flow.access.TransactionResponse.prototype.getTransaction=function(){return r.Message.getWrapperField(this,u.Transaction,1)},proto.flow.access.TransactionResponse.prototype.setTransaction=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.TransactionResponse.prototype.clearTransaction=function(){return this.setTransaction(void 0)},proto.flow.access.TransactionResponse.prototype.hasTransaction=function(){return null!=r.Message.getField(this,1)},proto.flow.access.TransactionResultResponse.repeatedFields_=[4],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.TransactionResultResponse.prototype.toObject=function(e){return proto.flow.access.TransactionResultResponse.toObject(e,this)},proto.flow.access.TransactionResultResponse.toObject=function(e,t){var o={status:r.Message.getFieldWithDefault(t,1,0),statusCode:r.Message.getFieldWithDefault(t,2,0),errorMessage:r.Message.getFieldWithDefault(t,3,\"\"),eventsList:r.Message.toObjectList(t.getEventsList(),c.Event.toObject,e)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.TransactionResultResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.TransactionResultResponse;return proto.flow.access.TransactionResultResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.TransactionResultResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readEnum();e.setStatus(o);break;case 2:o=t.readUint32();e.setStatusCode(o);break;case 3:o=t.readString();e.setErrorMessage(o);break;case 4:o=new c.Event;t.readMessage(o,c.Event.deserializeBinaryFromReader),e.addEvents(o);break;default:t.skipField()}}return e},proto.flow.access.TransactionResultResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.TransactionResultResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.TransactionResultResponse.serializeBinaryToWriter=function(e,t){var o=void 0;0!==(o=e.getStatus())&&t.writeEnum(1,o),0!==(o=e.getStatusCode())&&t.writeUint32(2,o),(o=e.getErrorMessage()).length>0&&t.writeString(3,o),(o=e.getEventsList()).length>0&&t.writeRepeatedMessage(4,o,c.Event.serializeBinaryToWriter)},proto.flow.access.TransactionResultResponse.prototype.getStatus=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.access.TransactionResultResponse.prototype.setStatus=function(e){return r.Message.setProto3EnumField(this,1,e)},proto.flow.access.TransactionResultResponse.prototype.getStatusCode=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.access.TransactionResultResponse.prototype.setStatusCode=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.access.TransactionResultResponse.prototype.getErrorMessage=function(){return r.Message.getFieldWithDefault(this,3,\"\")},proto.flow.access.TransactionResultResponse.prototype.setErrorMessage=function(e){return r.Message.setProto3StringField(this,3,e)},proto.flow.access.TransactionResultResponse.prototype.getEventsList=function(){return r.Message.getRepeatedWrapperField(this,c.Event,4)},proto.flow.access.TransactionResultResponse.prototype.setEventsList=function(e){return r.Message.setRepeatedWrapperField(this,4,e)},proto.flow.access.TransactionResultResponse.prototype.addEvents=function(e,t){return r.Message.addToRepeatedWrapperField(this,4,e,proto.flow.entities.Event,t)},proto.flow.access.TransactionResultResponse.prototype.clearEventsList=function(){return this.setEventsList([])},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetAccountRequest.prototype.toObject=function(e){return proto.flow.access.GetAccountRequest.toObject(e,this)},proto.flow.access.GetAccountRequest.toObject=function(e,t){var o={address:t.getAddress_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetAccountRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetAccountRequest;return proto.flow.access.GetAccountRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetAccountRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;default:t.skipField()}}return e},proto.flow.access.GetAccountRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetAccountRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetAccountRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetAccountRequest.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetAccountRequest.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.access.GetAccountRequest.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.access.GetAccountRequest.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetAccountResponse.prototype.toObject=function(e){return proto.flow.access.GetAccountResponse.toObject(e,this)},proto.flow.access.GetAccountResponse.toObject=function(e,t){var o,r={account:(o=t.getAccount())&&i.Account.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.GetAccountResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetAccountResponse;return proto.flow.access.GetAccountResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.GetAccountResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new i.Account;t.readMessage(o,i.Account.deserializeBinaryFromReader),e.setAccount(o);break;default:t.skipField()}}return e},proto.flow.access.GetAccountResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetAccountResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetAccountResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getAccount())&&t.writeMessage(1,o,i.Account.serializeBinaryToWriter)},proto.flow.access.GetAccountResponse.prototype.getAccount=function(){return r.Message.getWrapperField(this,i.Account,1)},proto.flow.access.GetAccountResponse.prototype.setAccount=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.GetAccountResponse.prototype.clearAccount=function(){return this.setAccount(void 0)},proto.flow.access.GetAccountResponse.prototype.hasAccount=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetAccountAtLatestBlockRequest.prototype.toObject=function(e){return proto.flow.access.GetAccountAtLatestBlockRequest.toObject(e,this)},proto.flow.access.GetAccountAtLatestBlockRequest.toObject=function(e,t){var o={address:t.getAddress_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetAccountAtLatestBlockRequest;return proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetAccountAtLatestBlockRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;default:t.skipField()}}return e},proto.flow.access.GetAccountAtLatestBlockRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetAccountAtLatestBlockRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetAccountAtLatestBlockRequest.serializeBinaryToWriter=function(e,t){var o;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.access.GetAccountAtLatestBlockRequest.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.access.GetAccountAtLatestBlockRequest.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.AccountResponse.prototype.toObject=function(e){return proto.flow.access.AccountResponse.toObject(e,this)},proto.flow.access.AccountResponse.toObject=function(e,t){var o,r={account:(o=t.getAccount())&&i.Account.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.access.AccountResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.AccountResponse;return proto.flow.access.AccountResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.AccountResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new i.Account;t.readMessage(o,i.Account.deserializeBinaryFromReader),e.setAccount(o);break;default:t.skipField()}}return e},proto.flow.access.AccountResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.AccountResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.AccountResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getAccount())&&t.writeMessage(1,o,i.Account.serializeBinaryToWriter)},proto.flow.access.AccountResponse.prototype.getAccount=function(){return r.Message.getWrapperField(this,i.Account,1)},proto.flow.access.AccountResponse.prototype.setAccount=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.access.AccountResponse.prototype.clearAccount=function(){return this.setAccount(void 0)},proto.flow.access.AccountResponse.prototype.hasAccount=function(){return null!=r.Message.getField(this,1)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetAccountAtBlockHeightRequest.prototype.toObject=function(e){return proto.flow.access.GetAccountAtBlockHeightRequest.toObject(e,this)},proto.flow.access.GetAccountAtBlockHeightRequest.toObject=function(e,t){var o={address:t.getAddress_asB64(),blockHeight:r.Message.getFieldWithDefault(t,2,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetAccountAtBlockHeightRequest;return proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetAccountAtBlockHeightRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;case 2:o=t.readUint64();e.setBlockHeight(o);break;default:t.skipField()}}return e},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetAccountAtBlockHeightRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetAccountAtBlockHeightRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getBlockHeight())&&t.writeUint64(2,o)},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.getBlockHeight=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.access.GetAccountAtBlockHeightRequest.prototype.setBlockHeight=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.repeatedFields_=[2],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.toObject=function(e){return proto.flow.access.ExecuteScriptAtLatestBlockRequest.toObject(e,this)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.toObject=function(e,t){var o={script:t.getScript_asB64(),argumentsList:t.getArgumentsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.ExecuteScriptAtLatestBlockRequest;return proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setScript(o);break;case 2:o=t.readBytes();e.addArguments(o);break;default:t.skipField()}}return e},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.ExecuteScriptAtLatestBlockRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.ExecuteScriptAtLatestBlockRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getScript_asU8()).length>0&&t.writeBytes(1,o),(o=e.getArgumentsList_asU8()).length>0&&t.writeRepeatedBytes(2,o)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript_asB64=function(){return r.Message.bytesAsB64(this.getScript())},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getScript_asU8=function(){return r.Message.bytesAsU8(this.getScript())},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.setScript=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList_asB64=function(){return r.Message.bytesListAsB64(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.getArgumentsList_asU8=function(){return r.Message.bytesListAsU8(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.setArgumentsList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.addArguments=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.access.ExecuteScriptAtLatestBlockRequest.prototype.clearArgumentsList=function(){return this.setArgumentsList([])},proto.flow.access.ExecuteScriptAtBlockIDRequest.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.toObject=function(e){return proto.flow.access.ExecuteScriptAtBlockIDRequest.toObject(e,this)},proto.flow.access.ExecuteScriptAtBlockIDRequest.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),script:t.getScript_asB64(),argumentsList:t.getArgumentsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.ExecuteScriptAtBlockIDRequest;return proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readBytes();e.setScript(o);break;case 3:o=t.readBytes();e.addArguments(o);break;default:t.skipField()}}return e},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getScript_asU8()).length>0&&t.writeBytes(2,o),(o=e.getArgumentsList_asU8()).length>0&&t.writeRepeatedBytes(3,o)},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript_asB64=function(){return r.Message.bytesAsB64(this.getScript())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getScript_asU8=function(){return r.Message.bytesAsU8(this.getScript())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setScript=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList=function(){return r.Message.getRepeatedField(this,3)},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asB64=function(){return r.Message.bytesListAsB64(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asU8=function(){return r.Message.bytesListAsU8(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.setArgumentsList=function(e){return r.Message.setField(this,3,e||[])},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.addArguments=function(e,t){return r.Message.addToRepeatedField(this,3,e,t)},proto.flow.access.ExecuteScriptAtBlockIDRequest.prototype.clearArgumentsList=function(){return this.setArgumentsList([])},proto.flow.access.ExecuteScriptAtBlockHeightRequest.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.toObject=function(e){return proto.flow.access.ExecuteScriptAtBlockHeightRequest.toObject(e,this)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.toObject=function(e,t){var o={blockHeight:r.Message.getFieldWithDefault(t,1,0),script:t.getScript_asB64(),argumentsList:t.getArgumentsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.ExecuteScriptAtBlockHeightRequest;return proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readUint64();e.setBlockHeight(o);break;case 2:o=t.readBytes();e.setScript(o);break;case 3:o=t.readBytes();e.addArguments(o);break;default:t.skipField()}}return e},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.ExecuteScriptAtBlockHeightRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.ExecuteScriptAtBlockHeightRequest.serializeBinaryToWriter=function(e,t){var o=void 0;0!==(o=e.getBlockHeight())&&t.writeUint64(1,o),(o=e.getScript_asU8()).length>0&&t.writeBytes(2,o),(o=e.getArgumentsList_asU8()).length>0&&t.writeRepeatedBytes(3,o)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getBlockHeight=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setBlockHeight=function(e){return r.Message.setProto3IntField(this,1,e)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript_asB64=function(){return r.Message.bytesAsB64(this.getScript())},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getScript_asU8=function(){return r.Message.bytesAsU8(this.getScript())},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setScript=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList=function(){return r.Message.getRepeatedField(this,3)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList_asB64=function(){return r.Message.bytesListAsB64(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.getArgumentsList_asU8=function(){return r.Message.bytesListAsU8(this.getArgumentsList())},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.setArgumentsList=function(e){return r.Message.setField(this,3,e||[])},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.addArguments=function(e,t){return r.Message.addToRepeatedField(this,3,e,t)},proto.flow.access.ExecuteScriptAtBlockHeightRequest.prototype.clearArgumentsList=function(){return this.setArgumentsList([])},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.ExecuteScriptResponse.prototype.toObject=function(e){return proto.flow.access.ExecuteScriptResponse.toObject(e,this)},proto.flow.access.ExecuteScriptResponse.toObject=function(e,t){var o={value:t.getValue_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.ExecuteScriptResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.ExecuteScriptResponse;return proto.flow.access.ExecuteScriptResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.ExecuteScriptResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setValue(o);break;default:t.skipField()}}return e},proto.flow.access.ExecuteScriptResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.ExecuteScriptResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.ExecuteScriptResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getValue_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.access.ExecuteScriptResponse.prototype.getValue=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.ExecuteScriptResponse.prototype.getValue_asB64=function(){return r.Message.bytesAsB64(this.getValue())},proto.flow.access.ExecuteScriptResponse.prototype.getValue_asU8=function(){return r.Message.bytesAsU8(this.getValue())},proto.flow.access.ExecuteScriptResponse.prototype.setValue=function(e){return r.Message.setProto3BytesField(this,1,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetEventsForHeightRangeRequest.prototype.toObject=function(e){return proto.flow.access.GetEventsForHeightRangeRequest.toObject(e,this)},proto.flow.access.GetEventsForHeightRangeRequest.toObject=function(e,t){var o={type:r.Message.getFieldWithDefault(t,1,\"\"),startHeight:r.Message.getFieldWithDefault(t,2,0),endHeight:r.Message.getFieldWithDefault(t,3,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetEventsForHeightRangeRequest;return proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetEventsForHeightRangeRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readString();e.setType(o);break;case 2:o=t.readUint64();e.setStartHeight(o);break;case 3:o=t.readUint64();e.setEndHeight(o);break;default:t.skipField()}}return e},proto.flow.access.GetEventsForHeightRangeRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetEventsForHeightRangeRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetEventsForHeightRangeRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getType()).length>0&&t.writeString(1,o),0!==(o=e.getStartHeight())&&t.writeUint64(2,o),0!==(o=e.getEndHeight())&&t.writeUint64(3,o)},proto.flow.access.GetEventsForHeightRangeRequest.prototype.getType=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetEventsForHeightRangeRequest.prototype.setType=function(e){return r.Message.setProto3StringField(this,1,e)},proto.flow.access.GetEventsForHeightRangeRequest.prototype.getStartHeight=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.access.GetEventsForHeightRangeRequest.prototype.setStartHeight=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.access.GetEventsForHeightRangeRequest.prototype.getEndHeight=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.access.GetEventsForHeightRangeRequest.prototype.setEndHeight=function(e){return r.Message.setProto3IntField(this,3,e)},proto.flow.access.GetEventsForBlockIDsRequest.repeatedFields_=[2],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetEventsForBlockIDsRequest.prototype.toObject=function(e){return proto.flow.access.GetEventsForBlockIDsRequest.toObject(e,this)},proto.flow.access.GetEventsForBlockIDsRequest.toObject=function(e,t){var o={type:r.Message.getFieldWithDefault(t,1,\"\"),blockIdsList:t.getBlockIdsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetEventsForBlockIDsRequest;return proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetEventsForBlockIDsRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readString();e.setType(o);break;case 2:o=t.readBytes();e.addBlockIds(o);break;default:t.skipField()}}return e},proto.flow.access.GetEventsForBlockIDsRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetEventsForBlockIDsRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetEventsForBlockIDsRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getType()).length>0&&t.writeString(1,o),(o=e.getBlockIdsList_asU8()).length>0&&t.writeRepeatedBytes(2,o)},proto.flow.access.GetEventsForBlockIDsRequest.prototype.getType=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetEventsForBlockIDsRequest.prototype.setType=function(e){return r.Message.setProto3StringField(this,1,e)},proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asB64=function(){return r.Message.bytesListAsB64(this.getBlockIdsList())},proto.flow.access.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asU8=function(){return r.Message.bytesListAsU8(this.getBlockIdsList())},proto.flow.access.GetEventsForBlockIDsRequest.prototype.setBlockIdsList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.access.GetEventsForBlockIDsRequest.prototype.addBlockIds=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.access.GetEventsForBlockIDsRequest.prototype.clearBlockIdsList=function(){return this.setBlockIdsList([])},proto.flow.access.EventsResponse.repeatedFields_=[1],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.EventsResponse.prototype.toObject=function(e){return proto.flow.access.EventsResponse.toObject(e,this)},proto.flow.access.EventsResponse.toObject=function(e,t){var o={resultsList:r.Message.toObjectList(t.getResultsList(),proto.flow.access.EventsResponse.Result.toObject,e)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.EventsResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.EventsResponse;return proto.flow.access.EventsResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.EventsResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new proto.flow.access.EventsResponse.Result;t.readMessage(o,proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader),e.addResults(o);break;default:t.skipField()}}return e},proto.flow.access.EventsResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.EventsResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.EventsResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getResultsList()).length>0&&t.writeRepeatedMessage(1,o,proto.flow.access.EventsResponse.Result.serializeBinaryToWriter)},proto.flow.access.EventsResponse.Result.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.EventsResponse.Result.prototype.toObject=function(e){return proto.flow.access.EventsResponse.Result.toObject(e,this)},proto.flow.access.EventsResponse.Result.toObject=function(e,t){var o,s={blockId:t.getBlockId_asB64(),blockHeight:r.Message.getFieldWithDefault(t,2,0),eventsList:r.Message.toObjectList(t.getEventsList(),c.Event.toObject,e),blockTimestamp:(o=t.getBlockTimestamp())&&p.Timestamp.toObject(e,o)};return e&&(s.$jspbMessageInstance=t),s}),proto.flow.access.EventsResponse.Result.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.EventsResponse.Result;return proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader(o,t)},proto.flow.access.EventsResponse.Result.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readUint64();e.setBlockHeight(o);break;case 3:o=new c.Event;t.readMessage(o,c.Event.deserializeBinaryFromReader),e.addEvents(o);break;case 4:o=new p.Timestamp;t.readMessage(o,p.Timestamp.deserializeBinaryFromReader),e.setBlockTimestamp(o);break;default:t.skipField()}}return e},proto.flow.access.EventsResponse.Result.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.EventsResponse.Result.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.EventsResponse.Result.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getBlockHeight())&&t.writeUint64(2,o),(o=e.getEventsList()).length>0&&t.writeRepeatedMessage(3,o,c.Event.serializeBinaryToWriter),null!=(o=e.getBlockTimestamp())&&t.writeMessage(4,o,p.Timestamp.serializeBinaryToWriter)},proto.flow.access.EventsResponse.Result.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.EventsResponse.Result.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.access.EventsResponse.Result.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.access.EventsResponse.Result.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.access.EventsResponse.Result.prototype.getBlockHeight=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.access.EventsResponse.Result.prototype.setBlockHeight=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.access.EventsResponse.Result.prototype.getEventsList=function(){return r.Message.getRepeatedWrapperField(this,c.Event,3)},proto.flow.access.EventsResponse.Result.prototype.setEventsList=function(e){return r.Message.setRepeatedWrapperField(this,3,e)},proto.flow.access.EventsResponse.Result.prototype.addEvents=function(e,t){return r.Message.addToRepeatedWrapperField(this,3,e,proto.flow.entities.Event,t)},proto.flow.access.EventsResponse.Result.prototype.clearEventsList=function(){return this.setEventsList([])},proto.flow.access.EventsResponse.Result.prototype.getBlockTimestamp=function(){return r.Message.getWrapperField(this,p.Timestamp,4)},proto.flow.access.EventsResponse.Result.prototype.setBlockTimestamp=function(e){return r.Message.setWrapperField(this,4,e)},proto.flow.access.EventsResponse.Result.prototype.clearBlockTimestamp=function(){return this.setBlockTimestamp(void 0)},proto.flow.access.EventsResponse.Result.prototype.hasBlockTimestamp=function(){return null!=r.Message.getField(this,4)},proto.flow.access.EventsResponse.prototype.getResultsList=function(){return r.Message.getRepeatedWrapperField(this,proto.flow.access.EventsResponse.Result,1)},proto.flow.access.EventsResponse.prototype.setResultsList=function(e){return r.Message.setRepeatedWrapperField(this,1,e)},proto.flow.access.EventsResponse.prototype.addResults=function(e,t){return r.Message.addToRepeatedWrapperField(this,1,e,proto.flow.access.EventsResponse.Result,t)},proto.flow.access.EventsResponse.prototype.clearResultsList=function(){return this.setResultsList([])},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetNetworkParametersRequest.prototype.toObject=function(e){return proto.flow.access.GetNetworkParametersRequest.toObject(e,this)},proto.flow.access.GetNetworkParametersRequest.toObject=function(e,t){var o={};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetNetworkParametersRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetNetworkParametersRequest;return proto.flow.access.GetNetworkParametersRequest.deserializeBinaryFromReader(o,t)},proto.flow.access.GetNetworkParametersRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.flow.access.GetNetworkParametersRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetNetworkParametersRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetNetworkParametersRequest.serializeBinaryToWriter=function(e,t){},r.Message.GENERATE_TO_OBJECT&&(proto.flow.access.GetNetworkParametersResponse.prototype.toObject=function(e){return proto.flow.access.GetNetworkParametersResponse.toObject(e,this)},proto.flow.access.GetNetworkParametersResponse.toObject=function(e,t){var o={chainId:r.Message.getFieldWithDefault(t,1,\"\")};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.access.GetNetworkParametersResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.access.GetNetworkParametersResponse;return proto.flow.access.GetNetworkParametersResponse.deserializeBinaryFromReader(o,t)},proto.flow.access.GetNetworkParametersResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readString();e.setChainId(o);break;default:t.skipField()}}return e},proto.flow.access.GetNetworkParametersResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.access.GetNetworkParametersResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.access.GetNetworkParametersResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getChainId()).length>0&&t.writeString(1,o)},proto.flow.access.GetNetworkParametersResponse.prototype.getChainId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.access.GetNetworkParametersResponse.prototype.setChainId=function(e){return r.Message.setProto3StringField(this,1,e)},s.object.extend(t,proto.flow.access)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")(),i=o(6);s.object.extend(proto,i),s.exportSymbol(\"proto.flow.entities.BlockHeader\",null,n),proto.flow.entities.BlockHeader=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.entities.BlockHeader,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.BlockHeader.displayName=\"proto.flow.entities.BlockHeader\"),r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.BlockHeader.prototype.toObject=function(e){return proto.flow.entities.BlockHeader.toObject(e,this)},proto.flow.entities.BlockHeader.toObject=function(e,t){var o,s={id:t.getId_asB64(),parentId:t.getParentId_asB64(),height:r.Message.getFieldWithDefault(t,3,0),timestamp:(o=t.getTimestamp())&&i.Timestamp.toObject(e,o)};return e&&(s.$jspbMessageInstance=t),s}),proto.flow.entities.BlockHeader.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.BlockHeader;return proto.flow.entities.BlockHeader.deserializeBinaryFromReader(o,t)},proto.flow.entities.BlockHeader.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;case 2:o=t.readBytes();e.setParentId(o);break;case 3:o=t.readUint64();e.setHeight(o);break;case 4:o=new i.Timestamp;t.readMessage(o,i.Timestamp.deserializeBinaryFromReader),e.setTimestamp(o);break;default:t.skipField()}}return e},proto.flow.entities.BlockHeader.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.BlockHeader.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.BlockHeader.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getParentId_asU8()).length>0&&t.writeBytes(2,o),0!==(o=e.getHeight())&&t.writeUint64(3,o),null!=(o=e.getTimestamp())&&t.writeMessage(4,o,i.Timestamp.serializeBinaryToWriter)},proto.flow.entities.BlockHeader.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.BlockHeader.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.entities.BlockHeader.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.entities.BlockHeader.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.BlockHeader.prototype.getParentId=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.entities.BlockHeader.prototype.getParentId_asB64=function(){return r.Message.bytesAsB64(this.getParentId())},proto.flow.entities.BlockHeader.prototype.getParentId_asU8=function(){return r.Message.bytesAsU8(this.getParentId())},proto.flow.entities.BlockHeader.prototype.setParentId=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.entities.BlockHeader.prototype.getHeight=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.entities.BlockHeader.prototype.setHeight=function(e){return r.Message.setProto3IntField(this,3,e)},proto.flow.entities.BlockHeader.prototype.getTimestamp=function(){return r.Message.getWrapperField(this,i.Timestamp,4)},proto.flow.entities.BlockHeader.prototype.setTimestamp=function(e){return r.Message.setWrapperField(this,4,e)},proto.flow.entities.BlockHeader.prototype.clearTimestamp=function(){return this.setTimestamp(void 0)},proto.flow.entities.BlockHeader.prototype.hasTimestamp=function(){return null!=r.Message.getField(this,4)},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.google.protobuf.Timestamp\",null,n),proto.google.protobuf.Timestamp=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.google.protobuf.Timestamp,r.Message),s.DEBUG&&!COMPILED&&(proto.google.protobuf.Timestamp.displayName=\"proto.google.protobuf.Timestamp\"),r.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.Timestamp.prototype.toObject=function(e){return proto.google.protobuf.Timestamp.toObject(e,this)},proto.google.protobuf.Timestamp.toObject=function(e,t){var o={seconds:r.Message.getFieldWithDefault(t,1,0),nanos:r.Message.getFieldWithDefault(t,2,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.google.protobuf.Timestamp.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.google.protobuf.Timestamp;return proto.google.protobuf.Timestamp.deserializeBinaryFromReader(o,t)},proto.google.protobuf.Timestamp.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readInt64();e.setSeconds(o);break;case 2:o=t.readInt32();e.setNanos(o);break;default:t.skipField()}}return e},proto.google.protobuf.Timestamp.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.google.protobuf.Timestamp.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.google.protobuf.Timestamp.serializeBinaryToWriter=function(e,t){var o=void 0;0!==(o=e.getSeconds())&&t.writeInt64(1,o),0!==(o=e.getNanos())&&t.writeInt32(2,o)},proto.google.protobuf.Timestamp.prototype.getSeconds=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.google.protobuf.Timestamp.prototype.setSeconds=function(e){return r.Message.setProto3IntField(this,1,e)},proto.google.protobuf.Timestamp.prototype.getNanos=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.google.protobuf.Timestamp.prototype.setNanos=function(e){return r.Message.setProto3IntField(this,2,e)},s.object.extend(t,proto.google.protobuf),proto.google.protobuf.Timestamp.prototype.toDate=function(){var e=this.getSeconds(),t=this.getNanos();return new Date(1e3*e+t/1e6)},proto.google.protobuf.Timestamp.prototype.fromDate=function(e){this.setSeconds(Math.floor(e.getTime()/1e3)),this.setNanos(1e6*e.getMilliseconds())},proto.google.protobuf.Timestamp.fromDate=function(e){var t=new proto.google.protobuf.Timestamp;return t.fromDate(e),t}},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")(),i=o(6);s.object.extend(proto,i);var a=o(2);s.object.extend(proto,a);var g=o(8);s.object.extend(proto,g),s.exportSymbol(\"proto.flow.entities.Block\",null,n),proto.flow.entities.Block=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.Block.repeatedFields_,null)},s.inherits(proto.flow.entities.Block,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Block.displayName=\"proto.flow.entities.Block\"),proto.flow.entities.Block.repeatedFields_=[5,6,7],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Block.prototype.toObject=function(e){return proto.flow.entities.Block.toObject(e,this)},proto.flow.entities.Block.toObject=function(e,t){var o,s={id:t.getId_asB64(),parentId:t.getParentId_asB64(),height:r.Message.getFieldWithDefault(t,3,0),timestamp:(o=t.getTimestamp())&&i.Timestamp.toObject(e,o),collectionGuaranteesList:r.Message.toObjectList(t.getCollectionGuaranteesList(),a.CollectionGuarantee.toObject,e),blockSealsList:r.Message.toObjectList(t.getBlockSealsList(),g.BlockSeal.toObject,e),signaturesList:t.getSignaturesList_asB64()};return e&&(s.$jspbMessageInstance=t),s}),proto.flow.entities.Block.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Block;return proto.flow.entities.Block.deserializeBinaryFromReader(o,t)},proto.flow.entities.Block.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setId(o);break;case 2:o=t.readBytes();e.setParentId(o);break;case 3:o=t.readUint64();e.setHeight(o);break;case 4:o=new i.Timestamp;t.readMessage(o,i.Timestamp.deserializeBinaryFromReader),e.setTimestamp(o);break;case 5:o=new a.CollectionGuarantee;t.readMessage(o,a.CollectionGuarantee.deserializeBinaryFromReader),e.addCollectionGuarantees(o);break;case 6:o=new g.BlockSeal;t.readMessage(o,g.BlockSeal.deserializeBinaryFromReader),e.addBlockSeals(o);break;case 7:o=t.readBytes();e.addSignatures(o);break;default:t.skipField()}}return e},proto.flow.entities.Block.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Block.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Block.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getParentId_asU8()).length>0&&t.writeBytes(2,o),0!==(o=e.getHeight())&&t.writeUint64(3,o),null!=(o=e.getTimestamp())&&t.writeMessage(4,o,i.Timestamp.serializeBinaryToWriter),(o=e.getCollectionGuaranteesList()).length>0&&t.writeRepeatedMessage(5,o,a.CollectionGuarantee.serializeBinaryToWriter),(o=e.getBlockSealsList()).length>0&&t.writeRepeatedMessage(6,o,g.BlockSeal.serializeBinaryToWriter),(o=e.getSignaturesList_asU8()).length>0&&t.writeRepeatedBytes(7,o)},proto.flow.entities.Block.prototype.getId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Block.prototype.getId_asB64=function(){return r.Message.bytesAsB64(this.getId())},proto.flow.entities.Block.prototype.getId_asU8=function(){return r.Message.bytesAsU8(this.getId())},proto.flow.entities.Block.prototype.setId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Block.prototype.getParentId=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.entities.Block.prototype.getParentId_asB64=function(){return r.Message.bytesAsB64(this.getParentId())},proto.flow.entities.Block.prototype.getParentId_asU8=function(){return r.Message.bytesAsU8(this.getParentId())},proto.flow.entities.Block.prototype.setParentId=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.entities.Block.prototype.getHeight=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.entities.Block.prototype.setHeight=function(e){return r.Message.setProto3IntField(this,3,e)},proto.flow.entities.Block.prototype.getTimestamp=function(){return r.Message.getWrapperField(this,i.Timestamp,4)},proto.flow.entities.Block.prototype.setTimestamp=function(e){return r.Message.setWrapperField(this,4,e)},proto.flow.entities.Block.prototype.clearTimestamp=function(){return this.setTimestamp(void 0)},proto.flow.entities.Block.prototype.hasTimestamp=function(){return null!=r.Message.getField(this,4)},proto.flow.entities.Block.prototype.getCollectionGuaranteesList=function(){return r.Message.getRepeatedWrapperField(this,a.CollectionGuarantee,5)},proto.flow.entities.Block.prototype.setCollectionGuaranteesList=function(e){return r.Message.setRepeatedWrapperField(this,5,e)},proto.flow.entities.Block.prototype.addCollectionGuarantees=function(e,t){return r.Message.addToRepeatedWrapperField(this,5,e,proto.flow.entities.CollectionGuarantee,t)},proto.flow.entities.Block.prototype.clearCollectionGuaranteesList=function(){return this.setCollectionGuaranteesList([])},proto.flow.entities.Block.prototype.getBlockSealsList=function(){return r.Message.getRepeatedWrapperField(this,g.BlockSeal,6)},proto.flow.entities.Block.prototype.setBlockSealsList=function(e){return r.Message.setRepeatedWrapperField(this,6,e)},proto.flow.entities.Block.prototype.addBlockSeals=function(e,t){return r.Message.addToRepeatedWrapperField(this,6,e,proto.flow.entities.BlockSeal,t)},proto.flow.entities.Block.prototype.clearBlockSealsList=function(){return this.setBlockSealsList([])},proto.flow.entities.Block.prototype.getSignaturesList=function(){return r.Message.getRepeatedField(this,7)},proto.flow.entities.Block.prototype.getSignaturesList_asB64=function(){return r.Message.bytesListAsB64(this.getSignaturesList())},proto.flow.entities.Block.prototype.getSignaturesList_asU8=function(){return r.Message.bytesListAsU8(this.getSignaturesList())},proto.flow.entities.Block.prototype.setSignaturesList=function(e){return r.Message.setField(this,7,e||[])},proto.flow.entities.Block.prototype.addSignatures=function(e,t){return r.Message.addToRepeatedField(this,7,e,t)},proto.flow.entities.Block.prototype.clearSignaturesList=function(){return this.setSignaturesList([])},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.flow.entities.BlockSeal\",null,n),proto.flow.entities.BlockSeal=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.BlockSeal.repeatedFields_,null)},s.inherits(proto.flow.entities.BlockSeal,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.BlockSeal.displayName=\"proto.flow.entities.BlockSeal\"),proto.flow.entities.BlockSeal.repeatedFields_=[3,4],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.BlockSeal.prototype.toObject=function(e){return proto.flow.entities.BlockSeal.toObject(e,this)},proto.flow.entities.BlockSeal.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),executionReceiptId:t.getExecutionReceiptId_asB64(),executionReceiptSignaturesList:t.getExecutionReceiptSignaturesList_asB64(),resultApprovalSignaturesList:t.getResultApprovalSignaturesList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.BlockSeal.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.BlockSeal;return proto.flow.entities.BlockSeal.deserializeBinaryFromReader(o,t)},proto.flow.entities.BlockSeal.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readBytes();e.setExecutionReceiptId(o);break;case 3:o=t.readBytes();e.addExecutionReceiptSignatures(o);break;case 4:o=t.readBytes();e.addResultApprovalSignatures(o);break;default:t.skipField()}}return e},proto.flow.entities.BlockSeal.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.BlockSeal.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.BlockSeal.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getExecutionReceiptId_asU8()).length>0&&t.writeBytes(2,o),(o=e.getExecutionReceiptSignaturesList_asU8()).length>0&&t.writeRepeatedBytes(3,o),(o=e.getResultApprovalSignaturesList_asU8()).length>0&&t.writeRepeatedBytes(4,o)},proto.flow.entities.BlockSeal.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.BlockSeal.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.entities.BlockSeal.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.entities.BlockSeal.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId_asB64=function(){return r.Message.bytesAsB64(this.getExecutionReceiptId())},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptId_asU8=function(){return r.Message.bytesAsU8(this.getExecutionReceiptId())},proto.flow.entities.BlockSeal.prototype.setExecutionReceiptId=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList=function(){return r.Message.getRepeatedField(this,3)},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList_asB64=function(){return r.Message.bytesListAsB64(this.getExecutionReceiptSignaturesList())},proto.flow.entities.BlockSeal.prototype.getExecutionReceiptSignaturesList_asU8=function(){return r.Message.bytesListAsU8(this.getExecutionReceiptSignaturesList())},proto.flow.entities.BlockSeal.prototype.setExecutionReceiptSignaturesList=function(e){return r.Message.setField(this,3,e||[])},proto.flow.entities.BlockSeal.prototype.addExecutionReceiptSignatures=function(e,t){return r.Message.addToRepeatedField(this,3,e,t)},proto.flow.entities.BlockSeal.prototype.clearExecutionReceiptSignaturesList=function(){return this.setExecutionReceiptSignaturesList([])},proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList=function(){return r.Message.getRepeatedField(this,4)},proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList_asB64=function(){return r.Message.bytesListAsB64(this.getResultApprovalSignaturesList())},proto.flow.entities.BlockSeal.prototype.getResultApprovalSignaturesList_asU8=function(){return r.Message.bytesListAsU8(this.getResultApprovalSignaturesList())},proto.flow.entities.BlockSeal.prototype.setResultApprovalSignaturesList=function(e){return r.Message.setField(this,4,e||[])},proto.flow.entities.BlockSeal.prototype.addResultApprovalSignatures=function(e,t){return r.Message.addToRepeatedField(this,4,e,t)},proto.flow.entities.BlockSeal.prototype.clearResultApprovalSignaturesList=function(){return this.setResultApprovalSignaturesList([])},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")();s.exportSymbol(\"proto.flow.entities.Transaction\",null,n),s.exportSymbol(\"proto.flow.entities.Transaction.ProposalKey\",null,n),s.exportSymbol(\"proto.flow.entities.Transaction.Signature\",null,n),s.exportSymbol(\"proto.flow.entities.TransactionStatus\",null,n),proto.flow.entities.Transaction=function(e){r.Message.initialize(this,e,0,-1,proto.flow.entities.Transaction.repeatedFields_,null)},s.inherits(proto.flow.entities.Transaction,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Transaction.displayName=\"proto.flow.entities.Transaction\"),proto.flow.entities.Transaction.ProposalKey=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.entities.Transaction.ProposalKey,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Transaction.ProposalKey.displayName=\"proto.flow.entities.Transaction.ProposalKey\"),proto.flow.entities.Transaction.Signature=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.entities.Transaction.Signature,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.entities.Transaction.Signature.displayName=\"proto.flow.entities.Transaction.Signature\"),proto.flow.entities.Transaction.repeatedFields_=[2,7,8,9],r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Transaction.prototype.toObject=function(e){return proto.flow.entities.Transaction.toObject(e,this)},proto.flow.entities.Transaction.toObject=function(e,t){var o,s={script:t.getScript_asB64(),argumentsList:t.getArgumentsList_asB64(),referenceBlockId:t.getReferenceBlockId_asB64(),gasLimit:r.Message.getFieldWithDefault(t,4,0),proposalKey:(o=t.getProposalKey())&&proto.flow.entities.Transaction.ProposalKey.toObject(e,o),payer:t.getPayer_asB64(),authorizersList:t.getAuthorizersList_asB64(),payloadSignaturesList:r.Message.toObjectList(t.getPayloadSignaturesList(),proto.flow.entities.Transaction.Signature.toObject,e),envelopeSignaturesList:r.Message.toObjectList(t.getEnvelopeSignaturesList(),proto.flow.entities.Transaction.Signature.toObject,e)};return e&&(s.$jspbMessageInstance=t),s}),proto.flow.entities.Transaction.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Transaction;return proto.flow.entities.Transaction.deserializeBinaryFromReader(o,t)},proto.flow.entities.Transaction.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setScript(o);break;case 2:o=t.readBytes();e.addArguments(o);break;case 3:o=t.readBytes();e.setReferenceBlockId(o);break;case 4:o=t.readUint64();e.setGasLimit(o);break;case 5:o=new proto.flow.entities.Transaction.ProposalKey;t.readMessage(o,proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader),e.setProposalKey(o);break;case 6:o=t.readBytes();e.setPayer(o);break;case 7:o=t.readBytes();e.addAuthorizers(o);break;case 8:o=new proto.flow.entities.Transaction.Signature;t.readMessage(o,proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader),e.addPayloadSignatures(o);break;case 9:o=new proto.flow.entities.Transaction.Signature;t.readMessage(o,proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader),e.addEnvelopeSignatures(o);break;default:t.skipField()}}return e},proto.flow.entities.Transaction.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Transaction.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Transaction.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getScript_asU8()).length>0&&t.writeBytes(1,o),(o=e.getArgumentsList_asU8()).length>0&&t.writeRepeatedBytes(2,o),(o=e.getReferenceBlockId_asU8()).length>0&&t.writeBytes(3,o),0!==(o=e.getGasLimit())&&t.writeUint64(4,o),null!=(o=e.getProposalKey())&&t.writeMessage(5,o,proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter),(o=e.getPayer_asU8()).length>0&&t.writeBytes(6,o),(o=e.getAuthorizersList_asU8()).length>0&&t.writeRepeatedBytes(7,o),(o=e.getPayloadSignaturesList()).length>0&&t.writeRepeatedMessage(8,o,proto.flow.entities.Transaction.Signature.serializeBinaryToWriter),(o=e.getEnvelopeSignaturesList()).length>0&&t.writeRepeatedMessage(9,o,proto.flow.entities.Transaction.Signature.serializeBinaryToWriter)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Transaction.ProposalKey.prototype.toObject=function(e){return proto.flow.entities.Transaction.ProposalKey.toObject(e,this)},proto.flow.entities.Transaction.ProposalKey.toObject=function(e,t){var o={address:t.getAddress_asB64(),keyId:r.Message.getFieldWithDefault(t,2,0),sequenceNumber:r.Message.getFieldWithDefault(t,3,0)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.Transaction.ProposalKey.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Transaction.ProposalKey;return proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader(o,t)},proto.flow.entities.Transaction.ProposalKey.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;case 2:o=t.readUint32();e.setKeyId(o);break;case 3:o=t.readUint64();e.setSequenceNumber(o);break;default:t.skipField()}}return e},proto.flow.entities.Transaction.ProposalKey.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Transaction.ProposalKey.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getKeyId())&&t.writeUint32(2,o),0!==(o=e.getSequenceNumber())&&t.writeUint64(3,o)},proto.flow.entities.Transaction.ProposalKey.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Transaction.ProposalKey.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.entities.Transaction.ProposalKey.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.entities.Transaction.ProposalKey.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Transaction.ProposalKey.prototype.getKeyId=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.entities.Transaction.ProposalKey.prototype.setKeyId=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.entities.Transaction.ProposalKey.prototype.getSequenceNumber=function(){return r.Message.getFieldWithDefault(this,3,0)},proto.flow.entities.Transaction.ProposalKey.prototype.setSequenceNumber=function(e){return r.Message.setProto3IntField(this,3,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.entities.Transaction.Signature.prototype.toObject=function(e){return proto.flow.entities.Transaction.Signature.toObject(e,this)},proto.flow.entities.Transaction.Signature.toObject=function(e,t){var o={address:t.getAddress_asB64(),keyId:r.Message.getFieldWithDefault(t,2,0),signature:t.getSignature_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.entities.Transaction.Signature.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.entities.Transaction.Signature;return proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader(o,t)},proto.flow.entities.Transaction.Signature.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setAddress(o);break;case 2:o=t.readUint32();e.setKeyId(o);break;case 3:o=t.readBytes();e.setSignature(o);break;default:t.skipField()}}return e},proto.flow.entities.Transaction.Signature.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.entities.Transaction.Signature.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.entities.Transaction.Signature.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getAddress_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getKeyId())&&t.writeUint32(2,o),(o=e.getSignature_asU8()).length>0&&t.writeBytes(3,o)},proto.flow.entities.Transaction.Signature.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Transaction.Signature.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.entities.Transaction.Signature.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.entities.Transaction.Signature.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Transaction.Signature.prototype.getKeyId=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.entities.Transaction.Signature.prototype.setKeyId=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.entities.Transaction.Signature.prototype.getSignature=function(){return r.Message.getFieldWithDefault(this,3,\"\")},proto.flow.entities.Transaction.Signature.prototype.getSignature_asB64=function(){return r.Message.bytesAsB64(this.getSignature())},proto.flow.entities.Transaction.Signature.prototype.getSignature_asU8=function(){return r.Message.bytesAsU8(this.getSignature())},proto.flow.entities.Transaction.Signature.prototype.setSignature=function(e){return r.Message.setProto3BytesField(this,3,e)},proto.flow.entities.Transaction.prototype.getScript=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.entities.Transaction.prototype.getScript_asB64=function(){return r.Message.bytesAsB64(this.getScript())},proto.flow.entities.Transaction.prototype.getScript_asU8=function(){return r.Message.bytesAsU8(this.getScript())},proto.flow.entities.Transaction.prototype.setScript=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.entities.Transaction.prototype.getArgumentsList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.entities.Transaction.prototype.getArgumentsList_asB64=function(){return r.Message.bytesListAsB64(this.getArgumentsList())},proto.flow.entities.Transaction.prototype.getArgumentsList_asU8=function(){return r.Message.bytesListAsU8(this.getArgumentsList())},proto.flow.entities.Transaction.prototype.setArgumentsList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.entities.Transaction.prototype.addArguments=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.entities.Transaction.prototype.clearArgumentsList=function(){return this.setArgumentsList([])},proto.flow.entities.Transaction.prototype.getReferenceBlockId=function(){return r.Message.getFieldWithDefault(this,3,\"\")},proto.flow.entities.Transaction.prototype.getReferenceBlockId_asB64=function(){return r.Message.bytesAsB64(this.getReferenceBlockId())},proto.flow.entities.Transaction.prototype.getReferenceBlockId_asU8=function(){return r.Message.bytesAsU8(this.getReferenceBlockId())},proto.flow.entities.Transaction.prototype.setReferenceBlockId=function(e){return r.Message.setProto3BytesField(this,3,e)},proto.flow.entities.Transaction.prototype.getGasLimit=function(){return r.Message.getFieldWithDefault(this,4,0)},proto.flow.entities.Transaction.prototype.setGasLimit=function(e){return r.Message.setProto3IntField(this,4,e)},proto.flow.entities.Transaction.prototype.getProposalKey=function(){return r.Message.getWrapperField(this,proto.flow.entities.Transaction.ProposalKey,5)},proto.flow.entities.Transaction.prototype.setProposalKey=function(e){return r.Message.setWrapperField(this,5,e)},proto.flow.entities.Transaction.prototype.clearProposalKey=function(){return this.setProposalKey(void 0)},proto.flow.entities.Transaction.prototype.hasProposalKey=function(){return null!=r.Message.getField(this,5)},proto.flow.entities.Transaction.prototype.getPayer=function(){return r.Message.getFieldWithDefault(this,6,\"\")},proto.flow.entities.Transaction.prototype.getPayer_asB64=function(){return r.Message.bytesAsB64(this.getPayer())},proto.flow.entities.Transaction.prototype.getPayer_asU8=function(){return r.Message.bytesAsU8(this.getPayer())},proto.flow.entities.Transaction.prototype.setPayer=function(e){return r.Message.setProto3BytesField(this,6,e)},proto.flow.entities.Transaction.prototype.getAuthorizersList=function(){return r.Message.getRepeatedField(this,7)},proto.flow.entities.Transaction.prototype.getAuthorizersList_asB64=function(){return r.Message.bytesListAsB64(this.getAuthorizersList())},proto.flow.entities.Transaction.prototype.getAuthorizersList_asU8=function(){return r.Message.bytesListAsU8(this.getAuthorizersList())},proto.flow.entities.Transaction.prototype.setAuthorizersList=function(e){return r.Message.setField(this,7,e||[])},proto.flow.entities.Transaction.prototype.addAuthorizers=function(e,t){return r.Message.addToRepeatedField(this,7,e,t)},proto.flow.entities.Transaction.prototype.clearAuthorizersList=function(){return this.setAuthorizersList([])},proto.flow.entities.Transaction.prototype.getPayloadSignaturesList=function(){return r.Message.getRepeatedWrapperField(this,proto.flow.entities.Transaction.Signature,8)},proto.flow.entities.Transaction.prototype.setPayloadSignaturesList=function(e){return r.Message.setRepeatedWrapperField(this,8,e)},proto.flow.entities.Transaction.prototype.addPayloadSignatures=function(e,t){return r.Message.addToRepeatedWrapperField(this,8,e,proto.flow.entities.Transaction.Signature,t)},proto.flow.entities.Transaction.prototype.clearPayloadSignaturesList=function(){return this.setPayloadSignaturesList([])},proto.flow.entities.Transaction.prototype.getEnvelopeSignaturesList=function(){return r.Message.getRepeatedWrapperField(this,proto.flow.entities.Transaction.Signature,9)},proto.flow.entities.Transaction.prototype.setEnvelopeSignaturesList=function(e){return r.Message.setRepeatedWrapperField(this,9,e)},proto.flow.entities.Transaction.prototype.addEnvelopeSignatures=function(e,t){return r.Message.addToRepeatedWrapperField(this,9,e,proto.flow.entities.Transaction.Signature,t)},proto.flow.entities.Transaction.prototype.clearEnvelopeSignaturesList=function(){return this.setEnvelopeSignaturesList([])},proto.flow.entities.TransactionStatus={UNKNOWN:0,PENDING:1,FINALIZED:2,EXECUTED:3,SEALED:4,EXPIRED:5},s.object.extend(t,proto.flow.entities)},function(e,t,o){var r=o(0),s=r,n=Function(\"return this\")(),i=o(1);s.object.extend(proto,i);var a=o(3);s.object.extend(proto,a),s.exportSymbol(\"proto.flow.execution.ExecuteScriptAtBlockIDRequest\",null,n),s.exportSymbol(\"proto.flow.execution.ExecuteScriptAtBlockIDResponse\",null,n),s.exportSymbol(\"proto.flow.execution.GetAccountAtBlockIDRequest\",null,n),s.exportSymbol(\"proto.flow.execution.GetAccountAtBlockIDResponse\",null,n),s.exportSymbol(\"proto.flow.execution.GetEventsForBlockIDsRequest\",null,n),s.exportSymbol(\"proto.flow.execution.GetEventsForBlockIDsResponse\",null,n),s.exportSymbol(\"proto.flow.execution.GetEventsForBlockIDsResponse.Result\",null,n),s.exportSymbol(\"proto.flow.execution.GetTransactionResultRequest\",null,n),s.exportSymbol(\"proto.flow.execution.GetTransactionResultResponse\",null,n),s.exportSymbol(\"proto.flow.execution.PingRequest\",null,n),s.exportSymbol(\"proto.flow.execution.PingResponse\",null,n),proto.flow.execution.PingRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.PingRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.PingRequest.displayName=\"proto.flow.execution.PingRequest\"),proto.flow.execution.PingResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.PingResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.PingResponse.displayName=\"proto.flow.execution.PingResponse\"),proto.flow.execution.GetAccountAtBlockIDRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.GetAccountAtBlockIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetAccountAtBlockIDRequest.displayName=\"proto.flow.execution.GetAccountAtBlockIDRequest\"),proto.flow.execution.GetAccountAtBlockIDResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.GetAccountAtBlockIDResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetAccountAtBlockIDResponse.displayName=\"proto.flow.execution.GetAccountAtBlockIDResponse\"),proto.flow.execution.ExecuteScriptAtBlockIDRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.execution.ExecuteScriptAtBlockIDRequest.repeatedFields_,null)},s.inherits(proto.flow.execution.ExecuteScriptAtBlockIDRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.ExecuteScriptAtBlockIDRequest.displayName=\"proto.flow.execution.ExecuteScriptAtBlockIDRequest\"),proto.flow.execution.ExecuteScriptAtBlockIDResponse=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.ExecuteScriptAtBlockIDResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.ExecuteScriptAtBlockIDResponse.displayName=\"proto.flow.execution.ExecuteScriptAtBlockIDResponse\"),proto.flow.execution.GetEventsForBlockIDsResponse=function(e){r.Message.initialize(this,e,0,-1,proto.flow.execution.GetEventsForBlockIDsResponse.repeatedFields_,null)},s.inherits(proto.flow.execution.GetEventsForBlockIDsResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetEventsForBlockIDsResponse.displayName=\"proto.flow.execution.GetEventsForBlockIDsResponse\"),proto.flow.execution.GetEventsForBlockIDsResponse.Result=function(e){r.Message.initialize(this,e,0,-1,proto.flow.execution.GetEventsForBlockIDsResponse.Result.repeatedFields_,null)},s.inherits(proto.flow.execution.GetEventsForBlockIDsResponse.Result,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetEventsForBlockIDsResponse.Result.displayName=\"proto.flow.execution.GetEventsForBlockIDsResponse.Result\"),proto.flow.execution.GetEventsForBlockIDsRequest=function(e){r.Message.initialize(this,e,0,-1,proto.flow.execution.GetEventsForBlockIDsRequest.repeatedFields_,null)},s.inherits(proto.flow.execution.GetEventsForBlockIDsRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetEventsForBlockIDsRequest.displayName=\"proto.flow.execution.GetEventsForBlockIDsRequest\"),proto.flow.execution.GetTransactionResultRequest=function(e){r.Message.initialize(this,e,0,-1,null,null)},s.inherits(proto.flow.execution.GetTransactionResultRequest,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetTransactionResultRequest.displayName=\"proto.flow.execution.GetTransactionResultRequest\"),proto.flow.execution.GetTransactionResultResponse=function(e){r.Message.initialize(this,e,0,-1,proto.flow.execution.GetTransactionResultResponse.repeatedFields_,null)},s.inherits(proto.flow.execution.GetTransactionResultResponse,r.Message),s.DEBUG&&!COMPILED&&(proto.flow.execution.GetTransactionResultResponse.displayName=\"proto.flow.execution.GetTransactionResultResponse\"),r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.PingRequest.prototype.toObject=function(e){return proto.flow.execution.PingRequest.toObject(e,this)},proto.flow.execution.PingRequest.toObject=function(e,t){var o={};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.PingRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.PingRequest;return proto.flow.execution.PingRequest.deserializeBinaryFromReader(o,t)},proto.flow.execution.PingRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.flow.execution.PingRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.PingRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.PingRequest.serializeBinaryToWriter=function(e,t){},r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.PingResponse.prototype.toObject=function(e){return proto.flow.execution.PingResponse.toObject(e,this)},proto.flow.execution.PingResponse.toObject=function(e,t){var o={};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.PingResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.PingResponse;return proto.flow.execution.PingResponse.deserializeBinaryFromReader(o,t)},proto.flow.execution.PingResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.flow.execution.PingResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.PingResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.PingResponse.serializeBinaryToWriter=function(e,t){},r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetAccountAtBlockIDRequest.prototype.toObject=function(e){return proto.flow.execution.GetAccountAtBlockIDRequest.toObject(e,this)},proto.flow.execution.GetAccountAtBlockIDRequest.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),address:t.getAddress_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetAccountAtBlockIDRequest;return proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetAccountAtBlockIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readBytes();e.setAddress(o);break;default:t.skipField()}}return e},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetAccountAtBlockIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetAccountAtBlockIDRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getAddress_asU8()).length>0&&t.writeBytes(2,o)},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress_asB64=function(){return r.Message.bytesAsB64(this.getAddress())},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.getAddress_asU8=function(){return r.Message.bytesAsU8(this.getAddress())},proto.flow.execution.GetAccountAtBlockIDRequest.prototype.setAddress=function(e){return r.Message.setProto3BytesField(this,2,e)},r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetAccountAtBlockIDResponse.prototype.toObject=function(e){return proto.flow.execution.GetAccountAtBlockIDResponse.toObject(e,this)},proto.flow.execution.GetAccountAtBlockIDResponse.toObject=function(e,t){var o,r={account:(o=t.getAccount())&&i.Account.toObject(e,o)};return e&&(r.$jspbMessageInstance=t),r}),proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetAccountAtBlockIDResponse;return proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetAccountAtBlockIDResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new i.Account;t.readMessage(o,i.Account.deserializeBinaryFromReader),e.setAccount(o);break;default:t.skipField()}}return e},proto.flow.execution.GetAccountAtBlockIDResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetAccountAtBlockIDResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetAccountAtBlockIDResponse.serializeBinaryToWriter=function(e,t){var o;null!=(o=e.getAccount())&&t.writeMessage(1,o,i.Account.serializeBinaryToWriter)},proto.flow.execution.GetAccountAtBlockIDResponse.prototype.getAccount=function(){return r.Message.getWrapperField(this,i.Account,1)},proto.flow.execution.GetAccountAtBlockIDResponse.prototype.setAccount=function(e){return r.Message.setWrapperField(this,1,e)},proto.flow.execution.GetAccountAtBlockIDResponse.prototype.clearAccount=function(){return this.setAccount(void 0)},proto.flow.execution.GetAccountAtBlockIDResponse.prototype.hasAccount=function(){return null!=r.Message.getField(this,1)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.toObject=function(e){return proto.flow.execution.ExecuteScriptAtBlockIDRequest.toObject(e,this)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),script:t.getScript_asB64(),argumentsList:t.getArgumentsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.ExecuteScriptAtBlockIDRequest;return proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader(o,t)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readBytes();e.setScript(o);break;case 3:o=t.readBytes();e.addArguments(o);break;default:t.skipField()}}return e},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.ExecuteScriptAtBlockIDRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getScript_asU8()).length>0&&t.writeBytes(2,o),(o=e.getArgumentsList_asU8()).length>0&&t.writeRepeatedBytes(3,o)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript_asB64=function(){return r.Message.bytesAsB64(this.getScript())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getScript_asU8=function(){return r.Message.bytesAsU8(this.getScript())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setScript=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList=function(){return r.Message.getRepeatedField(this,3)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asB64=function(){return r.Message.bytesListAsB64(this.getArgumentsList())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.getArgumentsList_asU8=function(){return r.Message.bytesListAsU8(this.getArgumentsList())},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.setArgumentsList=function(e){return r.Message.setField(this,3,e||[])},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.addArguments=function(e,t){return r.Message.addToRepeatedField(this,3,e,t)},proto.flow.execution.ExecuteScriptAtBlockIDRequest.prototype.clearArgumentsList=function(){return this.setArgumentsList([])},r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.toObject=function(e){return proto.flow.execution.ExecuteScriptAtBlockIDResponse.toObject(e,this)},proto.flow.execution.ExecuteScriptAtBlockIDResponse.toObject=function(e,t){var o={value:t.getValue_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.ExecuteScriptAtBlockIDResponse;return proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinaryFromReader(o,t)},proto.flow.execution.ExecuteScriptAtBlockIDResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setValue(o);break;default:t.skipField()}}return e},proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.ExecuteScriptAtBlockIDResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.ExecuteScriptAtBlockIDResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getValue_asU8()).length>0&&t.writeBytes(1,o)},proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue_asB64=function(){return r.Message.bytesAsB64(this.getValue())},proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.getValue_asU8=function(){return r.Message.bytesAsU8(this.getValue())},proto.flow.execution.ExecuteScriptAtBlockIDResponse.prototype.setValue=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.execution.GetEventsForBlockIDsResponse.repeatedFields_=[1],r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetEventsForBlockIDsResponse.prototype.toObject=function(e){return proto.flow.execution.GetEventsForBlockIDsResponse.toObject(e,this)},proto.flow.execution.GetEventsForBlockIDsResponse.toObject=function(e,t){var o={resultsList:r.Message.toObjectList(t.getResultsList(),proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject,e)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetEventsForBlockIDsResponse;return proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetEventsForBlockIDsResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=new proto.flow.execution.GetEventsForBlockIDsResponse.Result;t.readMessage(o,proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader),e.addResults(o);break;default:t.skipField()}}return e},proto.flow.execution.GetEventsForBlockIDsResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetEventsForBlockIDsResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetEventsForBlockIDsResponse.serializeBinaryToWriter=function(e,t){var o;(o=e.getResultsList()).length>0&&t.writeRepeatedMessage(1,o,proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.toObject=function(e){return proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject(e,this)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),blockHeight:r.Message.getFieldWithDefault(t,2,0),eventsList:r.Message.toObjectList(t.getEventsList(),a.Event.toObject,e)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetEventsForBlockIDsResponse.Result;return proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readUint64();e.setBlockHeight(o);break;case 3:o=new a.Event;t.readMessage(o,a.Event.deserializeBinaryFromReader),e.addEvents(o);break;default:t.skipField()}}return e},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetEventsForBlockIDsResponse.Result.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),0!==(o=e.getBlockHeight())&&t.writeUint64(2,o),(o=e.getEventsList()).length>0&&t.writeRepeatedMessage(3,o,a.Event.serializeBinaryToWriter)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getBlockHeight=function(){return r.Message.getFieldWithDefault(this,2,0)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setBlockHeight=function(e){return r.Message.setProto3IntField(this,2,e)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.getEventsList=function(){return r.Message.getRepeatedWrapperField(this,a.Event,3)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.setEventsList=function(e){return r.Message.setRepeatedWrapperField(this,3,e)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.addEvents=function(e,t){return r.Message.addToRepeatedWrapperField(this,3,e,proto.flow.entities.Event,t)},proto.flow.execution.GetEventsForBlockIDsResponse.Result.prototype.clearEventsList=function(){return this.setEventsList([])},proto.flow.execution.GetEventsForBlockIDsResponse.prototype.getResultsList=function(){return r.Message.getRepeatedWrapperField(this,proto.flow.execution.GetEventsForBlockIDsResponse.Result,1)},proto.flow.execution.GetEventsForBlockIDsResponse.prototype.setResultsList=function(e){return r.Message.setRepeatedWrapperField(this,1,e)},proto.flow.execution.GetEventsForBlockIDsResponse.prototype.addResults=function(e,t){return r.Message.addToRepeatedWrapperField(this,1,e,proto.flow.execution.GetEventsForBlockIDsResponse.Result,t)},proto.flow.execution.GetEventsForBlockIDsResponse.prototype.clearResultsList=function(){return this.setResultsList([])},proto.flow.execution.GetEventsForBlockIDsRequest.repeatedFields_=[2],r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetEventsForBlockIDsRequest.prototype.toObject=function(e){return proto.flow.execution.GetEventsForBlockIDsRequest.toObject(e,this)},proto.flow.execution.GetEventsForBlockIDsRequest.toObject=function(e,t){var o={type:r.Message.getFieldWithDefault(t,1,\"\"),blockIdsList:t.getBlockIdsList_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetEventsForBlockIDsRequest;return proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetEventsForBlockIDsRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readString();e.setType(o);break;case 2:o=t.readBytes();e.addBlockIds(o);break;default:t.skipField()}}return e},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetEventsForBlockIDsRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetEventsForBlockIDsRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getType()).length>0&&t.writeString(1,o),(o=e.getBlockIdsList_asU8()).length>0&&t.writeRepeatedBytes(2,o)},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getType=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.setType=function(e){return r.Message.setProto3StringField(this,1,e)},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList=function(){return r.Message.getRepeatedField(this,2)},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asB64=function(){return r.Message.bytesListAsB64(this.getBlockIdsList())},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.getBlockIdsList_asU8=function(){return r.Message.bytesListAsU8(this.getBlockIdsList())},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.setBlockIdsList=function(e){return r.Message.setField(this,2,e||[])},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.addBlockIds=function(e,t){return r.Message.addToRepeatedField(this,2,e,t)},proto.flow.execution.GetEventsForBlockIDsRequest.prototype.clearBlockIdsList=function(){return this.setBlockIdsList([])},r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetTransactionResultRequest.prototype.toObject=function(e){return proto.flow.execution.GetTransactionResultRequest.toObject(e,this)},proto.flow.execution.GetTransactionResultRequest.toObject=function(e,t){var o={blockId:t.getBlockId_asB64(),transactionId:t.getTransactionId_asB64()};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetTransactionResultRequest.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetTransactionResultRequest;return proto.flow.execution.GetTransactionResultRequest.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetTransactionResultRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readBytes();e.setBlockId(o);break;case 2:o=t.readBytes();e.setTransactionId(o);break;default:t.skipField()}}return e},proto.flow.execution.GetTransactionResultRequest.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetTransactionResultRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetTransactionResultRequest.serializeBinaryToWriter=function(e,t){var o=void 0;(o=e.getBlockId_asU8()).length>0&&t.writeBytes(1,o),(o=e.getTransactionId_asU8()).length>0&&t.writeBytes(2,o)},proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId=function(){return r.Message.getFieldWithDefault(this,1,\"\")},proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId_asB64=function(){return r.Message.bytesAsB64(this.getBlockId())},proto.flow.execution.GetTransactionResultRequest.prototype.getBlockId_asU8=function(){return r.Message.bytesAsU8(this.getBlockId())},proto.flow.execution.GetTransactionResultRequest.prototype.setBlockId=function(e){return r.Message.setProto3BytesField(this,1,e)},proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId_asB64=function(){return r.Message.bytesAsB64(this.getTransactionId())},proto.flow.execution.GetTransactionResultRequest.prototype.getTransactionId_asU8=function(){return r.Message.bytesAsU8(this.getTransactionId())},proto.flow.execution.GetTransactionResultRequest.prototype.setTransactionId=function(e){return r.Message.setProto3BytesField(this,2,e)},proto.flow.execution.GetTransactionResultResponse.repeatedFields_=[3],r.Message.GENERATE_TO_OBJECT&&(proto.flow.execution.GetTransactionResultResponse.prototype.toObject=function(e){return proto.flow.execution.GetTransactionResultResponse.toObject(e,this)},proto.flow.execution.GetTransactionResultResponse.toObject=function(e,t){var o={statusCode:r.Message.getFieldWithDefault(t,1,0),errorMessage:r.Message.getFieldWithDefault(t,2,\"\"),eventsList:r.Message.toObjectList(t.getEventsList(),a.Event.toObject,e)};return e&&(o.$jspbMessageInstance=t),o}),proto.flow.execution.GetTransactionResultResponse.deserializeBinary=function(e){var t=new r.BinaryReader(e),o=new proto.flow.execution.GetTransactionResultResponse;return proto.flow.execution.GetTransactionResultResponse.deserializeBinaryFromReader(o,t)},proto.flow.execution.GetTransactionResultResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var o=t.readUint32();e.setStatusCode(o);break;case 2:o=t.readString();e.setErrorMessage(o);break;case 3:o=new a.Event;t.readMessage(o,a.Event.deserializeBinaryFromReader),e.addEvents(o);break;default:t.skipField()}}return e},proto.flow.execution.GetTransactionResultResponse.prototype.serializeBinary=function(){var e=new r.BinaryWriter;return proto.flow.execution.GetTransactionResultResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.flow.execution.GetTransactionResultResponse.serializeBinaryToWriter=function(e,t){var o=void 0;0!==(o=e.getStatusCode())&&t.writeUint32(1,o),(o=e.getErrorMessage()).length>0&&t.writeString(2,o),(o=e.getEventsList()).length>0&&t.writeRepeatedMessage(3,o,a.Event.serializeBinaryToWriter)},proto.flow.execution.GetTransactionResultResponse.prototype.getStatusCode=function(){return r.Message.getFieldWithDefault(this,1,0)},proto.flow.execution.GetTransactionResultResponse.prototype.setStatusCode=function(e){return r.Message.setProto3IntField(this,1,e)},proto.flow.execution.GetTransactionResultResponse.prototype.getErrorMessage=function(){return r.Message.getFieldWithDefault(this,2,\"\")},proto.flow.execution.GetTransactionResultResponse.prototype.setErrorMessage=function(e){return r.Message.setProto3StringField(this,2,e)},proto.flow.execution.GetTransactionResultResponse.prototype.getEventsList=function(){return r.Message.getRepeatedWrapperField(this,a.Event,3)},proto.flow.execution.GetTransactionResultResponse.prototype.setEventsList=function(e){return r.Message.setRepeatedWrapperField(this,3,e)},proto.flow.execution.GetTransactionResultResponse.prototype.addEvents=function(e,t){return r.Message.addToRepeatedWrapperField(this,3,e,proto.flow.entities.Event,t)},proto.flow.execution.GetTransactionResultResponse.prototype.clearEventsList=function(){return this.setEventsList([])},s.object.extend(t,proto.flow.execution)},function(e,t,o){var r=o(4),s=o(12).grpc,n=function(){function e(){}return e.serviceName=\"flow.access.AccessAPI\",e}();function i(e,t){this.serviceHost=e,this.options=t||{}}n.Ping={methodName:\"Ping\",service:n,requestStream:!1,responseStream:!1,requestType:r.PingRequest,responseType:r.PingResponse},n.GetLatestBlockHeader={methodName:\"GetLatestBlockHeader\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetLatestBlockHeaderRequest,responseType:r.BlockHeaderResponse},n.GetBlockHeaderByID={methodName:\"GetBlockHeaderByID\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetBlockHeaderByIDRequest,responseType:r.BlockHeaderResponse},n.GetBlockHeaderByHeight={methodName:\"GetBlockHeaderByHeight\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetBlockHeaderByHeightRequest,responseType:r.BlockHeaderResponse},n.GetLatestBlock={methodName:\"GetLatestBlock\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetLatestBlockRequest,responseType:r.BlockResponse},n.GetBlockByID={methodName:\"GetBlockByID\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetBlockByIDRequest,responseType:r.BlockResponse},n.GetBlockByHeight={methodName:\"GetBlockByHeight\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetBlockByHeightRequest,responseType:r.BlockResponse},n.GetCollectionByID={methodName:\"GetCollectionByID\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetCollectionByIDRequest,responseType:r.CollectionResponse},n.SendTransaction={methodName:\"SendTransaction\",service:n,requestStream:!1,responseStream:!1,requestType:r.SendTransactionRequest,responseType:r.SendTransactionResponse},n.GetTransaction={methodName:\"GetTransaction\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetTransactionRequest,responseType:r.TransactionResponse},n.GetTransactionResult={methodName:\"GetTransactionResult\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetTransactionRequest,responseType:r.TransactionResultResponse},n.GetAccount={methodName:\"GetAccount\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetAccountRequest,responseType:r.GetAccountResponse},n.GetAccountAtLatestBlock={methodName:\"GetAccountAtLatestBlock\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetAccountAtLatestBlockRequest,responseType:r.AccountResponse},n.GetAccountAtBlockHeight={methodName:\"GetAccountAtBlockHeight\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetAccountAtBlockHeightRequest,responseType:r.AccountResponse},n.ExecuteScriptAtLatestBlock={methodName:\"ExecuteScriptAtLatestBlock\",service:n,requestStream:!1,responseStream:!1,requestType:r.ExecuteScriptAtLatestBlockRequest,responseType:r.ExecuteScriptResponse},n.ExecuteScriptAtBlockID={methodName:\"ExecuteScriptAtBlockID\",service:n,requestStream:!1,responseStream:!1,requestType:r.ExecuteScriptAtBlockIDRequest,responseType:r.ExecuteScriptResponse},n.ExecuteScriptAtBlockHeight={methodName:\"ExecuteScriptAtBlockHeight\",service:n,requestStream:!1,responseStream:!1,requestType:r.ExecuteScriptAtBlockHeightRequest,responseType:r.ExecuteScriptResponse},n.GetEventsForHeightRange={methodName:\"GetEventsForHeightRange\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetEventsForHeightRangeRequest,responseType:r.EventsResponse},n.GetEventsForBlockIDs={methodName:\"GetEventsForBlockIDs\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetEventsForBlockIDsRequest,responseType:r.EventsResponse},n.GetNetworkParameters={methodName:\"GetNetworkParameters\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetNetworkParametersRequest,responseType:r.GetNetworkParametersResponse},t.AccessAPI=n,i.prototype.ping=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.Ping,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getLatestBlockHeader=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetLatestBlockHeader,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getBlockHeaderByID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetBlockHeaderByID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getBlockHeaderByHeight=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetBlockHeaderByHeight,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getLatestBlock=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetLatestBlock,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getBlockByID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetBlockByID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getBlockByHeight=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetBlockByHeight,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getCollectionByID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetCollectionByID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.sendTransaction=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.SendTransaction,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getTransaction=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetTransaction,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getTransactionResult=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetTransactionResult,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getAccount=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetAccount,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getAccountAtLatestBlock=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetAccountAtLatestBlock,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getAccountAtBlockHeight=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetAccountAtBlockHeight,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.executeScriptAtLatestBlock=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.ExecuteScriptAtLatestBlock,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.executeScriptAtBlockID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.ExecuteScriptAtBlockID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.executeScriptAtBlockHeight=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.ExecuteScriptAtBlockHeight,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getEventsForHeightRange=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetEventsForHeightRange,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getEventsForBlockIDs=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetEventsForBlockIDs,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getNetworkParameters=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetNetworkParameters,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},t.AccessAPIClient=i},function(e,t){!function(e,t){for(var o in t)e[o]=t[o]}(t,function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)o.d(r,s,function(t){return e[t]}.bind(null,s));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=11)}([function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(4);t.Metadata=r.BrowserHeaders},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=null;t.default=function(e){null===r?(r=[e],setTimeout((function(){!function e(){if(r){var t=r;r=null;for(var o=0;o<t.length;o++)try{t[o]()}catch(n){null===r&&(r=[],setTimeout((function(){e()}),0));for(var s=t.length-1;s>o;s--)r.unshift(t[s]);throw n}}}()}),0)):r.push(e)}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(0),s=o(9),n=o(10),i=o(1),a=o(2),g=o(5),l=o(15);t.client=function(e,t){return new c(e,t)};var c=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new s.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=g.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var o=u(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",o);var r=o&&o>=0?o:n.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",r);var s=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",s),this.rawOnHeaders(e),r!==n.Code.OK){var a=this.decodeGRPCStatus(s[0]);this.rawOnError(r,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var o=[];try{o=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(n.Code.Internal,\"parsing error: \"+e.message)}o.forEach((function(e){if(e.chunkType===s.ChunkType.MESSAGE){var o=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(o)}else e.chunkType===s.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new r.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new r.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=u(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),o=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,o,this.responseTrailers)}else this.rawOnError(n.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(n.Code.Unknown,\"Response closed without headers\");var r=u(this.responseHeaders),s=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",r,s),null===r)return void this.rawOnEnd(n.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(s[0]);this.rawOnEnd(r,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,o){var r=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,o),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(s){a.default((function(){r.closed||s(e,t,o)}))})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){a.default((function(){t(e)}))}))},e.prototype.rawOnError=function(e,t,o){var s=this;void 0===o&&(o=new r.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(r){a.default((function(){s.closed||r(e,t,o)}))})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(o){a.default((function(){t.closed||o(e)}))}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new r.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=l.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function u(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var o=t[0];return parseInt(o,10)}catch(e){return null}return null}},function(e,t,o){var r;r=function(){return function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=e,o.c=t,o.i=function(e){return e},o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=1)}([function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(3),s=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var o,s=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?r.getHeaderKeys(e).forEach((function(o){r.getHeaderValues(e,o).forEach((function(e){t.splitValues?s.append(o,r.splitHeaderValue(e)):s.append(o,e)}))})):\"object\"==typeof(o=e)&&\"object\"==typeof o.headersMap&&\"function\"==typeof o.forEach?e.forEach((function(e,t){s.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){s.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var o=e[t];Array.isArray(o)?o.forEach((function(e){s.append(t,e)})):s.append(t,o)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),o=0;o<t.length;o++){var r=t[o],s=r.indexOf(\":\");if(s>0){var n=r.substring(0,s).trim(),i=r.substring(s+1).trim();this.append(n,i)}}},e.prototype.delete=function(e,t){var o=r.normalizeName(e);if(void 0===t)delete this.headersMap[o];else{var s=this.headersMap[o];if(s){var n=s.indexOf(t);n>=0&&s.splice(n,1),0===s.length&&delete this.headersMap[o]}}},e.prototype.append=function(e,t){var o=this,s=r.normalizeName(e);Array.isArray(this.headersMap[s])||(this.headersMap[s]=[]),Array.isArray(t)?t.forEach((function(e){o.headersMap[s].push(r.normalizeValue(e))})):this.headersMap[s].push(r.normalizeValue(t))},e.prototype.set=function(e,t){var o=r.normalizeName(e);if(Array.isArray(t)){var s=[];t.forEach((function(e){s.push(r.normalizeValue(e))})),this.headersMap[o]=s}else this.headersMap[o]=[r.normalizeValue(t)]},e.prototype.has=function(e,t){var o=this.headersMap[r.normalizeName(e)];if(!Array.isArray(o))return!1;if(void 0!==t){var s=r.normalizeValue(t);return o.indexOf(s)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[r.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(o){e(o,t.headersMap[o])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,o){o.forEach((function(o){e.append(t,o)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=s},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(0);t.BrowserHeaders=r.BrowserHeaders},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var o=e[Symbol.iterator](),r=o.next();!r.done;)t(r.value[0]),r=o.next()},t.iterateHeadersKeys=function(e,t){for(var o=e.keys(),r=o.next();!r.done;)t(r.value),r=o.next()}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var o=e;if(o instanceof Headers&&o.getAll)return o.getAll(t);var r=o.get(t);return r&&\"string\"==typeof r?[r]:r},t.getHeaderKeys=function(e){var t=e,o={},s=[];return t.keys?r.iterateHeadersKeys(t,(function(e){o[e]||(o[e]=!0,s.push(e))})):t.forEach?t.forEach((function(e,t){o[t]||(o[t]=!0,s.push(t))})):r.iterateHeaders(t,(function(e){var t=e[0];o[t]||(o[t]=!0,s.push(t))})),s},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}])},e.exports=r()},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(6),s=function(e){return r.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){s=e},t.makeDefaultTransport=function(e){return s(e)}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(7),s=o(8);t.CrossBrowserHttpTransport=function(e){if(r.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return r.FetchReadableStreamTransport(t)}return s.XhrTransport({withCredentials:e.withCredentials})}},function(e,t,o){\"use strict\";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var s in t=arguments[o])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0});var s=o(0),n=o(1),i=o(2);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&n.debug(\"fetchRequest\",e),new a(e,t)}(t,e)}};var a=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var o=this;if(this.reader=e,this.cancelled)return this.options.debug&&n.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel();this.reader.read().then((function(e){if(e.done)return i.default((function(){o.options.onEnd()})),t;i.default((function(){o.options.onChunk(e.value)})),o.pump(o.reader,t)})).catch((function(e){o.cancelled?o.options.debug&&n.debug(\"Fetch.catch - request cancelled\"):(o.cancelled=!0,o.options.debug&&n.debug(\"Fetch.catch\",e.message),i.default((function(){o.options.onEnd(e)})))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,r({},this.init,{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&n.debug(\"Fetch.response\",e),i.default((function(){t.options.onHeaders(new s.Metadata(e.headers),e.status)})),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&n.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&n.debug(\"Fetch.catch\",e.message),i.default((function(){t.options.onEnd(e)})))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){this.cancelled?this.options.debug&&n.debug(\"Fetch.abort.cancel already cancelled\"):(this.cancelled=!0,this.reader?(this.options.debug&&n.debug(\"Fetch.abort.cancel\"),this.reader.cancel()):this.options.debug&&n.debug(\"Fetch.abort.cancel before reader\"),this.controller&&this.controller.abort())},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},function(e,t,o){\"use strict\";var r,s=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,\"__esModule\",{value:!0});var n=o(0),i=o(1),a=o(2),g=o(12);t.XhrTransport=function(e){return function(t){if(g.detectMozXHRSupport())return new c(t,e);if(g.detectXHROverrideMimeTypeSupport())return new l(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var l=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){var e=this;this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var t=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var o=p(t);a.default((function(){e.options.onChunk(o)}))},e.prototype.onLoadEvent=function(){var e=this;this.options.debug&&i.debug(\"XHR.onLoadEvent\"),a.default((function(){e.options.onEnd()}))},e.prototype.onStateChange=function(){var e=this;this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&a.default((function(){e.options.onHeaders(new n.Metadata(e.xhr.getAllResponseHeaders()),e.xhr.status)}))},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var o=new XMLHttpRequest;this.xhr=o,o.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){o.setRequestHeader(e,t.join(\", \"))})),o.withCredentials=Boolean(this.init.withCredentials),o.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),o.addEventListener(\"progress\",this.onProgressEvent.bind(this)),o.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),o.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),a.default((function(){t.options.onEnd(e.error)}))}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=l;var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return s(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this,t=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(t)),a.default((function(){e.options.onChunk(new Uint8Array(t))}))},t}(l);function u(e,t){var o=e.charCodeAt(t);if(o>=55296&&o<=56319){var r=e.charCodeAt(t+1);r>=56320&&r<=57343&&(o=65536+(o-55296<<10)+(r-56320))}return o}function p(e){for(var t=new Uint8Array(e.length),o=0,r=0;r<e.length;r++){var s=String.prototype.codePointAt?e.codePointAt(r):u(e,r);t[o++]=255&s}return t}t.MozChunkedArrayBufferXHR=c,t.stringToArrayBuffer=p},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,s=o(0);function n(e){return function(e){return 9===e||10===e||13===e}(e)||e>=32&&e<=126}function i(e){for(var t=0;t!==e.length;++t)if(!n(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function g(e){return e.getUint32(1,!1)}function l(e,t,o){return e.byteLength-t>=o}function c(e,t,o){if(e.slice)return e.slice(t,o);var r=e.length;void 0!==o&&(r=o);for(var s=new Uint8Array(r-t),n=0,i=t;i<r;i++)s[n++]=e[i];return s}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),o=0;o!==e.length;++o){var r=e.charCodeAt(o);if(!n(r))throw new Error(\"Metadata contains invalid ASCII\");t[o]=r}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(r=t.ChunkType||(t.ChunkType={}));var u=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var o,n=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var u=this.buffer.byteLength-this.position,p=new Uint8Array(u+e.byteLength),d=c(this.buffer,this.position);p.set(d,0);var f=new Uint8Array(e);p.set(f,u),this.buffer=p,this.position=0}for(;;){if(!l(this.buffer,this.position,5))return n;var h=c(this.buffer,this.position,this.position+5),y=new DataView(h.buffer,h.byteOffset,h.byteLength),b=g(y);if(!l(this.buffer,this.position,5+b))return n;var m=c(this.buffer,this.position+5,this.position+5+b);if(this.position+=5+b,a(y))return n.push({chunkType:r.TRAILERS,trailers:(o=m,new s.Metadata(i(o)))}),n;n.push({chunkType:r.MESSAGE,data:m})}},e}();t.ChunkParser=u},function(e,t,o){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(4),s=o(5),n=o(7),i=o(13),a=o(8),g=o(6),l=o(10),c=o(14),u=o(16),p=o(3);!function(e){e.setDefaultTransport=s.setDefaultTransportFactory,e.CrossBrowserHttpTransport=g.CrossBrowserHttpTransport,e.FetchReadableStreamTransport=n.FetchReadableStreamTransport,e.XhrTransport=a.XhrTransport,e.WebsocketTransport=i.WebsocketTransport,e.Code=l.Code,e.Metadata=r.BrowserHeaders,e.client=function(e,t){return p.client(e,t)},e.invoke=c.invoke,e.unary=u.unary}(t.grpc||(t.grpc={}))},function(e,t,o){\"use strict\";var r;function s(e){var t=function(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.xhrSupportsResponseType=s,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&s(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,s=o(1),n=o(2),i=o(9);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(r||(r={}));var a=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&s.debug(\"websocketRequest\",e);var t,o=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),g=[];function l(e){if(e===r.FINISH_SEND)t.send(a);else{var o=e,s=new Int8Array(o.byteLength+1);s.set(new Uint8Array([0])),s.set(o,1),t.send(s)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?l(e):g.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?l(r.FINISH_SEND):g.push(r.FINISH_SEND)},start:function(r){(t=new WebSocket(o,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var o;e.debug&&s.debug(\"websocketRequest.onopen\"),t.send((o=\"\",r.forEach((function(e,t){o+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),i.encodeASCII(o))),g.forEach((function(e){l(e)}))},t.onclose=function(t){e.debug&&s.debug(\"websocketRequest.onclose\",t),n.default((function(){e.onEnd()}))},t.onerror=function(t){e.debug&&s.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){n.default((function(){e.onChunk(new Uint8Array(t.data))}))}},cancel:function(){e.debug&&s.debug(\"websocket.abort\"),n.default((function(){t.close()}))}}}(e)}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(3);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var o=r.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&o.onHeaders(t.onHeaders),t.onMessage&&o.onMessage(t.onMessage),t.onEnd&&o.onEnd(t.onEnd),o.start(t.metadata),o.send(t.request),o.finishSend(),{close:function(){o.close()}}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=function(e){var t=e.serializeBinary(),o=new ArrayBuffer(t.byteLength+5);return new DataView(o,1,4).setUint32(0,t.length,!1),new Uint8Array(o,5).set(t),new Uint8Array(o)}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(0),s=o(3);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var o=null,n=null,i=s.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){o=e})),i.onMessage((function(e){n=e})),i.onEnd((function(e,s,i){t.onEnd({status:e,statusMessage:s,headers:o||new r.Metadata,message:n,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}}]))},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,o){var r=o(10),s=o(12).grpc,n=function(){function e(){}return e.serviceName=\"flow.execution.ExecutionAPI\",e}();function i(e,t){this.serviceHost=e,this.options=t||{}}n.Ping={methodName:\"Ping\",service:n,requestStream:!1,responseStream:!1,requestType:r.PingRequest,responseType:r.PingResponse},n.GetAccountAtBlockID={methodName:\"GetAccountAtBlockID\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetAccountAtBlockIDRequest,responseType:r.GetAccountAtBlockIDResponse},n.ExecuteScriptAtBlockID={methodName:\"ExecuteScriptAtBlockID\",service:n,requestStream:!1,responseStream:!1,requestType:r.ExecuteScriptAtBlockIDRequest,responseType:r.ExecuteScriptAtBlockIDResponse},n.GetEventsForBlockIDs={methodName:\"GetEventsForBlockIDs\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetEventsForBlockIDsRequest,responseType:r.GetEventsForBlockIDsResponse},n.GetTransactionResult={methodName:\"GetTransactionResult\",service:n,requestStream:!1,responseStream:!1,requestType:r.GetTransactionResultRequest,responseType:r.GetTransactionResultResponse},t.ExecutionAPI=n,i.prototype.ping=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.Ping,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getAccountAtBlockID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetAccountAtBlockID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.executeScriptAtBlockID=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.ExecuteScriptAtBlockID,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getEventsForBlockIDs=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetEventsForBlockIDs,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},i.prototype.getTransactionResult=function(e,t,o){2===arguments.length&&(o=arguments[1]);var r=s.unary(n.GetTransactionResult,{request:e,host:this.serviceHost,metadata:t,transport:this.options.transport,debug:this.options.debug,onEnd:function(e){if(o)if(e.status!==s.Code.OK){var t=new Error(e.statusMessage);t.code=e.status,t.metadata=e.trailers,o(t,null)}else o(null,e.message)}});return{cancel:function(){o=null,r.close()}}},t.ExecutionAPIClient=i},function(e,t,o){\"use strict\";o.r(t);var r=o(11);for(var s in r)\"default\"!==s&&function(e){o.d(t,e,(function(){return r[e]}))}(s);var n=o(4);for(var s in n)\"default\"!==s&&function(e){o.d(t,e,(function(){return n[e]}))}(s);var i=o(13);for(var s in i)\"default\"!==s&&function(e){o.d(t,e,(function(){return i[e]}))}(s);var a=o(1);for(var s in a)\"default\"!==s&&function(e){o.d(t,e,(function(){return a[e]}))}(s);var g=o(14);for(var s in g)\"default\"!==s&&function(e){o.d(t,e,(function(){return g[e]}))}(s);var l=o(5);for(var s in l)\"default\"!==s&&function(e){o.d(t,e,(function(){return l[e]}))}(s);var c=o(15);for(var s in c)\"default\"!==s&&function(e){o.d(t,e,(function(){return c[e]}))}(s);var u=o(7);for(var s in u)\"default\"!==s&&function(e){o.d(t,e,(function(){return u[e]}))}(s);var p=o(16);for(var s in p)\"default\"!==s&&function(e){o.d(t,e,(function(){return p[e]}))}(s);var d=o(8);for(var s in d)\"default\"!==s&&function(e){o.d(t,e,(function(){return d[e]}))}(s);var f=o(17);for(var s in f)\"default\"!==s&&function(e){o.d(t,e,(function(){return f[e]}))}(s);var h=o(2);for(var s in h)\"default\"!==s&&function(e){o.d(t,e,(function(){return h[e]}))}(s);var y=o(18);for(var s in y)\"default\"!==s&&function(e){o.d(t,e,(function(){return y[e]}))}(s);var b=o(3);for(var s in b)\"default\"!==s&&function(e){o.d(t,e,(function(){return b[e]}))}(s);var m=o(19);for(var s in m)\"default\"!==s&&function(e){o.d(t,e,(function(){return m[e]}))}(s);var _=o(9);for(var s in _)\"default\"!==s&&function(e){o.d(t,e,(function(){return _[e]}))}(s);var E=o(20);for(var s in E)\"default\"!==s&&function(e){o.d(t,e,(function(){return E[e]}))}(s);var S=o(10);for(var s in S)\"default\"!==s&&function(e){o.d(t,e,(function(){return S[e]}))}(s)}]);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/protobuf/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@onflow/rlp/dist/rlp.module.js":
/*!*****************************************************!*\
  !*** ./node_modules/@onflow/rlp/dist/rlp.module.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ r),\n/* harmony export */   \"getLength\": () => (/* binding */ n),\n/* harmony export */   \"toBuffer\": () => (/* binding */ u)\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nfunction r(n){if(Array.isArray(n)){for(var f=[],t=0;t<n.length;t++)f.push(r(n[t]));var i=Buffer.concat(f);return Buffer.concat([e(i.length,192),i])}var o=u(n);return 1===o.length&&o[0]<128?o:Buffer.concat([e(o.length,128),o])}function e(r,e){if(r<56)return Buffer.from([r+e]);var n=t(r),f=t(e+55+n.length/2);return Buffer.from(f+n,\"hex\")}function n(r){if(!r||0===r.length)return Buffer.from([]);var e=u(r),n=e[0];if(n<=127)return e.length;if(n<=183)return n-127;if(n<=191)return n-182;if(n<=247)return n-191;var f=n-246;return f+function(r,e){if(\"00\"===r.slice(0,2))throw new Error(\"invalid RLP: extra zeros\");return parseInt(r,16)}(e.slice(1,f).toString(\"hex\"))}function f(r){return\"0x\"===r.slice(0,2)}function t(r){if(r<0)throw new Error(\"Invalid integer as argument, must be unsigned!\");var e=r.toString(16);return e.length%2?\"0\"+e:e}function u(r){if(!Buffer.isBuffer(r)){if(\"string\"==typeof r)return f(r)?Buffer.from((n=\"string\"!=typeof(u=r)?u:f(u)?u.slice(2):u).length%2?\"0\"+n:n,\"hex\"):Buffer.from(r);if(\"number\"==typeof r)return r?(e=t(r),Buffer.from(e,\"hex\")):Buffer.from([]);if(null==r)return Buffer.from([]);if(r instanceof Uint8Array)return Buffer.from(r);throw new Error(\"invalid type\")}var e,n,u;return r}\n//# sourceMappingURL=rlp.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9uZmxvdy9ybHAvZGlzdC9ybHAubW9kdWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvQG9uZmxvdy9ybHAvZGlzdC9ybHAubW9kdWxlLmpzP2ViZjciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcihuKXtpZihBcnJheS5pc0FycmF5KG4pKXtmb3IodmFyIGY9W10sdD0wO3Q8bi5sZW5ndGg7dCsrKWYucHVzaChyKG5bdF0pKTt2YXIgaT1CdWZmZXIuY29uY2F0KGYpO3JldHVybiBCdWZmZXIuY29uY2F0KFtlKGkubGVuZ3RoLDE5MiksaV0pfXZhciBvPXUobik7cmV0dXJuIDE9PT1vLmxlbmd0aCYmb1swXTwxMjg/bzpCdWZmZXIuY29uY2F0KFtlKG8ubGVuZ3RoLDEyOCksb10pfWZ1bmN0aW9uIGUocixlKXtpZihyPDU2KXJldHVybiBCdWZmZXIuZnJvbShbcitlXSk7dmFyIG49dChyKSxmPXQoZSs1NStuLmxlbmd0aC8yKTtyZXR1cm4gQnVmZmVyLmZyb20oZituLFwiaGV4XCIpfWZ1bmN0aW9uIG4ocil7aWYoIXJ8fDA9PT1yLmxlbmd0aClyZXR1cm4gQnVmZmVyLmZyb20oW10pO3ZhciBlPXUociksbj1lWzBdO2lmKG48PTEyNylyZXR1cm4gZS5sZW5ndGg7aWYobjw9MTgzKXJldHVybiBuLTEyNztpZihuPD0xOTEpcmV0dXJuIG4tMTgyO2lmKG48PTI0NylyZXR1cm4gbi0xOTE7dmFyIGY9bi0yNDY7cmV0dXJuIGYrZnVuY3Rpb24ocixlKXtpZihcIjAwXCI9PT1yLnNsaWNlKDAsMikpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBSTFA6IGV4dHJhIHplcm9zXCIpO3JldHVybiBwYXJzZUludChyLDE2KX0oZS5zbGljZSgxLGYpLnRvU3RyaW5nKFwiaGV4XCIpKX1mdW5jdGlvbiBmKHIpe3JldHVyblwiMHhcIj09PXIuc2xpY2UoMCwyKX1mdW5jdGlvbiB0KHIpe2lmKHI8MCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGludGVnZXIgYXMgYXJndW1lbnQsIG11c3QgYmUgdW5zaWduZWQhXCIpO3ZhciBlPXIudG9TdHJpbmcoMTYpO3JldHVybiBlLmxlbmd0aCUyP1wiMFwiK2U6ZX1mdW5jdGlvbiB1KHIpe2lmKCFCdWZmZXIuaXNCdWZmZXIocikpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByKXJldHVybiBmKHIpP0J1ZmZlci5mcm9tKChuPVwic3RyaW5nXCIhPXR5cGVvZih1PXIpP3U6Zih1KT91LnNsaWNlKDIpOnUpLmxlbmd0aCUyP1wiMFwiK246bixcImhleFwiKTpCdWZmZXIuZnJvbShyKTtpZihcIm51bWJlclwiPT10eXBlb2YgcilyZXR1cm4gcj8oZT10KHIpLEJ1ZmZlci5mcm9tKGUsXCJoZXhcIikpOkJ1ZmZlci5mcm9tKFtdKTtpZihudWxsPT1yKXJldHVybiBCdWZmZXIuZnJvbShbXSk7aWYociBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpcmV0dXJuIEJ1ZmZlci5mcm9tKHIpO3Rocm93IG5ldyBFcnJvcihcImludmFsaWQgdHlwZVwiKX12YXIgZSxuLHU7cmV0dXJuIHJ9ZXhwb3J0e3IgYXMgZW5jb2RlLG4gYXMgZ2V0TGVuZ3RoLHUgYXMgdG9CdWZmZXJ9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmxwLm1vZHVsZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@onflow/rlp/dist/rlp.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/sdk/dist/sdk.module.js":
/*!*****************************************************!*\
  !*** ./node_modules/@onflow/sdk/dist/sdk.module.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cadence\": () => (/* reexport safe */ _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template),\n/* harmony export */   \"cdc\": () => (/* reexport safe */ _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template),\n/* harmony export */   \"TestUtils\": () => (/* binding */ hr),\n/* harmony export */   \"VERSION\": () => (/* binding */ vr),\n/* harmony export */   \"account\": () => (/* binding */ Ut),\n/* harmony export */   \"arg\": () => (/* binding */ nr),\n/* harmony export */   \"args\": () => (/* binding */ er),\n/* harmony export */   \"atBlockHeight\": () => (/* binding */ Ft),\n/* harmony export */   \"atBlockId\": () => (/* binding */ Ht),\n/* harmony export */   \"authorization\": () => (/* binding */ Dt),\n/* harmony export */   \"authorizations\": () => (/* binding */ Rt),\n/* harmony export */   \"build\": () => (/* binding */ Ce),\n/* harmony export */   \"config\": () => (/* binding */ Ze),\n/* harmony export */   \"createSignableVoucher\": () => (/* binding */ yt),\n/* harmony export */   \"decode\": () => (/* binding */ _t),\n/* harmony export */   \"destroy\": () => (/* binding */ Ge),\n/* harmony export */   \"encodeMessageFromSignable\": () => (/* binding */ Gt),\n/* harmony export */   \"get\": () => (/* binding */ Oe),\n/* harmony export */   \"getAccount\": () => (/* binding */ wn),\n/* harmony export */   \"getBlock\": () => (/* binding */ Sn),\n/* harmony export */   \"getBlockByHeight\": () => (/* binding */ Vt),\n/* harmony export */   \"getBlockById\": () => (/* binding */ Yt),\n/* harmony export */   \"getBlockHeader\": () => (/* binding */ Jt),\n/* harmony export */   \"getCollection\": () => (/* binding */ $t),\n/* harmony export */   \"getEvents\": () => (/* binding */ zt),\n/* harmony export */   \"getEventsAtBlockHeightRange\": () => (/* binding */ qt),\n/* harmony export */   \"getEventsAtBlockIds\": () => (/* binding */ Mt),\n/* harmony export */   \"getLatestBlock\": () => (/* binding */ Wt),\n/* harmony export */   \"getTransaction\": () => (/* binding */ Zt),\n/* harmony export */   \"getTransactionStatus\": () => (/* binding */ Xt),\n/* harmony export */   \"interaction\": () => (/* binding */ F),\n/* harmony export */   \"invariant\": () => (/* binding */ sr),\n/* harmony export */   \"isBad\": () => (/* binding */ Ee),\n/* harmony export */   \"isGetAccount\": () => (/* binding */ ve),\n/* harmony export */   \"isGetBlock\": () => (/* binding */ Se),\n/* harmony export */   \"isGetBlockByHeight\": () => (/* binding */ Ie),\n/* harmony export */   \"isGetBlockById\": () => (/* binding */ be),\n/* harmony export */   \"isGetBlockHeader\": () => (/* binding */ we),\n/* harmony export */   \"isGetCollection\": () => (/* binding */ Be),\n/* harmony export */   \"isGetEvents\": () => (/* binding */ ye),\n/* harmony export */   \"isGetLatestBlock\": () => (/* binding */ ke),\n/* harmony export */   \"isGetTransaction\": () => (/* binding */ he),\n/* harmony export */   \"isGetTransactionStatus\": () => (/* binding */ ge),\n/* harmony export */   \"isOk\": () => (/* binding */ Ae),\n/* harmony export */   \"isPing\": () => (/* binding */ Pe),\n/* harmony export */   \"isScript\": () => (/* binding */ me),\n/* harmony export */   \"isTransaction\": () => (/* binding */ pe),\n/* harmony export */   \"isUnknown\": () => (/* binding */ de),\n/* harmony export */   \"latestBlock\": () => (/* binding */ Ct),\n/* harmony export */   \"limit\": () => (/* binding */ Qt),\n/* harmony export */   \"param\": () => (/* binding */ kr),\n/* harmony export */   \"params\": () => (/* binding */ yr),\n/* harmony export */   \"payer\": () => (/* binding */ rr),\n/* harmony export */   \"ping\": () => (/* binding */ or),\n/* harmony export */   \"pipe\": () => (/* binding */ Ne),\n/* harmony export */   \"proposer\": () => (/* binding */ tr),\n/* harmony export */   \"put\": () => (/* binding */ _e),\n/* harmony export */   \"ref\": () => (/* binding */ ur),\n/* harmony export */   \"resolve\": () => (/* binding */ xt),\n/* harmony export */   \"resolveAccounts\": () => (/* binding */ wt),\n/* harmony export */   \"resolveArguments\": () => (/* binding */ Un),\n/* harmony export */   \"resolveCadence\": () => (/* binding */ Ln),\n/* harmony export */   \"resolveFinalNormalization\": () => (/* binding */ Tt),\n/* harmony export */   \"resolveProposerSequenceNumber\": () => (/* binding */ lr),\n/* harmony export */   \"resolveRefBlockId\": () => (/* binding */ _n),\n/* harmony export */   \"resolveSignatures\": () => (/* binding */ pt),\n/* harmony export */   \"resolveValidators\": () => (/* binding */ Et),\n/* harmony export */   \"script\": () => (/* binding */ ir),\n/* harmony export */   \"send\": () => (/* binding */ Ot),\n/* harmony export */   \"transaction\": () => (/* binding */ cr),\n/* harmony export */   \"update\": () => (/* binding */ Le),\n/* harmony export */   \"validator\": () => (/* binding */ Kt),\n/* harmony export */   \"why\": () => (/* binding */ Te)\n/* harmony export */ });\n/* harmony import */ var _onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @onflow/util-invariant */ \"./node_modules/@onflow/util-invariant/dist/util-invariant.module.js\");\n/* harmony import */ var _onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @onflow/util-actor */ \"./node_modules/@onflow/util-actor/dist/actor.module.js\");\n/* harmony import */ var _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @onflow/protobuf */ \"./node_modules/@onflow/protobuf/dist/index.js\");\n/* harmony import */ var _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _onflow_util_address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/util-address */ \"./node_modules/@onflow/util-address/dist/util-address.module.js\");\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @improbable-eng/grpc-web */ \"./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js\");\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _improbable_eng_grpc_web_node_http_transport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @improbable-eng/grpc-web-node-http-transport */ \"./node_modules/@improbable-eng/grpc-web-node-http-transport/lib/index.js\");\n/* harmony import */ var _onflow_rlp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @onflow/rlp */ \"./node_modules/@onflow/rlp/dist/rlp.module.js\");\n/* harmony import */ var _onflow_util_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @onflow/util-template */ \"./node_modules/@onflow/util-template/dist/template.module.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nfunction x(){return(x=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _(e,n){return(_=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function L(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function G(e,n,t){return(G=L()?Reflect.construct:function(e,n,t){var r=[null];r.push.apply(r,n);var o=new(Function.bind.apply(e,r));return t&&_(o,t.prototype),o}).apply(null,arguments)}function C(e){var n=\"function\"==typeof Map?new Map:void 0;return(C=function(e){if(null===e||-1===Function.toString.call(e).indexOf(\"[native code]\"))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return G(e,arguments,O(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_(t,e)})(e)}function U(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var R,D='{\\n  \"tag\":\"UNKNOWN\",\\n  \"assigns\":{},\\n  \"status\":\"OK\",\\n  \"reason\":null,\\n  \"accounts\":{},\\n  \"params\":{},\\n  \"arguments\":{},\\n  \"message\": {\\n    \"cadence\":null,\\n    \"refBlock\":null,\\n    \"computeLimit\":null,\\n    \"proposer\":null,\\n    \"payer\":null,\\n    \"authorizations\":[],\\n    \"params\":[],\\n    \"arguments\":[]\\n  },\\n  \"proposer\":null,\\n  \"authorizations\":[],\\n  \"payer\":null,\\n  \"events\": {\\n    \"eventType\":null,\\n    \"start\":null,\\n    \"end\":null,\\n    \"blockIds\":[]\\n  },\\n  \"transaction\": {\\n    \"id\":null\\n  },\\n  \"block\": {\\n    \"id\":null,\\n    \"height\":null,\\n    \"isSealed\":null\\n  },\\n  \"account\": {\\n    \"addr\":null\\n  },\\n  \"collection\": {\\n    \"id\":null\\n  }\\n}',K=new Set(Object.keys(JSON.parse(D))),F=function(){return JSON.parse(D)},H=\"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),z=function(){return H[~~(Math.random()*H.length)]},q=function(){return Array.from({length:10},z).join(\"\")},M=function(e){return Array.isArray(e)},J=function(e){return null==e},W=function(e){return e.status=\"OK\",e},Y=function(e,n){return e.status=\"BAD\",e.reason=n,e},V=function(e){return function(n){return n.tag=e,W(n)}},$=function(n,t){return void 0===t&&(t={}),function(r){var o;(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\"function\"==typeof n||\"object\"==typeof n,\"prepAccount must be passed an authorization function or an account object\"),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(null!=t.role,\"Account must have a role\");var u=JSON.parse('{\\n  \"kind\":\"ACCOUNT\",\\n  \"tempId\":null,\\n  \"addr\":null,\\n  \"keyId\":null,\\n  \"sequenceNum\":null,\\n  \"signature\":null,\\n  \"signingFunction\":null,\\n  \"resolve\":null,\\n  \"role\": {\\n    \"proposer\":false,\\n    \"authorizer\":false,\\n    \"payer\":false,\\n    \"param\":false\\n  }\\n}'),i=t.role,a=q();return r.accounts[a]=x({},u,{tempId:a},n=\"function\"==typeof n?{resolve:n}:n,{role:x({},u.role,\"object\"==typeof n.role?n.role:{},(o={},o[i]=!0,o))}),\"authorizer\"===i?r.authorizations.push(a):r[i]=a,r}},X=function(e){return function(n){var t=q();return n.message.arguments.push(t),n.arguments[t]=JSON.parse('{\\n  \"kind\":\"ARGUMENT\",\\n  \"tempId\":null,\\n  \"value\":null,\\n  \"asArgument\":null,\\n  \"xform\":null,\\n  \"resolve\": null\\n}'),n.arguments[t].tempId=t,n.arguments[t].value=e.value,n.arguments[t].asArgument=e.asArgument,n.arguments[t].xform=e.xform,n.arguments[t].resolve=e.resolve,W(n)}},Z=V(\"SCRIPT\"),Q=V(\"TRANSACTION\"),ee=V(\"GET_TRANSACTION_STATUS\"),ne=V(\"GET_TRANSACTION\"),te=V(\"GET_ACCOUNT\"),re=V(\"GET_EVENTS\"),oe=V(\"GET_LATEST_BLOCK\"),ue=V(\"GET_BLOCK_BY_ID\"),ie=V(\"GET_BLOCK_BY_HEIGHT\"),ae=V(\"PING\"),ce=V(\"GET_BLOCK\"),se=V(\"GET_BLOCK_HEADER\"),le=V(\"GET_COLLECTION\"),fe=function(e){return function(n){return n.tag===e}},de=fe(\"UNKNOWN\"),me=fe(\"SCRIPT\"),pe=fe(\"TRANSACTION\"),ge=fe(\"GET_TRANSACTION_STATUS\"),he=fe(\"GET_TRANSACTION\"),ve=fe(\"GET_ACCOUNT\"),ye=fe(\"GET_EVENTS\"),ke=fe(\"GET_LATEST_BLOCK\"),be=fe(\"GET_BLOCK_BY_ID\"),Ie=fe(\"GET_BLOCK_BY_HEIGHT\"),Pe=fe(\"PING\"),Se=fe(\"GET_BLOCK\"),we=fe(\"GET_BLOCK_HEADER\"),Be=fe(\"GET_COLLECTION\"),Ae=function(e){return\"OK\"===e.status},Ee=function(e){return\"BAD\"===e.status},Te=function(e){return e.reason},je=function e(n,t){void 0===t&&(t=[]);try{return Promise.resolve(function(r,o){try{var u=Promise.resolve(n).then(function(r){if(n=function(e){for(var n=0,t=Object.keys(e);n<t.length;n++){var r=t[n];if(!K.has(r))throw new Error('\"'+r+'\" is an invalid root level Interaction property.')}return e}(r),Ee(n))throw new Error(\"Interaction Error: \"+n.reason);if(!t.length)return n;var o=t[0],u=t.slice(1);return Promise.resolve(o).then(function(t){if(\"function\"==typeof t)return e(t(n),u);if(J(t)||!t)return e(n,u);if(function(e){if(null===(n=e)||\"object\"!=typeof n||J(e)||function(e){return\"number\"==typeof e}(e))return!1;for(var n,t,r=function(e,n){var t=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,n){if(e){if(\"string\"==typeof e)return U(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===t&&e.constructor&&(t=e.constructor.name),\"Map\"===t||\"Set\"===t?Array.from(e):\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?U(e,n):void 0}}(e))){t&&(e=t);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}(K);!(t=r()).done;)if(!e.hasOwnProperty(t.value))return!1;return!0}(t))return e(t,u);throw new Error(\"Invalid Interaction Composition\")})})}catch(e){return o(e)}return u&&u.then?u.then(void 0,o):u}(0,function(e){throw e}))}catch(e){return Promise.reject(e)}},Ne=function e(){var n=[].slice.call(arguments),t=n[0],r=n[1];return M(t)&&null==r?function(n){return e(n,t)}:je(t,r)},xe=function(e){return e},Oe=function(e,n,t){return null==e.assigns[n]?t:e.assigns[n]},_e=function(e,n){return function(t){return t.assigns[e]=n,W(t)}},Le=function(e,n){return void 0===n&&(n=xe),function(t){return t.assigns[e]=n(t.assigns[e],t),W(t)}},Ge=function(e){return function(n){return delete n.assigns[e],W(n)}};function Ce(e){return void 0===e&&(e=[]),Ne(F(),e)}var Ue=function e(n,t){void 0===n&&(n=[]);try{if(!n.length)return Promise.resolve(t);var r=n[0],o=n.slice(1);return Promise.resolve(Me(r)).then(function(n){return null==n?e(o,t):n})}catch(e){return Promise.reject(e)}},Re=\"config\",De=\"PUT_CONFIG\",Ke=\"GET_CONFIG\",Fe=\"CONFIG/UPDATED\",He=function(e){return e},ze=((R={})[De]=function(e,n,t){var r=t.key,o=t.value;if(null==r)throw new Error(\"Missing 'key' for config/put.\");e.put(r,o),e.broadcast(Fe,x({},e.all()))},R[Ke]=function(e,n,t){var r=t.key,o=t.fallback;if(null==r)throw new Error(\"Missing 'key' for config/get\");n.reply(e.get(r,o))},R.GET_ALL_CONFIG=function(e,n){n.reply(x({},e.all()))},R.UPDATE_CONFIG=function(e,n,t){var r=t.key,o=t.fn;if(null==r)throw new Error(\"Missing 'key' for config/update\");e.update(r,o||He),e.broadcast(Fe,x({},e.all()))},R.DELETE_CONFIG=function(e,n,t){var r=t.key;if(null==r)throw new Error(\"Missing 'key' for config/delete\");e.delete(r),e.broadcast(Fe,x({},e.all()))},R.CLEAR_CONFIG=function(e,n){for(var t=0,r=Object.keys(e.all());t<r.length;t++)e.delete(r[t]);e.broadcast(Fe,x({},e.all()))},R.WHERE_CONFIG=function(e,n,t){var r=t.pattern;if(null==r)throw new Error(\"Missing 'pattern' for config/where\");n.reply(e.where(r))},R[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.SUBSCRIBE]=function(e,n){e.subscribe(n.from),e.send(n.from,Fe,x({},e.all()))},R[_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.UNSUBSCRIBE]=function(e,n){e.unsubscribe(n.from)},R);function qe(e,n){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,De,{key:e,value:n}),Ze()}function Me(e,n){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,Ke,{key:e,fallback:n},{expectReply:!0,timeout:10})}function Je(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,\"GET_ALL_CONFIG\",null,{expectReply:!0,timeout:10})}function We(e,n){return void 0===n&&(n=He),(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,\"UPDATE_CONFIG\",{key:e,fn:n}),Ze()}function Ye(e){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,\"DELETE_CONFIG\",{key:e}),Ze()}function Ve(e){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,\"WHERE_CONFIG\",{pattern:e},{expectReply:!0,timeout:10})}function $e(e){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.subscriber)(Re,function(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.spawn)(ze,Re)},e)}function Xe(){return (0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.send)(Re,\"CLEAR_CONFIG\")}function Ze(e){return null!=e&&\"object\"==typeof e&&Object.keys(e).map(function(n){return qe(n,e[n])}),{put:qe,get:Me,all:Je,first:Ue,update:We,delete:Ye,where:Ve,subscribe:$e,overload:en}}(0,_onflow_util_actor__WEBPACK_IMPORTED_MODULE_1__.spawn)(ze,Re),Ze.put=qe,Ze.get=Me,Ze.all=Je,Ze.first=Ue,Ze.update=We,Ze.delete=Ye,Ze.where=Ve,Ze.subscribe=$e,Ze.overload=en;var Qe=function(e){return e};function en(e,n){return void 0===e&&(e={}),void 0===n&&(n=Qe),new Promise(function(t,r){try{return Promise.resolve(Je()).then(function(o){var u=function(r,u){try{var i=function(){Ze(e);var r=n;return Promise.resolve(Je()).then(function(e){return Promise.resolve(r(e)).then(function(e){return Promise.resolve(Xe()).then(function(){return Promise.resolve(Ze(o)).then(function(){t(e)})})})})}()}catch(e){return u(e)}return i&&i.then?i.then(void 0,u):i}(0,function(e){return Promise.resolve(Xe()).then(function(){return Promise.resolve(Ze(o)).then(function(){r(e)})})});if(u&&u.then)return u.then(function(){})})}catch(e){return Promise.reject(e)}})}var nn=function(){return JSON.parse('{\\n    \"tag\":null,\\n    \"transaction\":null,\\n    \"transactionStatus\":null,\\n    \"transactionId\":null,\\n    \"encodedData\":null,\\n    \"events\":null,\\n    \"account\":null,\\n    \"block\":null,\\n    \"blockHeader\":null,\\n    \"latestBlock\":null,\\n    \"collection\":null\\n}')},tn=function(e,n,t){try{return Promise.resolve(Ze().get(\"grpc.metadata\",{})).then(function(r){return new Promise(function(o,u){_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__.grpc.unary(n,{request:t,host:e,metadata:new _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__.grpc.Metadata(r),onEnd:function(e){var n=e.statusMessage;e.status===_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__.grpc.Code.OK?o(e.message):u(new Error(n))}})})})}catch(e){return Promise.reject(e)}};_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_4__.grpc.setDefaultTransport((0,_improbable_eng_grpc_web_node_http_transport__WEBPACK_IMPORTED_MODULE_5__.NodeHttpTransport)());var rn=function(e){return Buffer.from(e,\"hex\")},on=function(e){return Buffer.from(e.padStart(16,0),\"hex\")},un=function(e){return Buffer.from(e).toString(\"hex\")},an=function(e){return Buffer.from(JSON.stringify(e),\"utf8\")};function cn(e,n){var t=nn();return t.tag=e.tag,t.encodedData=JSON.parse(Buffer.from(n.getValue_asU8()).toString(\"utf8\")),t}var sn=function(e){return Buffer.from(e).toString(\"hex\")},ln=function(e){return Buffer.from(e.padStart(16,0),\"hex\")};function fn(e,n){var t=nn();t.tag=e.tag;var r,o=n.getAccount(),u=(r=o.getContractsMap())?r.getEntryList().reduce(function(e,n){var t;return x({},e,((t={})[n[0]]=Buffer.from(n[1]||new UInt8Array).toString(\"utf8\"),t))},{}):{};return t.account={address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(sn(o.getAddress_asU8())),balance:o.getBalance(),code:Buffer.from(o.getCode_asU8()||new UInt8Array).toString(\"utf8\"),contracts:u,keys:o.getKeysList().map(function(e){return{index:e.getIndex(),publicKey:sn(e.getPublicKey_asU8()),signAlgo:e.getSignAlgo(),hashAlgo:e.getHashAlgo(),weight:e.getWeight(),sequenceNumber:e.getSequenceNumber(),revoked:e.getRevoked()}})},t}var dn=function(e){return Buffer.from(e).toString(\"hex\")};function mn(e,n){var t=nn();t.tag=e.tag;var r=n.getResultsList();return t.events=r.reduce(function(e,n){var t=dn(n.getBlockId_asU8()),r=n.getBlockHeight(),o=n.getBlockTimestamp().toDate().toISOString();return n.getEventsList().forEach(function(n){e.push({blockId:t,blockHeight:r,blockTimestamp:o,type:n.getType(),transactionId:dn(n.getTransactionId_asU8()),transactionIndex:n.getTransactionIndex(),eventIndex:n.getEventIndex(),payload:JSON.parse(Buffer.from(n.getPayload_asU8()).toString(\"utf8\"))})}),e},[]),t}var pn=function(e){return Buffer.from(e).toString(\"hex\")};function gn(e,n){var t=n.getBlock(),r=t.getCollectionGuaranteesList(),o=t.getBlockSealsList(),u=t.getSignaturesList().map(pn),i=nn();return i.tag=e.tag,i.block={id:pn(t.getId_asU8()),parentId:pn(t.getParentId_asU8()),height:t.getHeight(),timestamp:t.getTimestamp().toDate().toISOString(),collectionGuarantees:r.map(function(e){return{collectionId:pn(e.getCollectionId_asU8()),signatures:e.getSignaturesList().map(pn)}}),blockSeals:o.map(function(e){return{blockId:pn(e.getBlockId_asU8()),executionReceiptId:pn(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList().map(pn),resultApprovalSignatures:e.getResultApprovalSignaturesList().map(pn)}}),signatures:u},i}var hn=function(e){return Buffer.from(e).toString(\"hex\")};function vn(e,n){var t=n.getBlock(),r=nn();return r.tag=e.tag,r.blockHeader={id:hn(t.getId_asU8()),parentId:hn(t.getParentId_asU8()),height:t.getHeight(),timestamp:t.getTimestamp().toDate().toISOString()},r}var yn=function(e){return Buffer.from(e).toString(\"hex\")},kn=function(e){return Buffer.from(e).toString(\"hex\")},bn=function(e){return Buffer.from(e).toString(\"hex\")},In=function(e){return Buffer.from(e).toString(\"hex\")},Pn=function(n,t){void 0===t&&(t={});try{var r=function(r){return t.node=r,Promise.resolve(n).then(function(r){switch(n=r,!0){case pe(n):return t.sendTransaction?t.sendTransaction(n,t):function(e,n){void 0===n&&(n={});try{var t=n.unary||tn;return Promise.resolve(e).then(function(r){e=r;var o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.Transaction;o.setScript(function(e){return Buffer.from(e,\"utf8\")}(e.message.cadence)),o.setGasLimit(e.message.computeLimit),o.setReferenceBlockId(e.message.refBlock?rn(e.message.refBlock):null),o.setPayer(on((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[e.payer].addr))),e.message.arguments.forEach(function(n){return o.addArguments(function(e){return Buffer.from(JSON.stringify(e),\"utf8\")}(e.arguments[n].asArgument))}),e.authorizations.map(function(n){return e.accounts[n].addr}).reduce(function(e,n){return e.find(function(e){return e===n})?e:[].concat(e,[n])},[]).forEach(function(e){return o.addAuthorizers(on((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e)))});var u=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.Transaction.ProposalKey;u.setAddress(on((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[e.proposer].addr))),u.setKeyId(e.accounts[e.proposer].keyId),u.setSequenceNumber(e.accounts[e.proposer].sequenceNum),o.setProposalKey(u);for(var s=0,l=Object.values(e.accounts);s<l.length;s++){var f=l[s];try{if(!f.role.payer&&null!=f.signature){var d=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.Transaction.Signature;d.setAddress(on((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(f.addr))),d.setKeyId(f.keyId),d.setSignature(rn(f.signature)),o.addPayloadSignatures(d)}}catch(n){throw console.error(\"Trouble applying payload signature\",{acct:f,ix:e}),n}}for(var m=0,p=Object.values(e.accounts);m<p.length;m++){var g=p[m];try{if(g.role.payer&&null!=g.signature){var h=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.Transaction.Signature;h.setAddress(on((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(g.addr))),h.setKeyId(g.keyId),h.setSignature(rn(g.signature)),o.addEnvelopeSignatures(h)}}catch(n){throw console.error(\"Trouble applying envelope signature\",{acct:g,ix:e}),n}}var v=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.SendTransactionRequest;v.setTransaction(o);var y=Date.now();return Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.SendTransaction,v)).then(function(n){var t,r=Date.now(),o=nn();return o.tag=e.tag,o.transactionId=(t=n.getId_asU8(),Buffer.from(t).toString(\"hex\")),\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"FLOW::TX\",{detail:{txId:o.transactionId,delta:r-y}})),o})})}catch(e){return Promise.reject(e)}}(n,t);case ge(n):return t.sendGetTransactionStatus?t.sendGetTransactionStatus(n,t):function(e,n){void 0===n&&(n={});try{var t=n.unary||tn;return Promise.resolve(e).then(function(r){e=r;var o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetTransactionRequest;return o.setId(Buffer.from(e.transaction.id,\"hex\")),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetTransactionResult,o)).then(function(n){var t=n.getEventsList(),r=nn();return r.tag=e.tag,r.transactionStatus={status:n.getStatus(),statusCode:n.getStatusCode(),errorMessage:n.getErrorMessage(),events:t.map(function(e){return{type:e.getType(),transactionId:(n=e.getTransactionId_asU8(),Buffer.from(n).toString(\"hex\")),transactionIndex:e.getTransactionIndex(),eventIndex:e.getEventIndex(),payload:JSON.parse(Buffer.from(e.getPayload_asU8()).toString(\"utf8\"))};var n})},r})})}catch(e){return Promise.reject(e)}}(n,t);case he(n):return t.sendGetTransaction?t.sendGetTransaction(n,t):function(e,n){void 0===n&&(n={});try{var t=n.unary||tn;return Promise.resolve(e).then(function(r){e=r;var o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetTransactionRequest;return o.setId(Buffer.from(e.transaction.id,\"hex\")),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetTransaction,o)).then(function(n){var t=nn();t.tag=e.tag;var r,o=function(e){return{address:un(e.getAddress_asU8()),keyId:e.getKeyId(),signature:un(e.getSignature_asU8())}},u=n.getTransaction();return t.transaction={script:Buffer.from(u.getScript_asU8()).toString(\"utf8\"),args:u.getArgumentsList().map(function(e){return JSON.parse(Buffer.from(e).toString(\"utf8\"))}),referenceBlockId:un(u.getReferenceBlockId_asU8()),gasLimit:u.getGasLimit(),proposalKey:(r=u.getProposalKey(),{address:un(r.getAddress_asU8()),keyId:r.getKeyId(),sequenceNumber:r.getSequenceNumber()}),payer:un(u.getPayer_asU8()),authorizers:u.getAuthorizersList().map(un),payloadSignatures:u.getPayloadSignaturesList().map(o),envelopeSignatures:u.getEnvelopeSignaturesList().map(o)},t})})}catch(e){return Promise.reject(e)}}(n,t);case me(n):return t.sendExecuteScript?t.sendExecuteScript(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){return e=t,Promise.resolve(e.block.id?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.ExecuteScriptAtBlockIDRequest;r.setBlockId(Buffer.from(e.block.id,\"hex\"));var o=Buffer.from(e.message.cadence,\"utf8\");return e.message.arguments.forEach(function(n){return r.addArguments(an(e.arguments[n].asArgument))}),r.setScript(o),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.ExecuteScriptAtBlockID,r)).then(function(n){return cn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):e.block.height?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.ExecuteScriptAtBlockHeightRequest;r.setBlockHeight(Number(e.block.height));var o=Buffer.from(e.message.cadence,\"utf8\");return e.message.arguments.forEach(function(n){return r.addArguments(an(e.arguments[n].asArgument))}),r.setScript(o),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.ExecuteScriptAtBlockHeight,r)).then(function(n){return cn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.ExecuteScriptAtLatestBlockRequest,o=Buffer.from(e.message.cadence,\"utf8\");return e.message.arguments.forEach(function(n){return r.addArguments(an(e.arguments[n].asArgument))}),r.setScript(o),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.ExecuteScriptAtLatestBlock,r)).then(function(n){return cn(e,n)})}catch(e){return Promise.reject(e)}}(e,n))})}catch(e){return Promise.reject(e)}}(n,t);case ve(n):return t.sendGetAccount?t.sendGetAccount(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){return e=t,Promise.resolve(null!==e.block.height?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetAccountAtBlockHeightRequest;return r.setBlockHeight(Number(e.block.height)),r.setAddress(ln((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.account.addr))),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetAccountAtBlockHeight,r)).then(function(n){return fn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetAccountAtLatestBlockRequest;return r.setAddress(ln((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.account.addr))),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetAccountAtLatestBlock,r)).then(function(n){return fn(e,n)})}catch(e){return Promise.reject(e)}}(e,n))})}catch(e){return Promise.reject(e)}}(n,t);case ye(n):return t.sendGetEvents?t.sendGetEvents(n,t):function(n,t){void 0===t&&(t={});try{return Promise.resolve(n).then(function(r){var o=null!==(n=r).events.start,u=Array.isArray(n.events.blockIds)&&n.events.blockIds.length>0;return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(o||u,\"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"),Promise.resolve(o?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetEventsForHeightRangeRequest;return r.setType(e.events.eventType),r.setStartHeight(Number(e.events.start)),r.setEndHeight(Number(e.events.end)),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetEventsForHeightRange,r)).then(function(n){return mn(e,n)})}catch(e){return Promise.reject(e)}}(n,t):function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetEventsForBlockIDsRequest;return r.setType(e.events.eventType),e.events.blockIds.forEach(function(e){return r.addBlockIds(Buffer.from(e,\"hex\"))}),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetEventsForBlockIDs,r)).then(function(n){return mn(e,n)})}catch(e){return Promise.reject(e)}}(n,t))})}catch(e){return Promise.reject(e)}}(n,t);case ke(n):return t.sendGetLatestBlock?t.sendGetLatestBlock(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){e=t;var r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetLatestBlockRequest;return e.latestBlock&&e.latestBlock.isSealed&&(r.setIsSealed(e.latestBlock.isSealed),console.error(\"\\n          %c@onflow/send Deprecation Notice\\n          ========================\\n\\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\\n\\n          =======================\\n        \".replace(/\\n\\s+/g,\"\\n\").trim(),\"font-weight:bold;font-family:monospace;\")),e.block&&e.block.isSealed&&r.setIsSealed(e.block.isSealed),Promise.resolve(tn(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetLatestBlock,r)).then(function(n){var t=n.getBlock(),r=t.getCollectionGuaranteesList(),o=t.getBlockSealsList(),u=t.getSignaturesList(),i=nn();return i.tag=e.tag,i.block={id:yn(t.getId_asU8()),parentId:yn(t.getParentId_asU8()),height:t.getHeight(),timestamp:t.getTimestamp(),collectionGuarantees:r.map(function(e){return{collectionId:yn(e.getCollectionId_asU8()),signatures:e.getSignaturesList()}}),blockSeals:o.map(function(e){return{blockId:yn(e.getBlockId_asU8()),executionReceiptId:yn(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()}}),signatures:u},i})})}catch(e){return Promise.reject(e)}}(n,t);case Se(n):return t.sendGetBlock?t.sendGetBlock(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){var r=null!==(e=t).block.height;return Promise.resolve(null!==e.block.id?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockByIDRequest;return r.setId(Buffer.from(e.block.id,\"hex\")),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockByID,r)).then(function(n){return gn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):r?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockByHeightRequest;return r.setHeight(Number(e.block.height)),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockByHeight,r)).then(function(n){return gn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):function(e,n){try{var t,r=n.unary||tn,o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetLatestBlockRequest;return null!=(t=e.block)&&t.isSealed&&o.setIsSealed(e.block.isSealed),Promise.resolve(r(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetLatestBlock,o)).then(function(n){return gn(e,n)})}catch(e){return Promise.reject(e)}}(e,n))})}catch(e){return Promise.reject(e)}}(n,t);case we(n):return t.sendGetBlockHeader?t.sendGetBlockHeader(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){var r=null!==(e=t).block.height;return Promise.resolve(null!==e.block.id?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockHeaderByIDRequest;return r.setId(Buffer.from(e.block.id,\"hex\")),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockHeaderByID,r)).then(function(n){return vn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):r?function(e,n){try{var t=n.unary||tn,r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockHeaderByHeightRequest;return r.setHeight(Number(e.block.height)),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockHeaderByHeight,r)).then(function(n){return vn(e,n)})}catch(e){return Promise.reject(e)}}(e,n):function(e,n){try{var t,r=n.unary||tn,o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetLatestBlockHeaderRequest;return null!=(t=e.block)&&t.isSealed&&o.setIsSealed(e.block.isSealed),Promise.resolve(r(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetLatestBlockHeader,o)).then(function(n){return vn(e,n)})}catch(e){return Promise.reject(e)}}(e,n))})}catch(e){return Promise.reject(e)}}(n,t);case be(n):return t.sendGetBlockById?t.sendGetBlockById(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){e=t;var r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockByIDRequest;return r.setId(Buffer.from(e.block.id,\"hex\")),Promise.resolve(tn(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockByID,r)).then(function(n){var t=n.getBlock(),r=t.getCollectionGuaranteesList(),o=t.getBlockSealsList(),u=t.getSignaturesList(),i=nn();return i.tag=e.tag,i.block={id:kn(t.getId_asU8()),parentId:kn(t.getParentId_asU8()),height:t.getHeight(),timestamp:t.getTimestamp(),collectionGuarantees:r.map(function(e){return{collectionId:kn(e.getCollectionId_asU8()),signatures:e.getSignaturesList()}}),blockSeals:o.map(function(e){return{blockId:kn(e.getBlockId_asU8()),executionReceiptId:kn(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()}}),signatures:u},i})})}catch(e){return Promise.reject(e)}}(n,t);case Ie(n):return t.sendGetBlockByHeight?t.sendGetBlockByHeight(n,t):function(e,n){void 0===n&&(n={});try{return Promise.resolve(e).then(function(t){e=t;var r=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetBlockByHeightRequest;return r.setHeight(Number(e.block.height)),Promise.resolve(tn(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetBlockByHeight,r)).then(function(n){var t=n.getBlock(),r=t.getCollectionGuaranteesList(),o=t.getBlockSealsList(),u=t.getSignaturesList(),i=nn();return i.tag=e.tag,i.block={id:bn(t.getId_asU8()),parentId:bn(t.getParentId_asU8()),height:t.getHeight(),timestamp:t.getTimestamp(),collectionGuarantees:r.map(function(e){return{collectionId:bn(e.getCollectionId_asU8()),signatures:e.getSignaturesList()}}),blockSeals:o.map(function(e){return{blockId:bn(e.getBlockId_asU8()),executionReceiptId:bn(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()}}),signatures:u},i})})}catch(e){return Promise.reject(e)}}(n,t);case Be(n):return t.sendGetCollection?t.sendGetCollection(n,t):function(e,n){void 0===n&&(n={});try{var t=n.unary||tn;return Promise.resolve(e).then(function(r){e=r;var o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.GetCollectionByIDRequest;return o.setId(Buffer.from(e.collection.id,\"hex\")),Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.GetCollectionByID,o)).then(function(n){var t=n.getCollection(),r=nn();return r.tag=e.tag,r.collection={id:In(t.getId_asU8()),transactionIds:t.getTransactionIdsList().map(In)},r})})}catch(e){return Promise.reject(e)}}(n,t);case Pe(n):return t.sendPing?t.sendPing(n,t):function(e,n){void 0===n&&(n={});try{var t=n.unary||tn;return Promise.resolve(e).then(function(r){e=r;var o=new _onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.PingRequest;return Promise.resolve(t(n.node,_onflow_protobuf__WEBPACK_IMPORTED_MODULE_2__.AccessAPI.Ping,o)).then(function(n){var t=nn();return t.tag=e.tag,t})})}catch(e){return Promise.reject(e)}}(n,t);default:return n}})},o=t.node;return Promise.resolve(o?r(o):Promise.resolve(Ze().get(\"accessNode.api\")).then(r))}catch(e){return Promise.reject(e)}};function Sn(e){return void 0===e&&(e=null),Ne([ce,function(n){return n.block.isSealed=e,W(n)}])}function wn(e){return Ne([te,function(n){return n.account.addr=(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e),W(n)}])}var Bn=function(e,n,t){try{try{return Promise.resolve(Number(e))}catch(e){throw new Error(\"Decode Number Error : \"+t.join(\".\"))}}catch(e){return Promise.reject(e)}},An=function(e){return Promise.resolve(e)},En=function(e,n,t){try{return Promise.resolve(e.fields.reduce(function(e,r){try{return Promise.resolve(e).then(function(o){return e=o,Promise.resolve(Nn(r.value,n,[].concat(t,[r.name]))).then(function(n){return e[r.name]=n,e})})}catch(e){return Promise.reject(e)}},Promise.resolve({}))).then(function(t){var r=e.id&&jn(n,e.id);return r?Promise.resolve(r(t)):t})}catch(e){return Promise.reject(e)}},Tn={UInt:Bn,Int:Bn,UInt8:Bn,Int8:Bn,UInt16:Bn,Int16:Bn,UInt32:Bn,Int32:Bn,UInt64:Bn,Int64:Bn,UInt128:Bn,Int128:Bn,UInt256:Bn,Int256:Bn,Word8:Bn,Word16:Bn,Word32:Bn,Word64:Bn,UFix64:An,Fix64:An,String:An,Character:An,Bool:An,Address:An,Void:function(){return Promise.resolve(null)},Optional:function(e,n,t){return Promise.resolve(e?Nn(e,n,t):null)},Reference:function(e){try{return Promise.resolve({address:e.address,type:e.type})}catch(e){return Promise.reject(e)}},Array:function(e,n,t){try{return Promise.resolve(Promise.all(e.map(function(e){return new Promise(function(r){try{return Promise.resolve(Nn(e,n,[].concat(t,[e.type]))).then(r)}catch(e){return Promise.reject(e)}})})))}catch(e){return Promise.reject(e)}},Dictionary:function(e,n,t){try{return Promise.resolve(e.reduce(function(e,r){try{return Promise.resolve(e).then(function(o){return e=o,Promise.resolve(Nn(r.key,n,[].concat(t,[r.key]))).then(function(o){return Promise.resolve(Nn(r.value,n,[].concat(t,[r.key]))).then(function(n){return e[o]=n,e})})})}catch(e){return Promise.reject(e)}},Promise.resolve({})))}catch(e){return Promise.reject(e)}},Event:En,Resource:En,Struct:En,Enum:En,Type:function(e){try{return Promise.resolve(e.staticType)}catch(e){return Promise.reject(e)}},Path:function(e){try{return Promise.resolve({domain:e.domain,identifier:e.identifier})}catch(e){return Promise.reject(e)}},Capability:function(e){try{return Promise.resolve({path:e.path,address:e.address,borrowType:e.borrowType})}catch(e){return Promise.reject(e)}}},jn=function(e,n){var t=Object.keys(e).find(function(e){return/^\\/.*\\/$/.test(e)?new RegExp(e.substring(1,e.length-1)).test(n):e===n});return n&&t&&e[t]},Nn=function(e,n,t){try{var r=jn(n,e.type);if(!r)throw new Error(\"Undefined Decoder Error: \"+e.type+\"@\"+t.join(\".\"));return Promise.resolve(r(e.value,n,t))}catch(e){return Promise.reject(e)}},xn=function(e,n,t){void 0===n&&(n={}),void 0===t&&(t=[]);var r=x({},Tn,n);return Promise.resolve(Nn(e,r,t))},On=function(e,n){void 0===n&&(n={});try{var t,r=x({},Tn,n),o=e.encodedData?(t=1,Promise.resolve(xn(e.encodedData,r))):e.transactionStatus?(t=1,Promise.resolve(Promise.all(e.transactionStatus.events.map(function(e){try{var n=e.eventIndex,t=e.transactionIndex,o=e.transactionId,u=e.type;return Promise.resolve(xn(e.payload,r)).then(function(e){return{type:u,transactionId:o,transactionIndex:t,eventIndex:n,data:e}})}catch(e){return Promise.reject(e)}}))).then(function(n){return x({},e.transactionStatus,{events:n})})):e.transaction?(t=1,e.transaction):e.events?(t=1,Promise.resolve(Promise.all(e.events.map(function(e){try{var n=e.eventIndex,t=e.transactionIndex,o=e.transactionId,u=e.type,i=e.blockTimestamp,a=e.blockHeight,c=e.blockId;return Promise.resolve(xn(e.payload,r)).then(function(e){return{blockId:c,blockHeight:a,blockTimestamp:i,type:u,transactionId:o,transactionIndex:t,eventIndex:n,data:e}})}catch(e){return Promise.reject(e)}})))):e.account?(t=1,e.account):e.block?(t=1,e.block):e.blockHeader?(t=1,e.blockHeader):e.latestBlock?(console.error(\"\\n          %c@onflow/decode Deprecation Notice\\n          ========================\\n\\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\\n\\n          =======================\\n        \".replace(/\\n\\s+/g,\"\\n\").trim(),\"font-weight:bold;font-family:monospace;\"),t=1,e.latestBlock):e.transactionId?(t=1,e.transactionId):e.collection?(t=1,e.collection):void 0;return Promise.resolve(o&&o.then?o.then(function(e){return t?e:null}):t?o:null)}catch(e){return Promise.reject(e)}};function _n(e){return function(n){try{return pe(n)?n.message.refBlock?Promise.resolve(W(n)):Promise.resolve(function(e){try{var n;return Promise.resolve(Ne(F(),[Sn()])).then(function(t){return n=t,Promise.resolve(Pn(n,e)).then(function(e){return n=e,Promise.resolve(On(n)).then(function(e){return(n=e).id})})})}catch(e){return Promise.reject(e)}}(e)).then(function(e){return n.message.refBlock=e,W(n)}):Promise.resolve(W(n))}catch(e){return Promise.reject(e)}}}var Ln=function(n){try{var t=function(){if(pe(n)||me(n)){var t=function(){return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(Cn(r),\"Cadence needs to be a string at this point.\"),Promise.resolve(Ze().where(/^0x/).then(function(e){return Object.entries(e).reduce(function(e,n){return e.replace(n[0],n[1])},r)})).then(function(e){n.message.cadence=e})},r=Oe(n,\"ix.cadence\");(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(Gn(r)||Cn(r),\"Cadence needs to be a function or a string.\");var o=function(){if(Gn(r))return Promise.resolve(r({})).then(function(e){r=e})}();return o&&o.then?o.then(t):t()}}();return Promise.resolve(t&&t.then?t.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},Gn=function(e){return\"function\"==typeof e},Cn=function(e){return\"string\"==typeof e},Un=function(e){try{if(pe(e)||me(e))for(var n=0,t=Object.entries(e.arguments);n<t.length;n++){var r=t[n];e.arguments[r[0]].asArgument=Dn(r[1])}return Promise.resolve(e)}catch(e){return Promise.reject(e)}},Rn=function(e){return\"function\"==typeof e};function Dn(n){return (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(null!=typeof n.xform,\"No type specified for argument: \"+n.value),Rn(n.xform)?n.xform(n.value):Rn(n.xform.asArgument)?n.xform.asArgument(n.value):void (0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(!1,\"Invalid Argument\",n)}var Kn,Fn=function(e){return Mn(Vn($n(e)))},Hn=function(e){return Mn(Vn(Xn(e)))},zn=function(e,n){return Buffer.from(e.padStart(2*n,0),\"hex\")},qn=(Kn=Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),Buffer.from(Kn.padEnd(64,0),\"hex\")).toString(\"hex\"),Mn=function(e){return qn+e},Jn=function(e){return zn(e,8)},Wn=function(e){return Buffer.from(JSON.stringify(e),\"utf8\")},Yn=function(e){return Buffer.from(e,\"utf8\")},Vn=function(e){return (0,_onflow_rlp__WEBPACK_IMPORTED_MODULE_6__.encode)(e).toString(\"hex\")},$n=function(e){return et(e),[Yn(e.cadence),e.arguments.map(Wn),(n=e.refBlock,zn(n,32)),e.computeLimit,Jn(e.proposalKey.address),e.proposalKey.keyId,e.proposalKey.sequenceNum,Jn(e.payer),e.authorizers.map(Jn)];var n},Xn=function(e){return nt(e),[$n(e),Zn(e)]},Zn=function(e){var n=Qn(e);return e.payloadSigs.map(function(e){return{signerIndex:n.get(e.address),keyId:e.keyId,sig:e.sig}}).sort(function(e,n){return e.signerIndex>n.signerIndex?1:e.signerIndex<n.signerIndex?-1:e.keyId>n.keyId?1:e.keyId<n.keyId?-1:void 0}).map(function(e){return[e.signerIndex,e.keyId,(n=e.sig,Buffer.from(n,\"hex\"))];var n})},Qn=function(e){var n=new Map,t=0,r=function(e){n.has(e)||(n.set(e,t),t++)};return r(e.proposalKey.address),r(e.payer),e.authorizers.forEach(r),n},et=function(e){it.forEach(function(n){return lt(e,n)}),at.forEach(function(n){return lt(e.proposalKey,n,\"proposalKey\")})},nt=function(e){ct.forEach(function(n){return lt(e,n)}),e.payloadSigs.forEach(function(e,n){st.forEach(function(t){return lt(e,t,\"payloadSigs\",n)})})},tt=function(e){return\"number\"==typeof e},rt=function(e){return\"string\"==typeof e},ot=function(e){return null!==e&&\"object\"==typeof e},ut=function(e){return ot(e)&&e instanceof Array},it=[{name:\"cadence\",check:rt},{name:\"arguments\",check:ut},{name:\"refBlock\",check:rt,defaultVal:\"0\"},{name:\"computeLimit\",check:tt},{name:\"proposalKey\",check:ot},{name:\"payer\",check:rt},{name:\"authorizers\",check:ut}],at=[{name:\"address\",check:rt},{name:\"keyId\",check:tt},{name:\"sequenceNum\",check:tt}],ct=[{name:\"payloadSigs\",check:ut}],st=[{name:\"address\",check:rt},{name:\"keyId\",check:tt},{name:\"sig\",check:rt}],lt=function(e,n,t,r){var o=n.name,u=n.check,i=n.defaultVal;if(null==e[o]&&null!=i&&(e[o]=i),null==e[o])throw dt(o,t,r);if(!u(e[o]))throw mt(o,t,r)},ft=function(e,n,t){return n?null==t?n+\".\"+e:n+\".\"+t+\".\"+e:e},dt=function(e,n,t){return new Error(\"Missing field \"+ft(e,n,t))},mt=function(e,n,t){return new Error(\"Invalid field \"+ft(e,n,t))},pt=function(e){try{var n=function(){if(pe(e))return function(n,t){try{var r=(o=gt(e),u=Fn(kt(e)),Promise.resolve(Promise.all(o.map(vt(e,u)))).then(function(){var n=ht(e),t=Hn(x({},kt(e),{payloadSigs:o.map(function(n){return{address:e.accounts[n].addr,keyId:e.accounts[n].keyId,sig:e.accounts[n].signature}})}));return Promise.resolve(Promise.all(n.map(vt(e,t)))).then(function(){})}))}catch(e){return t(e)}var o,u;return r&&r.then?r.then(void 0,t):r}(0,function(n){throw console.error(\"Signatures\",n,{ix:e}),n})}();return Promise.resolve(n&&n.then?n.then(function(n){return e}):e)}catch(e){return Promise.reject(e)}};function gt(e){var n=new Set(e.authorizations);return n.add(e.proposer),n.delete(e.payer),Array.from(n)}function ht(e){var n=new Set([e.payer]);return Array.from(n)}function vt(e,n){return function(t){try{var r=e.accounts[t];return null!=r.signature?Promise.resolve():Promise.resolve(r.signingFunction(function(e,n,t){try{return{f_type:\"Signable\",f_vsn:\"1.0.1\",message:n,addr:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.addr),keyId:e.keyId,roles:e.role,cadence:t.message.cadence,args:t.message.arguments.map(function(e){return t.arguments[e].asArgument}),data:{},interaction:t,voucher:yt(t)}}catch(e){throw console.error(\"buildSignable\",e),e}}(r,n,e))).then(function(n){e.accounts[t].signature=n.signature})}catch(e){return Promise.reject(e)}}}var yt=function(e){return{cadence:e.message.cadence,refBlock:e.message.refBlock||null,computeLimit:e.message.computeLimit,arguments:e.message.arguments.map(function(n){return e.arguments[n].asArgument}),proposalKey:{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(e.accounts[e.proposer].addr),keyId:e.accounts[e.proposer].keyId,sequenceNum:e.accounts[e.proposer].sequenceNum},payer:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(e.accounts[e.payer].addr),authorizers:e.authorizations.map(function(n){return (0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(e.accounts[n].addr)}).reduce(function(e,n){return e.find(function(e){return e===n})?e:[].concat(e,[n])},[]),payloadSigs:gt(e).map(function(n){return{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(e.accounts[n].addr),keyId:e.accounts[n].keyId,sig:e.accounts[n].signature}}),envelopeSigs:ht(e).map(function(n){return{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(e.accounts[n].addr),keyId:e.accounts[n].keyId,sig:e.accounts[n].signature}})}};function kt(e){return{cadence:e.message.cadence,refBlock:e.message.refBlock||null,computeLimit:e.message.computeLimit,arguments:e.message.arguments.map(function(n){return e.arguments[n].asArgument}),proposalKey:{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[e.proposer].addr),keyId:e.accounts[e.proposer].keyId,sequenceNum:e.accounts[e.proposer].sequenceNum},payer:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[e.payer].addr),authorizers:e.authorizations.map(function(n){return (0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[n].addr)}).reduce(function(e,n){return e.find(function(e){return e===n})?e:[].concat(e,[n])},[])}}var bt=\"undefined\"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol(\"Symbol.iterator\")):\"@@iterator\";function It(e,n,t){if(!e.s){if(t instanceof Pt){if(!t.s)return void(t.o=It.bind(null,e,n));1&n&&(n=t.s),t=t.v}if(t&&t.then)return void t.then(It.bind(null,e,n),It.bind(null,e,2));e.s=n,e.v=t;var r=e.o;r&&r(e)}}var Pt=function(){function e(){}return e.prototype.then=function(n,t){var r=new e,o=this.s;if(o){var u=1&o?n:t;if(u){try{It(r,1,u(this.v))}catch(e){It(r,2,e)}return r}return this}return this.o=function(e){try{var o=e.v;1&e.s?It(r,1,n?n(o):o):t?It(r,1,t(o)):It(r,2,o)}catch(e){It(r,2,e)}},r},e}();function St(e){return e instanceof Pt&&1&e.s}var wt=function(e){try{var n=function(){if(pe(e))return function(n,t){try{var r=Promise.resolve(Bt(e,Object.values(e.accounts))).then(function(){return Promise.resolve(Bt(e,Object.values(e.accounts))).then(function(){})})}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(0,function(e){throw console.error(\"=== SAD PANDA ===\\n\\n\",e,\"\\n\\n=== SAD PANDA ===\"),e})}();return Promise.resolve(n&&n.then?n.then(function(n){return e}):e)}catch(e){return Promise.reject(e)}},Bt=function n(t,r,o,u){void 0===u&&(u=3);try{var i=function(){o&&(t.authorizations=t.authorizations.map(function(e){return e===o.tempId?a:e}).reduce(function(e,n){return Array.isArray(n)?[].concat(e,n):[].concat(e,[n])},[]))};(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(u,\"Account Resolve Recursion Limit Exceeded\",{ix:t,accounts:r});var a=[],c=function(e,n,t){if(\"function\"==typeof e[bt]){var r,o,u,i=e[bt]();if(function e(t){try{for(;!(r=i.next()).done;)if((t=n(r.value))&&t.then){if(!St(t))return void t.then(e,u||(u=It.bind(null,o=new Pt,2)));t=t.v}o?It(o,1,t):o=t}catch(e){It(o||(o=new Pt),2,e)}}(),i.return){var a=function(e){try{r.done||i.return()}catch(e){}return e};if(o&&o.then)return o.then(a,function(e){throw a(e)});a()}return o}if(!(\"length\"in e))throw new TypeError(\"Object is not iterable\");for(var c=[],s=0;s<e.length;s++)c.push(e[s]);return function(e,n,t){var r,o,u=-1;return function t(i){try{for(;++u<e.length;)if((i=n(u))&&i.then){if(!St(i))return void i.then(t,o||(o=It.bind(null,r=new Pt,2)));i=i.v}r?It(r,1,i):r=i}catch(e){It(r||(r=new Pt),2,e)}}(),r}(c,function(e){return n(c[e])})}(r,function(e){function r(){function r(){i.tempId!=e.tempId&&delete t.accounts[i.tempId]}var c=function(){if(Array.isArray(e))return Promise.resolve(n(t,e,i,u-1)).then(function(){});null!=e.addr&&null!=e.keyId&&(e.tempId=e.addr+\"-\"+e.keyId),t.accounts[e.tempId]=t.accounts[e.tempId]||e,t.accounts[e.tempId].role.proposer=t.accounts[e.tempId].role.proposer||e.role.proposer,t.accounts[e.tempId].role.payer=t.accounts[e.tempId].role.payer||e.role.payer,t.accounts[e.tempId].role.authorizer=t.accounts[e.tempId].role.authorizer||e.role.authorizer,t.accounts[e.tempId].role.proposer&&t.proposer===i.tempId&&(t.proposer=e.tempId),t.accounts[e.tempId].role.payer&&t.payer===i.tempId&&(t.payer=e.tempId),t.accounts[e.tempId].role.authorizer&&(o?a=Array.from(new Set([].concat(a,[e.tempId]))):t.authorizations=t.authorizations.map(function(n){return n===i.tempId?e.tempId:n}))}();return c&&c.then?c.then(r):r()}var i=o||e,c=function(){if(At(e.resolve))return Promise.resolve(e.resolve(e,function(e,n){try{return{f_type:\"PreSignable\",f_vsn:\"1.0.1\",roles:e.role,cadence:n.message.cadence,args:n.message.arguments.map(function(e){return n.arguments[e].asArgument}),data:{},interaction:n,voucher:yt(n)}}catch(e){throw console.error(\"buildPreSignable\",e),e}}(e,t))).then(function(n){e=n})}();return c&&c.then?c.then(r):r()});return Promise.resolve(c&&c.then?c.then(i):i())}catch(e){return Promise.reject(e)}},At=function(e){return\"function\"==typeof e},Et=function(e){try{var n=Oe(e,\"ix.validators\",[]);return Promise.resolve(Ne(e,n.map(function(e){return function(n){return e(n,{Ok:W,Bad:Y})}})))}catch(e){return Promise.reject(e)}},Tt=function(e){try{for(var n=0,t=Object.keys(e.accounts);n<t.length;n++){var r=t[n];e.accounts[r].addr=(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.accounts[r].addr)}return Promise.resolve(e)}catch(e){return Promise.reject(e)}},jt=function(e){return e},Nt=function(e,n){return void 0===n&&(n=jt),function(t){try{var r=function(e){return[\"\\nAccounts:\",{proposer:e.proposer,authorizations:e.authorizations,payer:e.payer},\"\\n\\nDetails:\",e.accounts].filter(Boolean)},o=function(){var n;(n=console).log.apply(n,[\"debug[\"+e+\"] ---\\n\"].concat([].slice.call(arguments),[\"\\n\\n\\n---\"]))};return Promise.resolve(Ze.get(\"debug.\"+e)).then(function(e){var u=function(){if(e)return Promise.resolve(n(t,o,r)).then(function(){})}();return u&&u.then?u.then(function(){return t}):t})}catch(e){return Promise.reject(e)}}},xt=Ne([Ln,Nt(\"cadence\",function(e,n){return n(e.message.cadence)}),Un,Nt(\"arguments\",function(e,n){return n(e.message.arguments,e.message)}),wt,Nt(\"accounts\",function(e,n,t){return n.apply(void 0,t(e))}),function(e){try{var n=function(){if(pe(e)&&null==e.message.refBlock)return Promise.resolve(Ze.first([\"sdk.transport\",\"sdk.send\"],Pn)).then(function(n){return Promise.resolve(n(Ce([Sn()])).then(On)).then(function(n){e.message.refBlock=n.id})})}();return Promise.resolve(n&&n.then?n.then(function(){return e}):e)}catch(e){return Promise.reject(e)}},function(n){try{var t=function(){if(pe(n))return Promise.resolve(Ze.first([\"sdk.transport\",\"sdk.send\"],Pn)).then(function(t){var r=Object.values(n.accounts).find(function(e){return e.role.proposer});(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(r,\"Transactions require a proposer\");var o=function(){if(null==r.sequenceNum)return Promise.resolve(Ce([wn(r.addr)])).then(function(e){return Promise.resolve(t(e).then(On).then(function(e){return e.keys}).then(function(e){return e.find(function(e){return e.index===r.keyId})}).then(function(e){return e.sequenceNumber})).then(function(e){n.accounts[r.tempId].sequenceNum=e})})}();if(o&&o.then)return o.then(function(){})})}();return Promise.resolve(t&&t.then?t.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},pt,Nt(\"signatures\",function(e,n,t){return n.apply(void 0,t(e))}),Tt,Et,Nt(\"resolved\",function(e,n){return n(e)})]),Ot=function(e,n){void 0===e&&(e=[]),void 0===n&&(n={});try{return Promise.resolve(Ze.first([\"sdk.transport\",\"sdk.send\"],n.send||Pn)).then(function(t){return Promise.resolve(Ze.first([\"sdk.resolve\"],n.resolve||xt)).then(function(r){return Array.isArray(e)&&(e=Ne(F(),e)),Promise.resolve(r(e)).then(function(e){return t(e,n)})})})}catch(e){return Promise.reject(e)}},_t=function(e){try{return Promise.resolve(Ze().where(/^decoder\\./)).then(function(n){var t=Object.entries(n).map(function(e){var n=e[0],t=e[1];return[n=\"/\"+n.replace(/^decoder\\./,\"\")+\"$/\",t]});return On(e,Object.fromEntries(t))})}catch(e){return Promise.reject(e)}},Lt=function(e){var n,t;function r(n){var t,r=(\"\\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: \"+n+\". \\n        Please ensure the address: \"+n+\" is intended to sign the given transaction as specified by the transaction signable.\\n      \").trim();return(t=e.call(this,r)||this).name=\"Unable To Determine Message Encoding For Signer Addresss\",t}return t=e,(n=r).prototype=Object.create(t.prototype),n.prototype.constructor=n,_(n,t),r}(C(Error)),Gt=function(e,n){var t,r,o=(t=e.voucher,(r=new Set(t.authorizers)).add(t.proposalKey.address),r.delete(t.payer),Array.from(r).map(_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)),u=function(e){var n=new Set([e.payer]);return Array.from(n).map(_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)}(e.voucher),i=o.includes((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(n)),a=u.includes((0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.withPrefix)(n));if(!i&&!a)throw new Lt(n);var c={cadence:e.voucher.cadence,refBlock:e.voucher.refBlock,computeLimit:e.voucher.computeLimit,arguments:e.voucher.arguments,proposalKey:x({},e.voucher.proposalKey,{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.voucher.proposalKey.address)}),payer:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.voucher.payer),authorizers:e.voucher.authorizers.map(_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix),payloadSigs:e.voucher.payloadSigs.map(function(e){return x({},e,{address:(0,_onflow_util_address__WEBPACK_IMPORTED_MODULE_3__.sansPrefix)(e.address)})})};return i?Fn(c):Hn(c)};function Ct(){var e=[].slice.call(arguments),n=e[1]||(\"object\"==typeof e[0]?e[0]:void 0),t=\"boolean\"==typeof e[0]?e[0]:void 0;return\"object\"==typeof e[0]&&console.warn(\"\\n      %cFCL/SDK Deprecation Notice\\n      ============================\\n  \\n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\\n  \\n      ============================\\n    \",\"font-weight:bold;font-family:monospace;\"),Ot([Sn(t)],n).then(On)}function Ut(e,n){return Ot([wn(e)],n).then(On)}function Rt(e){return void 0===e&&(e=[]),Ne(e.map(function(e){return $(e,{role:\"authorizer\"})}))}function Dt(e,n,t,r){return{addr:e,signingFunction:n,keyId:t,sequenceNum:r}}function Kt(e){return Le(\"ix.validators\",function(n){return Array.isArray(n)?n.push(e):[e]})}function Ft(e){return Ne([function(n){return n.block.height=e,n},Kt(function(e){if(\"boolean\"==typeof e.block.isSealed)throw new Error(\"Unable to specify both block height and isSealed.\");if(e.block.id)throw new Error(\"Unable to specify both block height and block id.\");return e})])}function Ht(e){return Ne([function(n){return n.block.id=e,W(n)},Kt(function(e,n){var t=n.Ok,r=n.Bad;return ve(e)?r(e,\"Unable to specify a block id with a Get Account interaction.\"):\"boolean\"==typeof e.block.isSealed?r(e,\"Unable to specify both block id and isSealed.\"):e.block.height?r(e,\"Unable to specify both block id and block height.\"):t(e)})])}function zt(e,n,t){return void 0===n&&void 0===t||console.warn(\"\\n      %cFCL/SDK Deprecation Notice\\n      ============================\\n  \\n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\\n  \\n      ============================\\n    \",\"font-weight:bold;font-family:monospace;\"),Ne([re,function(r){return r.events.eventType=e,r.events.start=n,r.events.end=t,W(r)}])}function qt(e,n,t){return Ne([re,function(r){return r.events.eventType=e,r.events.start=n,r.events.end=t,W(r)}])}function Mt(e,n){return void 0===n&&(n=[]),Ne([re,function(t){return t.events.eventType=e,t.events.blockIds=n,W(t)}])}function Jt(e){return void 0===e&&(e=null),Ne([se,function(n){return n.block.isSealed=e,W(n)}])}function Wt(e){return void 0===e&&(e=!1),console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\\n\\n    ============================\\n  \",\"font-weight:bold;font-family:monospace;\"),Ne([oe,function(n){return n.block.isSealed=e,W(n)}])}function Yt(e){return console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\\n\\n    ============================\\n  \",\"font-weight:bold;font-family:monospace;\"),Ne([ue,function(n){return n.block.ids=[e],W(n)}])}function Vt(e){return console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\\n\\n    ============================\\n  \",\"font-weight:bold;font-family:monospace;\"),Ne([ie,function(n){return n.block.height=e,W(n)}])}function $t(e){return void 0===e&&(e=null),Ne([le,function(n){return n.collection.id=e,n}])}function Xt(e){return Ne([ee,function(n){return n.transaction.id=e,W(n)}])}function Zt(e){return Ne([ne,function(n){return n.transaction.id=e,W(n)}])}function Qt(e){return function(n){return n.message.computeLimit=e,n}}function er(e){return void 0===e&&(e=[]),Ne(e.map(X))}function nr(e,n){return{value:e,xform:n}}var tr=function(e){try{return Promise.resolve($(e,{role:\"proposer\"}))}catch(e){return Promise.reject(e)}},rr=function(e){try{return Promise.resolve($(e,{role:\"payer\"}))}catch(e){return Promise.reject(e)}};function or(){return ae}function ur(e){return Ne([function(n){return n.message.refBlock=e,W(n)}])}function ir(){return Ne([Z,_e(\"ix.cadence\",_onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template.apply(void 0,[].slice.call(arguments)))])}var ar=[];function cr(){return Ne([Q,_e(\"ix.cadence\",_onflow_util_template__WEBPACK_IMPORTED_MODULE_7__.template.apply(void 0,[].slice.call(arguments))),function(e){return e.message.computeLimit=e.message.computeLimit||10,e.message.refBlock=e.message.refBlock||null,e.authorizations=e.authorizations||ar,W(e)}])}function sr(){var e=[].slice.call(arguments);if(e.length>1){var n=e,t=n[0],r=n[1];return sr(function(e,n){var o=n.Bad;return t?(0,n.Ok)(e):o(e,r)})}var o=e[0];return function(e){return o(e,{Ok:W,Bad:Y})}}var lr=function(e){var n=e.node;return function(e){try{return pe(e)?e.accounts[e.proposer].sequenceNum?Promise.resolve(W(e)):Promise.resolve(Ce([wn(e.accounts[e.proposer].addr)])).then(function(t){return Promise.resolve(Pn(t,{node:n})).then(function(n){return Promise.resolve(On(n)).then(function(n){return e.accounts[e.proposer].sequenceNum=n.keys[e.accounts[e.proposer].keyId].sequenceNumber,W(e)})})}):Promise.resolve(W(e))}catch(e){return Promise.reject(e)}}},fr=function(e){return e},dr=[\"tempId\"];function mr(e){return[\"SIGNATURE\",e.addr,e.keyId].join(\".\")}function pr(e){return void 0===e&&(e={}),function(n){var t=x({},n,e,{signingFunction:e.signingFunction||n.signingFunction||function(e){return{addr:t.addr,keyId:t.keyId,signature:mr(t)}}});return t}}var gr={proposer:!1,authorizer:!1,payer:!1},hr={__proto__:null,mockSend:function(n){return void 0===n&&(n=fr),function(t){try{return Promise.resolve(t).then(function(r){switch(t=r,!0){case ve(t):return function(n,t){return void 0===t&&(t=5),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(n.account,\"mockAccountResponse(ix) -- ix.account is missing\",n),(0,_onflow_util_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(n.account.addr,\"mockAccountResponse(ix) -- ix.account.addr is missing\",n),{account:{addr:n.account.addr,keys:Array.from({length:t},function(e,n){return{index:n,sequenceNumber:42}})}}}(t);case Se(t):return{tag:\"GET_BLOCK\",block:{id:\"32\"}};default:return n(t)}})}catch(e){return Promise.reject(e)}}},authzFn:pr,authzResolve:function(e){return void 0===e&&(e={}),function(n){return x({},n,{tempId:e.tempId||\"WITH_RESOLVE\",resolve:pr(function(e,n){if(null==e)return{};var t,r,o={},u=Object.keys(e);for(r=0;r<u.length;r++)n.indexOf(t=u[r])>=0||(o[t]=e[t]);return o}(e,dr))})}},authzResolveMany:function(e){return void 0===e&&(e={}),function(n){return x({},n,{tempId:e.tempId||\"AUTHZ_RESOLVE_MANY\",resolve:function(){return[e.proposer&&pr(e.proposer)({role:x({},gr,{proposer:!0})})].concat(e.authorizations.map(pr).map(function(e){return e({role:x({},gr,{authorizer:!0})})}),[e.payer&&pr(e.payer)({role:x({},gr,{payer:!0})})]).filter(Boolean)}})}},sig:mr,idof:function(e){return e.addr+\"-\"+e.keyId},run:function(e){return void 0===e&&(e=[]),Ce([ur(\"123\")].concat(e)).then(xt)}},vr=\"0.0.54\",yr=function(e){return n={name:\"params\",transitionsPath:\"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\"},void console.error(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n    The \"+n.name+\" builder has been removed from the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: \"+n.transitionsPath+\"\\n    ============================\\n  \",\"font-weight:bold;font-family:monospace;\");var n},kr=function(e){return n={name:\"param\",transitionsPath:\"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\"},void console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n    The \"+n.name+\" builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: \"+n.transitionsPath+\"\\n    ============================\\n  \",\"font-weight:bold;font-family:monospace;\");var n};\n//# sourceMappingURL=sdk.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/sdk/dist/sdk.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/types/dist/types.module.js":
/*!*********************************************************!*\
  !*** ./node_modules/@onflow/types/dist/types.module.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Address\": () => (/* binding */ R),\n/* harmony export */   \"Array\": () => (/* binding */ D),\n/* harmony export */   \"Bool\": () => (/* binding */ O),\n/* harmony export */   \"Character\": () => (/* binding */ P),\n/* harmony export */   \"Dictionary\": () => (/* binding */ V),\n/* harmony export */   \"Event\": () => (/* binding */ G),\n/* harmony export */   \"Fix64\": () => (/* binding */ W),\n/* harmony export */   \"Identity\": () => (/* binding */ c),\n/* harmony export */   \"Int\": () => (/* binding */ d),\n/* harmony export */   \"Int128\": () => (/* binding */ I),\n/* harmony export */   \"Int16\": () => (/* binding */ g),\n/* harmony export */   \"Int256\": () => (/* binding */ b),\n/* harmony export */   \"Int32\": () => (/* binding */ y),\n/* harmony export */   \"Int64\": () => (/* binding */ x),\n/* harmony export */   \"Int8\": () => (/* binding */ l),\n/* harmony export */   \"Optional\": () => (/* binding */ B),\n/* harmony export */   \"Path\": () => (/* binding */ z),\n/* harmony export */   \"Reference\": () => (/* binding */ C),\n/* harmony export */   \"Resource\": () => (/* binding */ T),\n/* harmony export */   \"String\": () => (/* binding */ k),\n/* harmony export */   \"Struct\": () => (/* binding */ q),\n/* harmony export */   \"UFix64\": () => (/* binding */ j),\n/* harmony export */   \"UInt\": () => (/* binding */ a),\n/* harmony export */   \"UInt128\": () => (/* binding */ h),\n/* harmony export */   \"UInt16\": () => (/* binding */ s),\n/* harmony export */   \"UInt256\": () => (/* binding */ E),\n/* harmony export */   \"UInt32\": () => (/* binding */ v),\n/* harmony export */   \"UInt64\": () => (/* binding */ m),\n/* harmony export */   \"UInt8\": () => (/* binding */ p),\n/* harmony export */   \"Void\": () => (/* binding */ N),\n/* harmony export */   \"Word16\": () => (/* binding */ S),\n/* harmony export */   \"Word32\": () => (/* binding */ F),\n/* harmony export */   \"Word64\": () => (/* binding */ A),\n/* harmony export */   \"Word8\": () => (/* binding */ U),\n/* harmony export */   \"_Array\": () => (/* binding */ D)\n/* harmony export */ });\nvar e=function(e,t,n){return{label:e,asArgument:t,asInjection:n}},t=function(e){return Array.isArray(e)},n=function(e){return\"object\"==typeof e},r=function(e){return null==e},i=function(e){return\"number\"==typeof e},o=function(e){return Number.isInteger(e)},u=function(e){return\"string\"==typeof e},f=function(e){throw new Error(\"Type Error: \"+e)},c=e(\"Identity\",function(e){return e},function(e){return e}),a=e(\"UInt\",function(e){if(i(e)&&o(e))return{type:\"UInt\",value:e.toString()};f(\"Expected Positive Integer for type Unsigned Int\")},function(e){return e}),d=e(\"Int\",function(e){if(i(e)&&o(e))return{type:\"Int\",value:e.toString()};f(\"Expected Integer for type Int\")},function(e){return e}),p=e(\"UInt8\",function(e){if(i(e)&&o(e))return{type:\"UInt8\",value:e.toString()};f(\"Expected integer for UInt8\")},function(e){return e}),l=e(\"Int8\",function(e){if(i(e)&&o(e))return{type:\"Int8\",value:e.toString()};f(\"Expected positive integer for Int8\")},function(e){return e}),s=e(\"UInt16\",function(e){if(i(e)&&o(e))return{type:\"UInt16\",value:e.toString()};f(\"Expected integer for UInt16\")},function(e){return e}),g=e(\"Int16\",function(e){if(i(e)&&o(e))return{type:\"Int16\",value:e.toString()};f(\"Expected positive integer for Int16\")},function(e){return e}),v=e(\"UInt32\",function(e){if(i(e)&&o(e))return{type:\"UInt32\",value:e.toString()};f(\"Expected integer for UInt32\")},function(e){return e}),y=e(\"Int32\",function(e){if(i(e)&&o(e))return{type:\"Int32\",value:e.toString()};f(\"Expected positive integer for Int32\")},function(e){return e}),m=e(\"UInt64\",function(e){if(i(e)&&o(e))return{type:\"UInt64\",value:e.toString()};f(\"Expected integer for UInt64\")},function(e){return e}),x=e(\"Int64\",function(e){if(i(e)&&o(e))return{type:\"Int64\",value:e.toString()};f(\"Expected positive integer for Int64\")},function(e){return e}),h=e(\"UInt128\",function(e){if(i(e)&&o(e))return{type:\"UInt128\",value:e.toString()};f(\"Expected integer for UInt128\")},function(e){return e}),I=e(\"Int128\",function(e){if(i(e)&&o(e))return{type:\"Int128\",value:e.toString()};f(\"Expected positive integer for Int128\")},function(e){return e}),E=e(\"UInt256\",function(e){if(i(e)&&o(e))return{type:\"UInt256\",value:e.toString()};f(\"Expected integer for UInt256\")},function(e){return e}),b=e(\"Int256\",function(e){if(i(e)&&o(e))return{type:\"Int256\",value:e.toString()};f(\"Expected integer for Int256\")},function(e){return e}),U=e(\"Word8\",function(e){if(i(e)&&o(e))return{type:\"Word8\",value:e.toString()};f(\"Expected positive number for Word8\")},function(e){return e}),S=e(\"Word16\",function(e){if(i(e)&&o(e))return{type:\"Word16\",value:e.toString()};f(\"Expected positive number for Word16\")},function(e){return e}),F=e(\"Word32\",function(e){if(i(e)&&o(e))return{type:\"Word32\",value:e.toString()};f(\"Expected positive number for Word32\")},function(e){return e}),A=e(\"Word64\",function(e){if(i(e)&&o(e))return{type:\"Word64\",value:e.toString()};f(\"Expected positive number for Word64\")},function(e){return e}),w=function(){console.error(\"\\n          %c@onflow/types Deprecation Notice\\n          ========================\\n\\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\\n\\n          =======================\\n        \".replace(/\\n\\s+/g,\"\\n\").trim(),\"font-weight:bold;font-family:monospace;\")},j=e(\"UFix64\",function(e){if(u(e)){var t=e.split(\".\");return 2!==t.length&&f(\"Expected one decimal but found \"+t.length+\" in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"),(0==t[1].length||t[1].length>8)&&f(\"Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found \"+t[1].length+\" digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"),{type:\"UFix64\",value:e}}if(i(e))return w(),{type:\"UFix64\",value:e.toString()};f(\"Expected String for UFix64\")},function(e){return e}),W=e(\"Fix64\",function(e){if(u(e)){var t=e.split(\".\");return 2!==t.length&&f(\"Expected one decimal but found \"+t.length+\" in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"),(0==t[1].length||t[1].length>8)&&f(\"Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found \"+t[1].length+\" digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"),{type:\"Fix64\",value:e}}if(i(e))return w(),{type:\"Fix64\",value:e.toString()};f(\"Expected String for Fix64\")},function(e){return e}),k=e(\"String\",function(e){if(u(e))return{type:\"String\",value:e};f(\"Expected String for type String\")},function(e){return e}),P=e(\"Character\",function(e){if(u(e))return{type:\"Character\",value:e};f(\"Expected Character for type Character\")},function(e){return e}),O=e(\"Bool\",function(e){if(\"boolean\"==typeof e)return{type:\"Bool\",value:e};f(\"Expected Boolean for type Bool\")},function(e){return e}),R=e(\"Address\",function(e){if(u(e))return{type:\"Address\",value:e};f(\"Expected Address for type Address\")},function(e){return e}),N=e(\"Void\",function(e){if(!e||r(e))return{type:\"Void\"};f(\"Expected Void for type Void\")},function(e){return e}),B=function(t){return e(\"Optional\",function(e){return{type:\"Optional\",value:r(e)?null:t.asArgument(e)}},function(e){return e})},C=e(\"Reference\",function(e){if(n(e))return{type:\"Reference\",value:e};f(\"Expected Object for type Reference\")},function(e){return e}),D=function(n){return void 0===n&&(n=[]),e(\"Array\",function(e){return{type:\"Array\",value:t(n)?n.map(function(t,n){return t.asArgument(e[n])}):e.map(function(e){return n.asArgument(e)})}},function(e){return e})},V=function(r){return void 0===r&&(r=[]),e(\"Dictionary\",function(e){if(n(e))return{type:\"Dictionary\",value:t(r)?r.map(function(t,n){return{key:t.key.asArgument(e[n].key),value:t.value.asArgument(e[n].value)}}):t(e)?e.map(function(e){return{key:r.key.asArgument(e.key),value:r.value.asArgument(e.value)}}):[{key:r.key.asArgument(e.key),value:r.value.asArgument(e.value)}]};f(\"Expected Object for type Dictionary\")},function(e){return e})},G=function(r,i){return void 0===i&&(i=[]),e(\"Event\",function(e){if(n(e))return{type:\"Event\",value:{id:r,fields:t(i)?i.map(function(t,n){return{name:e.fields[n].name,value:t.value.asArgument(e.fields[n].value)}}):e.fields.map(function(e){return{name:e.name,value:i.value.asArgument(e.value)}})}};f(\"Expected Object for type Event\")},function(e){return e})},T=function(r,i){return void 0===i&&(i=[]),e(\"Resource\",function(e){if(n(e))return{type:\"Resource\",value:{id:r,fields:t(i)?i.map(function(t,n){return{name:e.fields[n].name,value:t.value.asArgument(e.fields[n].value)}}):e.fields.map(function(e){return{name:e.name,value:i.value.asArgument(e.value)}})}};f(\"Expected Object for type Resource\")},function(e){return e})},q=function(r,i){return void 0===i&&(i=[]),e(\"Struct\",function(e){if(n(e))return{type:\"Struct\",value:{id:r,fields:t(i)?i.map(function(t,n){return{name:e.fields[n].name,value:t.value.asArgument(e.fields[n].value)}}):e.fields.map(function(e){return{name:e.name,value:i.value.asArgument(e.value)}})}};f(\"Expected Object for type Struct\")},function(e){return e})},z=e(\"Path\",function(e){if(n(e))return u(e.domain)||f(\"Expected a string for the Path domain but found \"+e.domain+\". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"),\"storage\"!==e.domain&&\"private\"!==e.domain&&\"public\"!==e.domain&&f('Expected either \"storage\", \"private\" or \"public\" as the Path domain but found '+e.domain+\". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"),u(e.identifier)||f(\"Expected a string for the Path identifier but found \"+e.identifier+\". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"),{type:\"Path\",value:{domain:e.domain,identifier:e.identifier}};f(\"Expected Object for type Path\")},function(e){return e});\n//# sourceMappingURL=types.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/types/dist/types.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/util-actor/dist/actor.module.js":
/*!**************************************************************!*\
  !*** ./node_modules/@onflow/util-actor/dist/actor.module.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EXIT\": () => (/* binding */ v),\n/* harmony export */   \"INIT\": () => (/* binding */ c),\n/* harmony export */   \"SNAPSHOT\": () => (/* binding */ l),\n/* harmony export */   \"SUBSCRIBE\": () => (/* binding */ f),\n/* harmony export */   \"TERMINATE\": () => (/* binding */ h),\n/* harmony export */   \"UNSUBSCRIBE\": () => (/* binding */ s),\n/* harmony export */   \"UPDATED\": () => (/* binding */ a),\n/* harmony export */   \"kill\": () => (/* binding */ S),\n/* harmony export */   \"send\": () => (/* binding */ b),\n/* harmony export */   \"snapshoter\": () => (/* binding */ E),\n/* harmony export */   \"spawn\": () => (/* binding */ m),\n/* harmony export */   \"subscriber\": () => (/* binding */ I)\n/* harmony export */ });\n/* harmony import */ var queue_microtask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! queue-microtask */ \"./node_modules/queue-microtask/index.js\");\n/* harmony import */ var queue_microtask__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(queue_microtask__WEBPACK_IMPORTED_MODULE_0__);\nfunction t(){return(t=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}function e(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function r(n,t,e){if(!n.s){if(e instanceof o){if(!e.s)return void(e.o=r.bind(null,n,t));1&t&&(t=e.s),e=e.v}if(e&&e.then)return void e.then(r.bind(null,n,t),r.bind(null,n,2));n.s=t,n.v=e;var i=n.o;i&&i(n)}}var o=function(){function n(){}return n.prototype.then=function(t,e){var o=new n,i=this.s;if(i){var u=1&i?t:e;if(u){try{r(o,1,u(this.v))}catch(n){r(o,2,n)}return o}return this}return this.o=function(n){try{var i=n.v;1&n.s?r(o,1,t?t(i):i):e?r(o,1,e(i)):r(o,2,i)}catch(n){r(o,2,n)}},o},n}();function i(n){return n instanceof o&&1&n.s}function u(n,t,e){for(var u;;){var c=n();if(i(c)&&(c=c.v),!c)return f;if(c.then){u=0;break}var f=e();if(f&&f.then){if(!i(f)){u=1;break}f=f.s}if(t){var s=t();if(s&&s.then&&!i(s)){u=2;break}}}var a=new o,l=r.bind(null,a,2);return(0===u?c.then(h):1===u?f.then(v):s.then(d)).then(void 0,l),a;function v(o){f=o;do{if(t&&(s=t())&&s.then&&!i(s))return void s.then(d).then(void 0,l);if(!(c=n())||i(c)&&!c.v)return void r(a,1,f);if(c.then)return void c.then(h).then(void 0,l);i(f=e())&&(f=f.v)}while(!f||!f.then);f.then(v).then(void 0,l)}function h(n){n?(f=e())&&f.then?f.then(v).then(void 0,l):v(f):r(a,1,f)}function d(){(c=n())?c.then?c.then(h).then(void 0,l):h(c):r(a,1,f)}}var c=\"INIT\",f=\"SUBSCRIBE\",s=\"UNSUBSCRIBE\",a=\"UPDATED\",l=\"SNAPSHOT\",v=\"EXIT\",h=\"TERMINATE\",d=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof __webpack_require__.g&&__webpack_require__.g.global===__webpack_require__.g&&__webpack_require__.g||\"object\"==typeof window&&window.window===window&&window;d.FCL_REGISTRY=null==d.FCL_REGISTRY?{}:d.FCL_REGISTRY;var R=0,b=function(n,t,e,r){return void 0===r&&(r={}),new Promise(function(o,i){var u=r.expectReply||!1,c=null!=r.timeout?r.timeout:5e3;u&&c&&setTimeout(function(){return i(new Error(\"Timeout: \"+c+\"ms passed without a response.\"))},c);var f={to:n,from:r.from,tag:t,data:e,timeout:c,reply:o,reject:i};try{d.FCL_REGISTRY[n].mailbox.deliver(f),u||o(!0)}catch(n){console.error(\"FCL.Actor -- Could Not Deliver Message\",f,n)}})},S=function(n){delete d.FCL_REGISTRY[n]},m=function(r,o){if(void 0===o&&(o=null),null==o&&(o=++R),null!=d.FCL_REGISTRY[o])return o;var i,c;d.FCL_REGISTRY[o]={addr:o,mailbox:(c=[],{deliver:function(n){try{return c.push(n),i&&(i(c.shift()),i=void 0),Promise.resolve()}catch(n){return Promise.reject(n)}},receive:function(){return new Promise(function(n){var t=c.shift();if(t)return n(t);i=n})}}),subs:new Set,kvs:{}};var f,s={self:function(){return o},receive:function(){return d.FCL_REGISTRY[o].mailbox.receive()},send:function(n,t,e,r){return void 0===r&&(r={}),r.from=o,b(n,t,e,r)},sendSelf:function(n,t,e){d.FCL_REGISTRY[o]&&b(o,n,t,e)},broadcast:function(n,t,r){void 0===r&&(r={}),r.from=o;for(var i,u=function(n,t){var r;if(\"undefined\"==typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(r=function(n,t){if(n){if(\"string\"==typeof n)return e(n,void 0);var r=Object.prototype.toString.call(n).slice(8,-1);return\"Object\"===r&&n.constructor&&(r=n.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(n):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,void 0):void 0}}(n))){r&&(n=r);var o=0;return function(){return o>=n.length?{done:!0}:{done:!1,value:n[o++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}return(r=n[Symbol.iterator]()).next.bind(r)}(d.FCL_REGISTRY[o].subs);!(i=u()).done;)b(i.value,n,t,r)},subscribe:function(n){return null!=n&&d.FCL_REGISTRY[o].subs.add(n)},unsubscribe:function(n){return null!=n&&d.FCL_REGISTRY[o].subs.delete(n)},subscriberCount:function(){return d.FCL_REGISTRY[o].subs.size},hasSubs:function(){return!!d.FCL_REGISTRY[o].subs.size},put:function(n,t){null!=n&&(d.FCL_REGISTRY[o].kvs[n]=t)},get:function(n,t){var e=d.FCL_REGISTRY[o].kvs[n];return null==e?t:e},delete:function(n){delete d.FCL_REGISTRY[o].kvs[n]},update:function(n,t){null!=n&&(d.FCL_REGISTRY[o].kvs[n]=t(d.FCL_REGISTRY[o].kvs[n]))},keys:function(){return Object.keys(d.FCL_REGISTRY[o].kvs)},all:function(){return d.FCL_REGISTRY[o].kvs},where:function(n){return Object.keys(d.FCL_REGISTRY[o].kvs).reduce(function(e,r){var i;return n.test(r)?t({},e,((i={})[r]=d.FCL_REGISTRY[o].kvs[r],i)):e},{})},merge:function(n){void 0===n&&(n={}),Object.keys(n).forEach(function(t){return d.FCL_REGISTRY[o].kvs[t]=n[t]})}};return\"object\"==typeof r&&(void 0===(f=r)&&(f={}),r=function(n){try{var t=function(){var t=u(function(){return 1},void 0,function(){return Promise.resolve(n.receive()).then(function(t){var e=function(e,r){try{var o=function(e,r){try{var o=function(){function e(){return Promise.resolve(f[t.tag](n,t,t.data||{})).then(function(){})}var r=function(){if(\"EXIT\"===t.tag){var e=function(){if(\"function\"==typeof f.TERMINATE)return Promise.resolve(f.TERMINATE(n,t,t.data||{})).then(function(){})}();if(e&&e.then)return e.then(function(){})}}();return r&&r.then?r.then(e):e()}()}catch(n){return r(n)}return o&&o.then?o.then(void 0,r):o}(0,function(e){console.error(n.self()+\" Error\",t,e)})}catch(n){return}return o&&o.then?o.then(r.bind(null,!1),r.bind(null,!0)):void 0}(0,function(n,t){});if(e&&e.then)return e.then(function(){})})});return t&&t.then?t.then(function(){}):void 0},e=function(){if(\"function\"==typeof f.INIT)return Promise.resolve(f.INIT(n)).then(function(){})}();return Promise.resolve(e&&e.then?e.then(t):t())}catch(n){return Promise.reject(n)}}),queue_microtask__WEBPACK_IMPORTED_MODULE_0___default()(function(){try{return Promise.resolve(r(s)).then(function(){S(o)})}catch(n){return Promise.reject(n)}}),o};function I(n,t,e){t(n);var r=m(function(t){try{var r;return t.send(n,\"SUBSCRIBE\"),Promise.resolve(u(function(){return!r&&1},void 0,function(){return Promise.resolve(t.receive()).then(function(o){if(\"@EXIT\"===o.tag)return t.send(n,\"UNSUBSCRIBE\"),void(r=1);e(o.data)})}))}catch(n){return Promise.reject(n)}});return function(){return b(r,\"@EXIT\")}}function E(n,t){return t(n),b(n,\"SNAPSHOT\",null,{expectReply:!0,timeout:0})}\n//# sourceMappingURL=actor.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@onflow/util-actor/dist/actor.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/util-address/dist/util-address.module.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@onflow/util-address/dist/util-address.module.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"display\": () => (/* binding */ u),\n/* harmony export */   \"sansPrefix\": () => (/* binding */ n),\n/* harmony export */   \"withPrefix\": () => (/* binding */ l)\n/* harmony export */ });\nfunction n(n){return null==n?null:n.replace(/^0x/,\"\").replace(/^Fx/,\"\")}function l(l){return null==l?null:\"0x\"+n(l)}function u(n){return l(n)}\n//# sourceMappingURL=util-address.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9uZmxvdy91dGlsLWFkZHJlc3MvZGlzdC91dGlsLWFkZHJlc3MubW9kdWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9Ab25mbG93L3V0aWwtYWRkcmVzcy9kaXN0L3V0aWwtYWRkcmVzcy5tb2R1bGUuanM/YjJhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBuKG4pe3JldHVybiBudWxsPT1uP251bGw6bi5yZXBsYWNlKC9eMHgvLFwiXCIpLnJlcGxhY2UoL15GeC8sXCJcIil9ZnVuY3Rpb24gbChsKXtyZXR1cm4gbnVsbD09bD9udWxsOlwiMHhcIituKGwpfWZ1bmN0aW9uIHUobil7cmV0dXJuIGwobil9ZXhwb3J0e3UgYXMgZGlzcGxheSxuIGFzIHNhbnNQcmVmaXgsbCBhcyB3aXRoUHJlZml4fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwtYWRkcmVzcy5tb2R1bGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@onflow/util-address/dist/util-address.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/util-invariant/dist/util-invariant.module.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@onflow/util-invariant/dist/util-invariant.module.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"invariant\": () => (/* binding */ n)\n/* harmony export */ });\nfunction n(n,t){if(!n){var r,o=new Error(\"INVARIANT \"+t);throw o.stack=o.stack.split(\"\\n\").filter(function(n){return!/at invariant/.test(n)}).join(\"\\n\"),(r=console).error.apply(r,[\"\\n\\n---\\n\\n\",o,\"\\n\\n\"].concat([].slice.call(arguments,2),[\"\\n\\n---\\n\\n\"])),o}}\n//# sourceMappingURL=util-invariant.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9uZmxvdy91dGlsLWludmFyaWFudC9kaXN0L3V0aWwtaW52YXJpYW50Lm1vZHVsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL0BvbmZsb3cvdXRpbC1pbnZhcmlhbnQvZGlzdC91dGlsLWludmFyaWFudC5tb2R1bGUuanM/NTMyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBuKG4sdCl7aWYoIW4pe3ZhciByLG89bmV3IEVycm9yKFwiSU5WQVJJQU5UIFwiK3QpO3Rocm93IG8uc3RhY2s9by5zdGFjay5zcGxpdChcIlxcblwiKS5maWx0ZXIoZnVuY3Rpb24obil7cmV0dXJuIS9hdCBpbnZhcmlhbnQvLnRlc3Qobil9KS5qb2luKFwiXFxuXCIpLChyPWNvbnNvbGUpLmVycm9yLmFwcGx5KHIsW1wiXFxuXFxuLS0tXFxuXFxuXCIsbyxcIlxcblxcblwiXS5jb25jYXQoW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMiksW1wiXFxuXFxuLS0tXFxuXFxuXCJdKSksb319ZXhwb3J0e24gYXMgaW52YXJpYW50fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwtaW52YXJpYW50Lm1vZHVsZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@onflow/util-invariant/dist/util-invariant.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/util-template/dist/template.module.js":
/*!********************************************************************!*\
  !*** ./node_modules/@onflow/util-template/dist/template.module.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"interleave\": () => (/* binding */ n),\n/* harmony export */   \"template\": () => (/* binding */ o)\n/* harmony export */ });\nfunction n(t,o,r){if(void 0===t&&(t=[]),void 0===o&&(o=[]),void 0===r&&(r=[]),!t.length&&!o.length)return r;if(!t.length)return r;if(!o.length)return[].concat(r,[t[0]]);var e=t[0],i=t.slice(1),a=o[0],u=o.slice(1);return void 0!==e&&r.push(e),void 0!==a&&r.push(a),n(i,u,r)}function t(n){return function(o){return\"function\"==typeof o?(console.warn(\"\\n        %cFCL/SDK Deprecation Notice\\n        ============================\\n\\n        Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\\n        You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\\n\\n        ============================\\n      \",\"font-weight:bold;font-family:monospace;\"),t(n)(o(n))):String(o)}}function o(o){for(var r=arguments.length,e=new Array(r>1?r-1:0),i=1;i<r;i++)e[i-1]=arguments[i];return\"string\"==typeof o?function(){return o}:Array.isArray(o)?function(r){return n(o,e.map(t(r))).join(\"\").trim()}:o}\n//# sourceMappingURL=template.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9uZmxvdy91dGlsLXRlbXBsYXRlL2Rpc3QvdGVtcGxhdGUubW9kdWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL0BvbmZsb3cvdXRpbC10ZW1wbGF0ZS9kaXN0L3RlbXBsYXRlLm1vZHVsZS5qcz9lZmZmIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG4odCxvLHIpe2lmKHZvaWQgMD09PXQmJih0PVtdKSx2b2lkIDA9PT1vJiYobz1bXSksdm9pZCAwPT09ciYmKHI9W10pLCF0Lmxlbmd0aCYmIW8ubGVuZ3RoKXJldHVybiByO2lmKCF0Lmxlbmd0aClyZXR1cm4gcjtpZighby5sZW5ndGgpcmV0dXJuW10uY29uY2F0KHIsW3RbMF1dKTt2YXIgZT10WzBdLGk9dC5zbGljZSgxKSxhPW9bMF0sdT1vLnNsaWNlKDEpO3JldHVybiB2b2lkIDAhPT1lJiZyLnB1c2goZSksdm9pZCAwIT09YSYmci5wdXNoKGEpLG4oaSx1LHIpfWZ1bmN0aW9uIHQobil7cmV0dXJuIGZ1bmN0aW9uKG8pe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG8/KGNvbnNvbGUud2FybihcIlxcbiAgICAgICAgJWNGQ0wvU0RLIERlcHJlY2F0aW9uIE5vdGljZVxcbiAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxcblxcbiAgICAgICAgSW50ZXJvcG9sYXRpb24gb2YgZnVuY3Rpb25zIGludG8gdGVtcGxhdGUgbGl0ZXJhbHMgd2lsbCBub3QgYmUgYSB0aGluZyBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgdGhlIEZsb3ctSlMtU0RLIG9yIEZDTC5cXG4gICAgICAgIFlvdSBjYW4gbGVhcm4gbW9yZSAoaW5jbHVkaW5nIGEgZ3VpZGUgb24gY29tbW9uIHRyYW5zaXRpb24gcGF0aHMpIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9vbmZsb3cvZmxvdy1qcy1zZGsvYmxvYi9tYXN0ZXIvcGFja2FnZXMvc2RrL1RSQU5TSVRJT05TLm1kIzAwMDEtZGVwcmVjYXRlLXBhcmFtc1xcblxcbiAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxcbiAgICAgIFwiLFwiZm9udC13ZWlnaHQ6Ym9sZDtmb250LWZhbWlseTptb25vc3BhY2U7XCIpLHQobikobyhuKSkpOlN0cmluZyhvKX19ZnVuY3Rpb24gbyhvKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheShyPjE/ci0xOjApLGk9MTtpPHI7aSsrKWVbaS0xXT1hcmd1bWVudHNbaV07cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG8/ZnVuY3Rpb24oKXtyZXR1cm4gb306QXJyYXkuaXNBcnJheShvKT9mdW5jdGlvbihyKXtyZXR1cm4gbihvLGUubWFwKHQocikpKS5qb2luKFwiXCIpLnRyaW0oKX06b31leHBvcnR7biBhcyBpbnRlcmxlYXZlLG8gYXMgdGVtcGxhdGV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGVtcGxhdGUubW9kdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@onflow/util-template/dist/template.module.js\n");

/***/ }),

/***/ "./node_modules/@onflow/util-uid/dist/util-uid.module.js":
/*!***************************************************************!*\
  !*** ./node_modules/@onflow/util-uid/dist/util-uid.module.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"uid\": () => (/* binding */ t)\n/* harmony export */ });\nvar r=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",n=r.length;function t(){for(var t=\"\",a=32;a--;)t+=r[Math.random()*n|0];return t}\n//# sourceMappingURL=util-uid.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9uZmxvdy91dGlsLXVpZC9kaXN0L3V0aWwtdWlkLm1vZHVsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL0BvbmZsb3cvdXRpbC11aWQvZGlzdC91dGlsLXVpZC5tb2R1bGUuanM/NTUzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcj1cImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5XCIsbj1yLmxlbmd0aDtmdW5jdGlvbiB0KCl7Zm9yKHZhciB0PVwiXCIsYT0zMjthLS07KXQrPXJbTWF0aC5yYW5kb20oKSpufDBdO3JldHVybiB0fWV4cG9ydHt0IGFzIHVpZH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLXVpZC5tb2R1bGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@onflow/util-uid/dist/util-uid.module.js\n");

/***/ }),

/***/ "./source/Provider.jsx":
/*!*****************************!*\
  !*** ./source/Provider.jsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Context\": () => (/* binding */ Context),\n/* harmony export */   \"Provider\": () => (/* binding */ Provider)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* harmony import */ var _decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @decentology/hyperverse */ \"@decentology/hyperverse\");\n/* harmony import */ var _decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./actions */ \"./source/actions/index.js\");\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\n\n\n\n\nvar Context = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default().createContext(null);\n\nfunction Provider(props) {\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_4___default().useState(null),\n      _React$useState2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_React$useState, 2),\n      isInitialized = _React$useState2[0],\n      setInitialized = _React$useState2[1];\n\n  var _useHyperverse = (0,_decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6__.useHyperverse)(),\n      network = _useHyperverse.network;\n\n  var initialize = /*#__PURE__*/function () {\n    var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee() {\n      var TribesAddress;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (network === _decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6__.networks.MainNet) {// TODO: Deploy to Flow Mainnet.\n              } else if (network === _decentology_hyperverse__WEBPACK_IMPORTED_MODULE_6__.networks.TestNet) {\n                _onflow_fcl__WEBPACK_IMPORTED_MODULE_5__.config().put('0xTribes', '0x1960ff14acc51991');\n              }\n\n              _context.next = 3;\n              return _onflow_fcl__WEBPACK_IMPORTED_MODULE_5__.config().get('0xTribes');\n\n            case 3:\n              TribesAddress = _context.sent;\n\n              if (typeof TribesAddress !== 'undefined') {\n                setInitialized(true);\n              } else {\n                setInitialized(false);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function initialize() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  react__WEBPACK_IMPORTED_MODULE_4___default().useEffect(function () {\n    initialize();\n  }, []);\n  var boundActions = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(_actions__WEBPACK_IMPORTED_MODULE_7__); _i < _Object$keys.length; _i++) {\n    var actionName = _Object$keys[_i];\n    boundActions[actionName] = _actions__WEBPACK_IMPORTED_MODULE_7__[actionName].bind(null, props.tenantID);\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default().createElement(Context.Provider, {\n    value: _objectSpread({\n      isInitialized: isInitialized\n    }, boundActions)\n  }, props.children);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvUHJvdmlkZXIuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL3NvdXJjZS9Qcm92aWRlci5qc3g/ZjcwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvclwiO1xuaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXlcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSBcIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgZmNsIGZyb20gJ0BvbmZsb3cvZmNsJztcbmltcG9ydCB7IG5ldHdvcmtzLCB1c2VIeXBlcnZlcnNlIH0gZnJvbSAnQGRlY2VudG9sb2d5L2h5cGVydmVyc2UnO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xudmFyIENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuZnVuY3Rpb24gUHJvdmlkZXIocHJvcHMpIHtcbiAgdmFyIF9SZWFjdCR1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlKG51bGwpLFxuICAgICAgX1JlYWN0JHVzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF9SZWFjdCR1c2VTdGF0ZSwgMiksXG4gICAgICBpc0luaXRpYWxpemVkID0gX1JlYWN0JHVzZVN0YXRlMlswXSxcbiAgICAgIHNldEluaXRpYWxpemVkID0gX1JlYWN0JHVzZVN0YXRlMlsxXTtcblxuICB2YXIgX3VzZUh5cGVydmVyc2UgPSB1c2VIeXBlcnZlcnNlKCksXG4gICAgICBuZXR3b3JrID0gX3VzZUh5cGVydmVyc2UubmV0d29yaztcblxuICB2YXIgaW5pdGlhbGl6ZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkge1xuICAgICAgdmFyIFRyaWJlc0FkZHJlc3M7XG4gICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICBpZiAobmV0d29yayA9PT0gbmV0d29ya3MuTWFpbk5ldCkgey8vIFRPRE86IERlcGxveSB0byBGbG93IE1haW5uZXQuXG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAobmV0d29yayA9PT0gbmV0d29ya3MuVGVzdE5ldCkge1xuICAgICAgICAgICAgICAgIGZjbC5jb25maWcoKS5wdXQoJzB4VHJpYmVzJywgJzB4MTk2MGZmMTRhY2M1MTk5MScpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgICAgIHJldHVybiBmY2wuY29uZmlnKCkuZ2V0KCcweFRyaWJlcycpO1xuXG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgIFRyaWJlc0FkZHJlc3MgPSBfY29udGV4dC5zZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgVHJpYmVzQWRkcmVzcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBzZXRJbml0aWFsaXplZCh0cnVlKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRJbml0aWFsaXplZChmYWxzZSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgX2NhbGxlZSk7XG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0oKTtcblxuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGluaXRpYWxpemUoKTtcbiAgfSwgW10pO1xuICB2YXIgYm91bmRBY3Rpb25zID0ge307XG5cbiAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyhhY3Rpb25zKTsgX2kgPCBfT2JqZWN0JGtleXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgdmFyIGFjdGlvbk5hbWUgPSBfT2JqZWN0JGtleXNbX2ldO1xuICAgIGJvdW5kQWN0aW9uc1thY3Rpb25OYW1lXSA9IGFjdGlvbnNbYWN0aW9uTmFtZV0uYmluZChudWxsLCBwcm9wcy50ZW5hbnRJRCk7XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBfb2JqZWN0U3ByZWFkKHtcbiAgICAgIGlzSW5pdGlhbGl6ZWQ6IGlzSW5pdGlhbGl6ZWRcbiAgICB9LCBib3VuZEFjdGlvbnMpXG4gIH0sIHByb3BzLmNoaWxkcmVuKTtcbn1cblxuZXhwb3J0IHsgQ29udGV4dCwgUHJvdmlkZXIgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/Provider.jsx\n");

/***/ }),

/***/ "./source/actions/getAllTribes.js":
/*!****************************************!*\
  !*** ./source/actions/getAllTribes.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllTribes\": () => (/* binding */ getAllTribes)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* harmony import */ var _onflow_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @onflow/types */ \"./node_modules/@onflow/types/dist/types.module.js\");\n\n\n\nvar _templateObject;\n\n\n\n\n\nfunction getAllTribes(_x) {\n  return _getAllTribes.apply(this, arguments);\n}\n\nfunction _getAllTribes() {\n  _getAllTribes = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(tenantID) {\n    var allTribes;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.send([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.script(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n      import Tribes from 0xTribes\\n          \\n      pub fun main(tenantID: Address): [Tribes.TribeData] {\\n          return Tribes.getAllTribes(tenantID).values\\n      }\\n      \"]))), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.args([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(tenantID, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.Address)])]).then(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.decode);\n\n          case 3:\n            allTribes = _context.sent;\n            return _context.abrupt(\"return\", allTribes);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAllTribes.apply(this, arguments);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvYWN0aW9ucy9nZXRBbGxUcmliZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9zb3VyY2UvYWN0aW9ucy9nZXRBbGxUcmliZXMuanM/MzY2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90YWdnZWRUZW1wbGF0ZUxpdGVyYWxcIjtcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yXCI7XG5cbnZhciBfdGVtcGxhdGVPYmplY3Q7XG5cbmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gXCJAYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvclwiO1xuaW1wb3J0ICogYXMgZmNsIGZyb20gJ0BvbmZsb3cvZmNsJztcbmltcG9ydCAqIGFzIHQgZnJvbSAnQG9uZmxvdy90eXBlcyc7XG5cbmZ1bmN0aW9uIGdldEFsbFRyaWJlcyhfeCkge1xuICByZXR1cm4gX2dldEFsbFRyaWJlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfZ2V0QWxsVHJpYmVzKCkge1xuICBfZ2V0QWxsVHJpYmVzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0ZW5hbnRJRCkge1xuICAgIHZhciBhbGxUcmliZXM7XG4gICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwO1xuICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgICByZXR1cm4gZmNsLnNlbmQoW2ZjbC5zY3JpcHQoX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFtcIlxcbiAgICAgIGltcG9ydCBUcmliZXMgZnJvbSAweFRyaWJlc1xcbiAgICAgICAgICBcXG4gICAgICBwdWIgZnVuIG1haW4odGVuYW50SUQ6IEFkZHJlc3MpOiBbVHJpYmVzLlRyaWJlRGF0YV0ge1xcbiAgICAgICAgICByZXR1cm4gVHJpYmVzLmdldEFsbFRyaWJlcyh0ZW5hbnRJRCkudmFsdWVzXFxuICAgICAgfVxcbiAgICAgIFwiXSkpKSwgZmNsLmFyZ3MoW2ZjbC5hcmcodGVuYW50SUQsIHQuQWRkcmVzcyldKV0pLnRoZW4oZmNsLmRlY29kZSk7XG5cbiAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICBhbGxUcmliZXMgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdChcInJldHVyblwiLCBhbGxUcmliZXMpO1xuXG4gICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7XG4gICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0W1wiY2F0Y2hcIl0oMCk7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTtcblxuICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTtcbiAgfSkpO1xuICByZXR1cm4gX2dldEFsbFRyaWJlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgeyBnZXRBbGxUcmliZXMgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/actions/getAllTribes.js\n");

/***/ }),

/***/ "./source/actions/getCurrentTribe.js":
/*!*******************************************!*\
  !*** ./source/actions/getCurrentTribe.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCurrentTribe\": () => (/* binding */ getCurrentTribe)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* harmony import */ var _onflow_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @onflow/types */ \"./node_modules/@onflow/types/dist/types.module.js\");\n\n\n\nvar _templateObject;\n\n\n\n\n\nfunction getCurrentTribe(_x, _x2) {\n  return _getCurrentTribe.apply(this, arguments);\n}\n\nfunction _getCurrentTribe() {\n  _getCurrentTribe = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(tenantID, accountAddress) {\n    var allTribes;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.send([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.script(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n      import Tribes from 0xTribes\\n          \\n      pub fun main(tenantID: Address, accountAddress: Address): {String: String}? {\\n                              \\n          let identity = getAccount(accountAddress).getCapability(Tribes.IdentityPublicPath)\\n                                      .borrow<&Tribes.Identity{Tribes.IdentityPublic}>()\\n                                      ?? panic(\\\"Could not get the Identity.\\\")\\n      \\n          let tribe = identity.currentTribeName(tenantID)\\n      \\n          if tribe == nil {\\n              return nil\\n          }\\n      \\n          let returnObject: {String: String} = {}\\n          let tenantData = Tribes.getTribeData(tenantID, tribeName: tribe!)\\n          returnObject[\\\"name\\\"] = tribe\\n          returnObject[\\\"ipfsHash\\\"] = tenantData.ipfsHash\\n          returnObject[\\\"description\\\"] = tenantData.description\\n      \\n          return returnObject\\n      }\\n      \"]))), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.args([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(tenantID, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.Address), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(accountAddress, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.Address)])]).then(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.decode);\n\n          case 3:\n            allTribes = _context.sent;\n            return _context.abrupt(\"return\", allTribes);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getCurrentTribe.apply(this, arguments);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvYWN0aW9ucy9nZXRDdXJyZW50VHJpYmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9zb3VyY2UvYWN0aW9ucy9nZXRDdXJyZW50VHJpYmUuanM/ZjY4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90YWdnZWRUZW1wbGF0ZUxpdGVyYWxcIjtcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yXCI7XG5cbnZhciBfdGVtcGxhdGVPYmplY3Q7XG5cbmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gXCJAYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvclwiO1xuaW1wb3J0ICogYXMgZmNsIGZyb20gJ0BvbmZsb3cvZmNsJztcbmltcG9ydCAqIGFzIHQgZnJvbSAnQG9uZmxvdy90eXBlcyc7XG5cbmZ1bmN0aW9uIGdldEN1cnJlbnRUcmliZShfeCwgX3gyKSB7XG4gIHJldHVybiBfZ2V0Q3VycmVudFRyaWJlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIF9nZXRDdXJyZW50VHJpYmUoKSB7XG4gIF9nZXRDdXJyZW50VHJpYmUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRlbmFudElELCBhY2NvdW50QWRkcmVzcykge1xuICAgIHZhciBhbGxUcmliZXM7XG4gICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwO1xuICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgICByZXR1cm4gZmNsLnNlbmQoW2ZjbC5zY3JpcHQoX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFtcIlxcbiAgICAgIGltcG9ydCBUcmliZXMgZnJvbSAweFRyaWJlc1xcbiAgICAgICAgICBcXG4gICAgICBwdWIgZnVuIG1haW4odGVuYW50SUQ6IEFkZHJlc3MsIGFjY291bnRBZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogU3RyaW5nfT8ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcbiAgICAgICAgICBsZXQgaWRlbnRpdHkgPSBnZXRBY2NvdW50KGFjY291bnRBZGRyZXNzKS5nZXRDYXBhYmlsaXR5KFRyaWJlcy5JZGVudGl0eVB1YmxpY1BhdGgpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYm9ycm93PCZUcmliZXMuSWRlbnRpdHl7VHJpYmVzLklkZW50aXR5UHVibGljfT4oKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPz8gcGFuaWMoXFxcIkNvdWxkIG5vdCBnZXQgdGhlIElkZW50aXR5LlxcXCIpXFxuICAgICAgXFxuICAgICAgICAgIGxldCB0cmliZSA9IGlkZW50aXR5LmN1cnJlbnRUcmliZU5hbWUodGVuYW50SUQpXFxuICAgICAgXFxuICAgICAgICAgIGlmIHRyaWJlID09IG5pbCB7XFxuICAgICAgICAgICAgICByZXR1cm4gbmlsXFxuICAgICAgICAgIH1cXG4gICAgICBcXG4gICAgICAgICAgbGV0IHJldHVybk9iamVjdDoge1N0cmluZzogU3RyaW5nfSA9IHt9XFxuICAgICAgICAgIGxldCB0ZW5hbnREYXRhID0gVHJpYmVzLmdldFRyaWJlRGF0YSh0ZW5hbnRJRCwgdHJpYmVOYW1lOiB0cmliZSEpXFxuICAgICAgICAgIHJldHVybk9iamVjdFtcXFwibmFtZVxcXCJdID0gdHJpYmVcXG4gICAgICAgICAgcmV0dXJuT2JqZWN0W1xcXCJpcGZzSGFzaFxcXCJdID0gdGVuYW50RGF0YS5pcGZzSGFzaFxcbiAgICAgICAgICByZXR1cm5PYmplY3RbXFxcImRlc2NyaXB0aW9uXFxcIl0gPSB0ZW5hbnREYXRhLmRlc2NyaXB0aW9uXFxuICAgICAgXFxuICAgICAgICAgIHJldHVybiByZXR1cm5PYmplY3RcXG4gICAgICB9XFxuICAgICAgXCJdKSkpLCBmY2wuYXJncyhbZmNsLmFyZyh0ZW5hbnRJRCwgdC5BZGRyZXNzKSwgZmNsLmFyZyhhY2NvdW50QWRkcmVzcywgdC5BZGRyZXNzKV0pXSkudGhlbihmY2wuZGVjb2RlKTtcblxuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGFsbFRyaWJlcyA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGFsbFRyaWJlcyk7XG5cbiAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNztcbiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbXCJjYXRjaFwiXSgwKTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApO1xuXG4gICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA3XV0pO1xuICB9KSk7XG4gIHJldHVybiBfZ2V0Q3VycmVudFRyaWJlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCB7IGdldEN1cnJlbnRUcmliZSB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/actions/getCurrentTribe.js\n");

/***/ }),

/***/ "./source/actions/index.js":
/*!*********************************!*\
  !*** ./source/actions/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leaveTribe\": () => (/* reexport safe */ _leaveTribe_js__WEBPACK_IMPORTED_MODULE_0__.leaveTribe),\n/* harmony export */   \"getAllTribes\": () => (/* reexport safe */ _getAllTribes_js__WEBPACK_IMPORTED_MODULE_1__.getAllTribes),\n/* harmony export */   \"joinTribe\": () => (/* reexport safe */ _joinTribe_js__WEBPACK_IMPORTED_MODULE_2__.joinTribe),\n/* harmony export */   \"getCurrentTribe\": () => (/* reexport safe */ _getCurrentTribe_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTribe)\n/* harmony export */ });\n/* harmony import */ var _leaveTribe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./leaveTribe.js */ \"./source/actions/leaveTribe.js\");\n/* harmony import */ var _getAllTribes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAllTribes.js */ \"./source/actions/getAllTribes.js\");\n/* harmony import */ var _joinTribe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./joinTribe.js */ \"./source/actions/joinTribe.js\");\n/* harmony import */ var _getCurrentTribe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getCurrentTribe.js */ \"./source/actions/getCurrentTribe.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvYWN0aW9ucy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vc291cmNlL2FjdGlvbnMvaW5kZXguanM/YmE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBsZWF2ZVRyaWJlIH0gZnJvbSAnLi9sZWF2ZVRyaWJlLmpzJztcbmV4cG9ydCB7IGdldEFsbFRyaWJlcyB9IGZyb20gJy4vZ2V0QWxsVHJpYmVzLmpzJztcbmV4cG9ydCB7IGpvaW5UcmliZSB9IGZyb20gJy4vam9pblRyaWJlLmpzJztcbmV4cG9ydCB7IGdldEN1cnJlbnRUcmliZSB9IGZyb20gJy4vZ2V0Q3VycmVudFRyaWJlLmpzJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/actions/index.js\n");

/***/ }),

/***/ "./source/actions/joinTribe.js":
/*!*************************************!*\
  !*** ./source/actions/joinTribe.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"joinTribe\": () => (/* binding */ joinTribe)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* harmony import */ var _onflow_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @onflow/types */ \"./node_modules/@onflow/types/dist/types.module.js\");\n\n\n\nvar _templateObject;\n\n\n\n\n\nfunction joinTribe(_x, _x2) {\n  return _joinTribe.apply(this, arguments);\n}\n\nfunction _joinTribe() {\n  _joinTribe = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(tenantID, tribeName) {\n    var transactionID;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.send([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.transaction(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n      import Tribes from 0xTribes\\n      \\n      transaction(tenantID: Address, tribeName: String) {\\n          let TribesIdentity: &Tribes.Identity\\n          prepare(signer: AuthAccount) {\\n              if signer.borrow<&Tribes.Identity>(from: Tribes.IdentityStoragePath) == nil {\\n                  signer.save(<- Tribes.createIdentity(), to: Tribes.IdentityStoragePath)\\n                  signer.link<&Tribes.Identity{Tribes.IdentityPublic}>(Tribes.IdentityPublicPath, target: Tribes.IdentityStoragePath)\\n              }\\n              \\n              self.TribesIdentity = signer.borrow<&Tribes.Identity>(from: Tribes.IdentityStoragePath)\\n                                      ?? panic(\\\"Could not borrow the Tribes.Identity\\\")\\n          }\\n          execute {\\n              self.TribesIdentity.joinTribe(tenantID, tribeName: tribeName)\\n              log(\\\"This signer joined a Tribe.\\\")\\n          }\\n      }\\n      \"]))), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.args([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(tenantID, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.Address), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(tribeName, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.String)]), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.payer(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.proposer(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authorizations([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz]), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.limit(9999)]).then(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.decode);\n\n          case 3:\n            transactionID = _context.sent;\n            return _context.abrupt(\"return\", transactionID);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _joinTribe.apply(this, arguments);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvYWN0aW9ucy9qb2luVHJpYmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9zb3VyY2UvYWN0aW9ucy9qb2luVHJpYmUuanM/ODY5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90YWdnZWRUZW1wbGF0ZUxpdGVyYWxcIjtcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yXCI7XG5cbnZhciBfdGVtcGxhdGVPYmplY3Q7XG5cbmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gXCJAYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvclwiO1xuaW1wb3J0ICogYXMgZmNsIGZyb20gJ0BvbmZsb3cvZmNsJztcbmltcG9ydCAqIGFzIHQgZnJvbSAnQG9uZmxvdy90eXBlcyc7XG5cbmZ1bmN0aW9uIGpvaW5UcmliZShfeCwgX3gyKSB7XG4gIHJldHVybiBfam9pblRyaWJlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIF9qb2luVHJpYmUoKSB7XG4gIF9qb2luVHJpYmUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRlbmFudElELCB0cmliZU5hbWUpIHtcbiAgICB2YXIgdHJhbnNhY3Rpb25JRDtcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7XG4gICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMztcbiAgICAgICAgICAgIHJldHVybiBmY2wuc2VuZChbZmNsLnRyYW5zYWN0aW9uKF90ZW1wbGF0ZU9iamVjdCB8fCAoX3RlbXBsYXRlT2JqZWN0ID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbXCJcXG4gICAgICBpbXBvcnQgVHJpYmVzIGZyb20gMHhUcmliZXNcXG4gICAgICBcXG4gICAgICB0cmFuc2FjdGlvbih0ZW5hbnRJRDogQWRkcmVzcywgdHJpYmVOYW1lOiBTdHJpbmcpIHtcXG4gICAgICAgICAgbGV0IFRyaWJlc0lkZW50aXR5OiAmVHJpYmVzLklkZW50aXR5XFxuICAgICAgICAgIHByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkge1xcbiAgICAgICAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmVHJpYmVzLklkZW50aXR5Pihmcm9tOiBUcmliZXMuSWRlbnRpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHtcXG4gICAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LSBUcmliZXMuY3JlYXRlSWRlbnRpdHkoKSwgdG86IFRyaWJlcy5JZGVudGl0eVN0b3JhZ2VQYXRoKVxcbiAgICAgICAgICAgICAgICAgIHNpZ25lci5saW5rPCZUcmliZXMuSWRlbnRpdHl7VHJpYmVzLklkZW50aXR5UHVibGljfT4oVHJpYmVzLklkZW50aXR5UHVibGljUGF0aCwgdGFyZ2V0OiBUcmliZXMuSWRlbnRpdHlTdG9yYWdlUGF0aClcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgIFxcbiAgICAgICAgICAgICAgc2VsZi5UcmliZXNJZGVudGl0eSA9IHNpZ25lci5ib3Jyb3c8JlRyaWJlcy5JZGVudGl0eT4oZnJvbTogVHJpYmVzLklkZW50aXR5U3RvcmFnZVBhdGgpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/PyBwYW5pYyhcXFwiQ291bGQgbm90IGJvcnJvdyB0aGUgVHJpYmVzLklkZW50aXR5XFxcIilcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBleGVjdXRlIHtcXG4gICAgICAgICAgICAgIHNlbGYuVHJpYmVzSWRlbnRpdHkuam9pblRyaWJlKHRlbmFudElELCB0cmliZU5hbWU6IHRyaWJlTmFtZSlcXG4gICAgICAgICAgICAgIGxvZyhcXFwiVGhpcyBzaWduZXIgam9pbmVkIGEgVHJpYmUuXFxcIilcXG4gICAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICBcIl0pKSksIGZjbC5hcmdzKFtmY2wuYXJnKHRlbmFudElELCB0LkFkZHJlc3MpLCBmY2wuYXJnKHRyaWJlTmFtZSwgdC5TdHJpbmcpXSksIGZjbC5wYXllcihmY2wuYXV0aHopLCBmY2wucHJvcG9zZXIoZmNsLmF1dGh6KSwgZmNsLmF1dGhvcml6YXRpb25zKFtmY2wuYXV0aHpdKSwgZmNsLmxpbWl0KDk5OTkpXSkudGhlbihmY2wuZGVjb2RlKTtcblxuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uSUQgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdChcInJldHVyblwiLCB0cmFuc2FjdGlvbklEKTtcblxuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3O1xuICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFtcImNhdGNoXCJdKDApO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7XG5cbiAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7XG4gIH0pKTtcbiAgcmV0dXJuIF9qb2luVHJpYmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IHsgam9pblRyaWJlIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/actions/joinTribe.js\n");

/***/ }),

/***/ "./source/actions/leaveTribe.js":
/*!**************************************!*\
  !*** ./source/actions/leaveTribe.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leaveTribe\": () => (/* binding */ leaveTribe)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @onflow/fcl */ \"./node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* harmony import */ var _onflow_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @onflow/types */ \"./node_modules/@onflow/types/dist/types.module.js\");\n\n\n\nvar _templateObject;\n\n\n\n\n\nfunction leaveTribe(_x) {\n  return _leaveTribe.apply(this, arguments);\n}\n\nfunction _leaveTribe() {\n  _leaveTribe = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(tenantID) {\n    var transactionID;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.send([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.transaction(_templateObject || (_templateObject = (0,_babel_runtime_helpers_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"\\n      import Tribes from 0xTribes\\n\\n      transaction(tenantID: Address) {\\n          let TribesIdentity: &Tribes.Identity\\n          prepare(signer: AuthAccount) {\\n              self.TribesIdentity = signer.borrow<&Tribes.Identity>(from: Tribes.IdentityStoragePath)\\n                                      ?? panic(\\\"Could not borrow the Tribes.Identity\\\")\\n          }\\n          execute {\\n              self.TribesIdentity.leaveTribe(tenantID)\\n              log(\\\"This signer left their Tribe.\\\")\\n          }\\n      }\\n      \"]))), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.args([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.arg(tenantID, _onflow_types__WEBPACK_IMPORTED_MODULE_4__.Address)]), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.payer(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.proposer(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authorizations([_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.authz]), _onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.limit(9999)]).then(_onflow_fcl__WEBPACK_IMPORTED_MODULE_3__.decode);\n\n          case 3:\n            transactionID = _context.sent;\n            return _context.abrupt(\"return\", transactionID);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _leaveTribe.apply(this, arguments);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvYWN0aW9ucy9sZWF2ZVRyaWJlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vc291cmNlL2FjdGlvbnMvbGVhdmVUcmliZS5qcz9jNWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbFwiO1xuaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3JcIjtcblxudmFyIF90ZW1wbGF0ZU9iamVjdDtcblxuaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSBcIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yXCI7XG5pbXBvcnQgKiBhcyBmY2wgZnJvbSAnQG9uZmxvdy9mY2wnO1xuaW1wb3J0ICogYXMgdCBmcm9tICdAb25mbG93L3R5cGVzJztcblxuZnVuY3Rpb24gbGVhdmVUcmliZShfeCkge1xuICByZXR1cm4gX2xlYXZlVHJpYmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuZnVuY3Rpb24gX2xlYXZlVHJpYmUoKSB7XG4gIF9sZWF2ZVRyaWJlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0ZW5hbnRJRCkge1xuICAgIHZhciB0cmFuc2FjdGlvbklEO1xuICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDtcbiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzO1xuICAgICAgICAgICAgcmV0dXJuIGZjbC5zZW5kKFtmY2wudHJhbnNhY3Rpb24oX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFtcIlxcbiAgICAgIGltcG9ydCBUcmliZXMgZnJvbSAweFRyaWJlc1xcblxcbiAgICAgIHRyYW5zYWN0aW9uKHRlbmFudElEOiBBZGRyZXNzKSB7XFxuICAgICAgICAgIGxldCBUcmliZXNJZGVudGl0eTogJlRyaWJlcy5JZGVudGl0eVxcbiAgICAgICAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHtcXG4gICAgICAgICAgICAgIHNlbGYuVHJpYmVzSWRlbnRpdHkgPSBzaWduZXIuYm9ycm93PCZUcmliZXMuSWRlbnRpdHk+KGZyb206IFRyaWJlcy5JZGVudGl0eVN0b3JhZ2VQYXRoKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPz8gcGFuaWMoXFxcIkNvdWxkIG5vdCBib3Jyb3cgdGhlIFRyaWJlcy5JZGVudGl0eVxcXCIpXFxuICAgICAgICAgIH1cXG4gICAgICAgICAgZXhlY3V0ZSB7XFxuICAgICAgICAgICAgICBzZWxmLlRyaWJlc0lkZW50aXR5LmxlYXZlVHJpYmUodGVuYW50SUQpXFxuICAgICAgICAgICAgICBsb2coXFxcIlRoaXMgc2lnbmVyIGxlZnQgdGhlaXIgVHJpYmUuXFxcIilcXG4gICAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICBcIl0pKSksIGZjbC5hcmdzKFtmY2wuYXJnKHRlbmFudElELCB0LkFkZHJlc3MpXSksIGZjbC5wYXllcihmY2wuYXV0aHopLCBmY2wucHJvcG9zZXIoZmNsLmF1dGh6KSwgZmNsLmF1dGhvcml6YXRpb25zKFtmY2wuYXV0aHpdKSwgZmNsLmxpbWl0KDk5OTkpXSkudGhlbihmY2wuZGVjb2RlKTtcblxuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uSUQgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdChcInJldHVyblwiLCB0cmFuc2FjdGlvbklEKTtcblxuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3O1xuICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFtcImNhdGNoXCJdKDApO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7XG5cbiAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7XG4gIH0pKTtcbiAgcmV0dXJuIF9sZWF2ZVRyaWJlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCB7IGxlYXZlVHJpYmUgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/actions/leaveTribe.js\n");

/***/ }),

/***/ "./source/index.js":
/*!*************************!*\
  !*** ./source/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useTribes\": () => (/* reexport safe */ _useTribes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"Context\": () => (/* reexport safe */ _Provider_jsx__WEBPACK_IMPORTED_MODULE_1__.Context),\n/* harmony export */   \"Provider\": () => (/* reexport safe */ _Provider_jsx__WEBPACK_IMPORTED_MODULE_1__.Provider)\n/* harmony export */ });\n/* harmony import */ var _useTribes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useTribes.js */ \"./source/useTribes.js\");\n/* harmony import */ var _Provider_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Provider.jsx */ \"./source/Provider.jsx\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vc291cmNlL2luZGV4LmpzPzllZTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VUcmliZXMgfSBmcm9tICcuL3VzZVRyaWJlcy5qcyc7XG5leHBvcnQgeyBDb250ZXh0LCBQcm92aWRlciB9IGZyb20gJy4vUHJvdmlkZXIuanN4JzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/index.js\n");

/***/ }),

/***/ "./source/useTribes.js":
/*!*****************************!*\
  !*** ./source/useTribes.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Provider_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Provider.jsx */ \"./source/Provider.jsx\");\n\n\n\nfunction useTribes() {\n  var context = react__WEBPACK_IMPORTED_MODULE_0___default().useContext(_Provider_jsx__WEBPACK_IMPORTED_MODULE_1__.Context);\n  return context;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useTribes);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvdXNlVHJpYmVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL3NvdXJjZS91c2VUcmliZXMuanM/OWM5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29udGV4dCB9IGZyb20gJy4vUHJvdmlkZXIuanN4JztcblxuZnVuY3Rpb24gdXNlVHJpYmVzKCkge1xuICB2YXIgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XG4gIHJldHVybiBjb250ZXh0O1xufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VUcmliZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/useTribes.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz8xZmI1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbi8vIFN1cHBvcnQgZGVjb2RpbmcgVVJMLXNhZmUgYmFzZTY0IHN0cmluZ3MsIGFzIE5vZGUuanMgZG9lcy5cbi8vIFNlZTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0I1VSTF9hcHBsaWNhdGlvbnNcbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIGdldExlbnMgKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuXG4gIGlmIChsZW4gJSA0ID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCcpXG4gIH1cblxuICAvLyBUcmltIG9mZiBleHRyYSBieXRlcyBhZnRlciBwbGFjZWhvbGRlciBieXRlcyBhcmUgZm91bmRcbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vYmVhdGdhbW1pdC9iYXNlNjQtanMvaXNzdWVzLzQyXG4gIHZhciB2YWxpZExlbiA9IGI2NC5pbmRleE9mKCc9JylcbiAgaWYgKHZhbGlkTGVuID09PSAtMSkgdmFsaWRMZW4gPSBsZW5cblxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gdmFsaWRMZW4gPT09IGxlblxuICAgID8gMFxuICAgIDogNCAtICh2YWxpZExlbiAlIDQpXG5cbiAgcmV0dXJuIFt2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuXVxufVxuXG4vLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiBfYnl0ZUxlbmd0aCAoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSB7XG4gIHJldHVybiAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMgLyA0KSAtIHBsYWNlSG9sZGVyc0xlblxufVxuXG5mdW5jdGlvbiB0b0J5dGVBcnJheSAoYjY0KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuXG4gIHZhciBhcnIgPSBuZXcgQXJyKF9ieXRlTGVuZ3RoKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikpXG5cbiAgdmFyIGN1ckJ5dGUgPSAwXG5cbiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFyc1xuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMFxuICAgID8gdmFsaWRMZW4gLSA0XG4gICAgOiB2YWxpZExlblxuXG4gIHZhciBpXG4gIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNikgfFxuICAgICAgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDIpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAxKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildID4+IDIpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIGFyclxufVxuXG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQgKG51bSkge1xuICByZXR1cm4gbG9va3VwW251bSA+PiAxOCAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtICYgMHgzRl1cbn1cblxuZnVuY3Rpb24gZW5jb2RlQ2h1bmsgKHVpbnQ4LCBzdGFydCwgZW5kKSB7XG4gIHZhciB0bXBcbiAgdmFyIG91dHB1dCA9IFtdXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID1cbiAgICAgICgodWludDhbaV0gPDwgMTYpICYgMHhGRjAwMDApICtcbiAgICAgICgodWludDhbaSArIDFdIDw8IDgpICYgMHhGRjAwKSArXG4gICAgICAodWludDhbaSArIDJdICYgMHhGRilcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIHBhcnRzID0gW11cbiAgdmFyIG1heENodW5rTGVuZ3RoID0gMTYzODMgLy8gbXVzdCBiZSBtdWx0aXBsZSBvZiAzXG5cbiAgLy8gZ28gdGhyb3VnaCB0aGUgYXJyYXkgZXZlcnkgdGhyZWUgYnl0ZXMsIHdlJ2xsIGRlYWwgd2l0aCB0cmFpbGluZyBzdHVmZiBsYXRlclxuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChlbmNvZGVDaHVuayh1aW50OCwgaSwgKGkgKyBtYXhDaHVua0xlbmd0aCkgPiBsZW4yID8gbGVuMiA6IChpICsgbWF4Q2h1bmtMZW5ndGgpKSlcbiAgfVxuXG4gIC8vIHBhZCB0aGUgZW5kIHdpdGggemVyb3MsIGJ1dCBtYWtlIHN1cmUgdG8gbm90IGZvcmdldCB0aGUgZXh0cmEgYnl0ZXNcbiAgaWYgKGV4dHJhQnl0ZXMgPT09IDEpIHtcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDJdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDQpICYgMHgzRl0gK1xuICAgICAgJz09J1xuICAgIClcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAxMF0gK1xuICAgICAgbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdICtcbiAgICAgICc9J1xuICAgIClcbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKCcnKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/builtin-status-codes/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/builtin-status-codes/browser.js ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYnVpbHRpbi1zdGF0dXMtY29kZXMvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL2J1aWx0aW4tc3RhdHVzLWNvZGVzL2Jyb3dzZXIuanM/OGMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCIxMDBcIjogXCJDb250aW51ZVwiLFxuICBcIjEwMVwiOiBcIlN3aXRjaGluZyBQcm90b2NvbHNcIixcbiAgXCIxMDJcIjogXCJQcm9jZXNzaW5nXCIsXG4gIFwiMjAwXCI6IFwiT0tcIixcbiAgXCIyMDFcIjogXCJDcmVhdGVkXCIsXG4gIFwiMjAyXCI6IFwiQWNjZXB0ZWRcIixcbiAgXCIyMDNcIjogXCJOb24tQXV0aG9yaXRhdGl2ZSBJbmZvcm1hdGlvblwiLFxuICBcIjIwNFwiOiBcIk5vIENvbnRlbnRcIixcbiAgXCIyMDVcIjogXCJSZXNldCBDb250ZW50XCIsXG4gIFwiMjA2XCI6IFwiUGFydGlhbCBDb250ZW50XCIsXG4gIFwiMjA3XCI6IFwiTXVsdGktU3RhdHVzXCIsXG4gIFwiMjA4XCI6IFwiQWxyZWFkeSBSZXBvcnRlZFwiLFxuICBcIjIyNlwiOiBcIklNIFVzZWRcIixcbiAgXCIzMDBcIjogXCJNdWx0aXBsZSBDaG9pY2VzXCIsXG4gIFwiMzAxXCI6IFwiTW92ZWQgUGVybWFuZW50bHlcIixcbiAgXCIzMDJcIjogXCJGb3VuZFwiLFxuICBcIjMwM1wiOiBcIlNlZSBPdGhlclwiLFxuICBcIjMwNFwiOiBcIk5vdCBNb2RpZmllZFwiLFxuICBcIjMwNVwiOiBcIlVzZSBQcm94eVwiLFxuICBcIjMwN1wiOiBcIlRlbXBvcmFyeSBSZWRpcmVjdFwiLFxuICBcIjMwOFwiOiBcIlBlcm1hbmVudCBSZWRpcmVjdFwiLFxuICBcIjQwMFwiOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIFwiNDAxXCI6IFwiVW5hdXRob3JpemVkXCIsXG4gIFwiNDAyXCI6IFwiUGF5bWVudCBSZXF1aXJlZFwiLFxuICBcIjQwM1wiOiBcIkZvcmJpZGRlblwiLFxuICBcIjQwNFwiOiBcIk5vdCBGb3VuZFwiLFxuICBcIjQwNVwiOiBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiLFxuICBcIjQwNlwiOiBcIk5vdCBBY2NlcHRhYmxlXCIsXG4gIFwiNDA3XCI6IFwiUHJveHkgQXV0aGVudGljYXRpb24gUmVxdWlyZWRcIixcbiAgXCI0MDhcIjogXCJSZXF1ZXN0IFRpbWVvdXRcIixcbiAgXCI0MDlcIjogXCJDb25mbGljdFwiLFxuICBcIjQxMFwiOiBcIkdvbmVcIixcbiAgXCI0MTFcIjogXCJMZW5ndGggUmVxdWlyZWRcIixcbiAgXCI0MTJcIjogXCJQcmVjb25kaXRpb24gRmFpbGVkXCIsXG4gIFwiNDEzXCI6IFwiUGF5bG9hZCBUb28gTGFyZ2VcIixcbiAgXCI0MTRcIjogXCJVUkkgVG9vIExvbmdcIixcbiAgXCI0MTVcIjogXCJVbnN1cHBvcnRlZCBNZWRpYSBUeXBlXCIsXG4gIFwiNDE2XCI6IFwiUmFuZ2UgTm90IFNhdGlzZmlhYmxlXCIsXG4gIFwiNDE3XCI6IFwiRXhwZWN0YXRpb24gRmFpbGVkXCIsXG4gIFwiNDE4XCI6IFwiSSdtIGEgdGVhcG90XCIsXG4gIFwiNDIxXCI6IFwiTWlzZGlyZWN0ZWQgUmVxdWVzdFwiLFxuICBcIjQyMlwiOiBcIlVucHJvY2Vzc2FibGUgRW50aXR5XCIsXG4gIFwiNDIzXCI6IFwiTG9ja2VkXCIsXG4gIFwiNDI0XCI6IFwiRmFpbGVkIERlcGVuZGVuY3lcIixcbiAgXCI0MjVcIjogXCJVbm9yZGVyZWQgQ29sbGVjdGlvblwiLFxuICBcIjQyNlwiOiBcIlVwZ3JhZGUgUmVxdWlyZWRcIixcbiAgXCI0MjhcIjogXCJQcmVjb25kaXRpb24gUmVxdWlyZWRcIixcbiAgXCI0MjlcIjogXCJUb28gTWFueSBSZXF1ZXN0c1wiLFxuICBcIjQzMVwiOiBcIlJlcXVlc3QgSGVhZGVyIEZpZWxkcyBUb28gTGFyZ2VcIixcbiAgXCI0NTFcIjogXCJVbmF2YWlsYWJsZSBGb3IgTGVnYWwgUmVhc29uc1wiLFxuICBcIjUwMFwiOiBcIkludGVybmFsIFNlcnZlciBFcnJvclwiLFxuICBcIjUwMVwiOiBcIk5vdCBJbXBsZW1lbnRlZFwiLFxuICBcIjUwMlwiOiBcIkJhZCBHYXRld2F5XCIsXG4gIFwiNTAzXCI6IFwiU2VydmljZSBVbmF2YWlsYWJsZVwiLFxuICBcIjUwNFwiOiBcIkdhdGV3YXkgVGltZW91dFwiLFxuICBcIjUwNVwiOiBcIkhUVFAgVmVyc2lvbiBOb3QgU3VwcG9ydGVkXCIsXG4gIFwiNTA2XCI6IFwiVmFyaWFudCBBbHNvIE5lZ290aWF0ZXNcIixcbiAgXCI1MDdcIjogXCJJbnN1ZmZpY2llbnQgU3RvcmFnZVwiLFxuICBcIjUwOFwiOiBcIkxvb3AgRGV0ZWN0ZWRcIixcbiAgXCI1MDlcIjogXCJCYW5kd2lkdGggTGltaXQgRXhjZWVkZWRcIixcbiAgXCI1MTBcIjogXCJOb3QgRXh0ZW5kZWRcIixcbiAgXCI1MTFcIjogXCJOZXR3b3JrIEF1dGhlbnRpY2F0aW9uIFJlcXVpcmVkXCJcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/builtin-status-codes/browser.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/https-browserify/index.js":
/*!************************************************!*\
  !*** ./node_modules/https-browserify/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHR0cHMtYnJvd3NlcmlmeS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL2h0dHBzLWJyb3dzZXJpZnkvaW5kZXguanM/MjRmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG5cbnZhciBodHRwcyA9IG1vZHVsZS5leHBvcnRzXG5cbmZvciAodmFyIGtleSBpbiBodHRwKSB7XG4gIGlmIChodHRwLmhhc093blByb3BlcnR5KGtleSkpIGh0dHBzW2tleV0gPSBodHRwW2tleV1cbn1cblxuaHR0cHMucmVxdWVzdCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNiKSB7XG4gIHBhcmFtcyA9IHZhbGlkYXRlUGFyYW1zKHBhcmFtcylcbiAgcmV0dXJuIGh0dHAucmVxdWVzdC5jYWxsKHRoaXMsIHBhcmFtcywgY2IpXG59XG5cbmh0dHBzLmdldCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNiKSB7XG4gIHBhcmFtcyA9IHZhbGlkYXRlUGFyYW1zKHBhcmFtcylcbiAgcmV0dXJuIGh0dHAuZ2V0LmNhbGwodGhpcywgcGFyYW1zLCBjYilcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVQYXJhbXMgKHBhcmFtcykge1xuICBpZiAodHlwZW9mIHBhcmFtcyA9PT0gJ3N0cmluZycpIHtcbiAgICBwYXJhbXMgPSB1cmwucGFyc2UocGFyYW1zKVxuICB9XG4gIGlmICghcGFyYW1zLnByb3RvY29sKSB7XG4gICAgcGFyYW1zLnByb3RvY29sID0gJ2h0dHBzOidcbiAgfVxuICBpZiAocGFyYW1zLnByb3RvY29sICE9PSAnaHR0cHM6Jykge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvdG9jb2wgXCInICsgcGFyYW1zLnByb3RvY29sICsgJ1wiIG5vdCBzdXBwb3J0ZWQuIEV4cGVjdGVkIFwiaHR0cHM6XCInKVxuICB9XG4gIHJldHVybiBwYXJhbXNcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/https-browserify/index.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/OTE1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzPzNmYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgaWYgKHN1cGVyQ3Rvcikge1xuICAgICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBpZiAoc3VwZXJDdG9yKSB7XG4gICAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "./node_modules/punycode/punycode.js":
/*!*******************************************!*\
  !*** ./node_modules/punycode/punycode.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports =  true && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule =  true && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(this));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/punycode/punycode.js\n");

/***/ }),

/***/ "./node_modules/querystring/decode.js":
/*!********************************************!*\
  !*** ./node_modules/querystring/decode.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmcvZGVjb2RlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy9kZWNvZGUuanM/NjFjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBJZiBvYmouaGFzT3duUHJvcGVydHkgaGFzIGJlZW4gb3ZlcnJpZGRlbiwgdGhlbiBjYWxsaW5nXG4vLyBvYmouaGFzT3duUHJvcGVydHkocHJvcCkgd2lsbCBicmVhay5cbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2lzc3Vlcy8xNzA3XG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHFzLCBzZXAsIGVxLCBvcHRpb25zKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICB2YXIgb2JqID0ge307XG5cbiAgaWYgKHR5cGVvZiBxcyAhPT0gJ3N0cmluZycgfHwgcXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHZhciByZWdleHAgPSAvXFwrL2c7XG4gIHFzID0gcXMuc3BsaXQoc2VwKTtcblxuICB2YXIgbWF4S2V5cyA9IDEwMDA7XG4gIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zLm1heEtleXMgPT09ICdudW1iZXInKSB7XG4gICAgbWF4S2V5cyA9IG9wdGlvbnMubWF4S2V5cztcbiAgfVxuXG4gIHZhciBsZW4gPSBxcy5sZW5ndGg7XG4gIC8vIG1heEtleXMgPD0gMCBtZWFucyB0aGF0IHdlIHNob3VsZCBub3QgbGltaXQga2V5cyBjb3VudFxuICBpZiAobWF4S2V5cyA+IDAgJiYgbGVuID4gbWF4S2V5cykge1xuICAgIGxlbiA9IG1heEtleXM7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHggPSBxc1tpXS5yZXBsYWNlKHJlZ2V4cCwgJyUyMCcpLFxuICAgICAgICBpZHggPSB4LmluZGV4T2YoZXEpLFxuICAgICAgICBrc3RyLCB2c3RyLCBrLCB2O1xuXG4gICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICBrc3RyID0geC5zdWJzdHIoMCwgaWR4KTtcbiAgICAgIHZzdHIgPSB4LnN1YnN0cihpZHggKyAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAga3N0ciA9IHg7XG4gICAgICB2c3RyID0gJyc7XG4gICAgfVxuXG4gICAgayA9IGRlY29kZVVSSUNvbXBvbmVudChrc3RyKTtcbiAgICB2ID0gZGVjb2RlVVJJQ29tcG9uZW50KHZzdHIpO1xuXG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShvYmosIGspKSB7XG4gICAgICBvYmpba10gPSB2O1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICBvYmpba10ucHVzaCh2KTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqW2tdID0gW29ialtrXSwgdl07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/querystring/decode.js\n");

/***/ }),

/***/ "./node_modules/querystring/encode.js":
/*!********************************************!*\
  !*** ./node_modules/querystring/encode.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmcvZW5jb2RlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmcvZW5jb2RlLmpzP2U4YzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBvYmpba10ubWFwKGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring/encode.js\n");

/***/ }),

/***/ "./node_modules/querystring/index.js":
/*!*******************************************!*\
  !*** ./node_modules/querystring/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \"./node_modules/querystring/decode.js\");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \"./node_modules/querystring/encode.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmcvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy9pbmRleC5qcz9hZmMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9kZWNvZGUnKTtcbmV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5zdHJpbmdpZnkgPSByZXF1aXJlKCcuL2VuY29kZScpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/querystring/index.js\n");

/***/ }),

/***/ "./node_modules/queue-microtask/index.js":
/*!***********************************************!*\
  !*** ./node_modules/queue-microtask/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("let promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVldWUtbWljcm90YXNrL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9xdWV1ZS1taWNyb3Rhc2svaW5kZXguanM/ODcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcHJvbWlzZVxuXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBxdWV1ZU1pY3JvdGFzayA9PT0gJ2Z1bmN0aW9uJ1xuICA/IHF1ZXVlTWljcm90YXNrXG4gIC8vIHJldXNlIHJlc29sdmVkIHByb21pc2UsIGFuZCBhbGxvY2F0ZSBpdCBsYXppbHlcbiAgOiBjYiA9PiAocHJvbWlzZSB8fCAocHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpKSlcbiAgICAudGhlbihjYilcbiAgICAuY2F0Y2goZXJyID0+IHNldFRpbWVvdXQoKCkgPT4geyB0aHJvdyBlcnIgfSwgMCkpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/queue-microtask/index.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/errors-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/errors-browser.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2Vycm9ycy1icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2Vycm9ycy1icm93c2VyLmpzP2M5YjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGNvZGVzID0ge307XG5cbmZ1bmN0aW9uIGNyZWF0ZUVycm9yVHlwZShjb2RlLCBtZXNzYWdlLCBCYXNlKSB7XG4gIGlmICghQmFzZSkge1xuICAgIEJhc2UgPSBFcnJvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE1lc3NhZ2UoYXJnMSwgYXJnMiwgYXJnMykge1xuICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbWVzc2FnZShhcmcxLCBhcmcyLCBhcmczKTtcbiAgICB9XG4gIH1cblxuICB2YXIgTm9kZUVycm9yID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0Jhc2UpIHtcbiAgICBfaW5oZXJpdHNMb29zZShOb2RlRXJyb3IsIF9CYXNlKTtcblxuICAgIGZ1bmN0aW9uIE5vZGVFcnJvcihhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgICByZXR1cm4gX0Jhc2UuY2FsbCh0aGlzLCBnZXRNZXNzYWdlKGFyZzEsIGFyZzIsIGFyZzMpKSB8fCB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBOb2RlRXJyb3I7XG4gIH0oQmFzZSk7XG5cbiAgTm9kZUVycm9yLnByb3RvdHlwZS5uYW1lID0gQmFzZS5uYW1lO1xuICBOb2RlRXJyb3IucHJvdG90eXBlLmNvZGUgPSBjb2RlO1xuICBjb2Rlc1tjb2RlXSA9IE5vZGVFcnJvcjtcbn0gLy8gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2Jsb2IvdjEwLjguMC9saWIvaW50ZXJuYWwvZXJyb3JzLmpzXG5cblxuZnVuY3Rpb24gb25lT2YoZXhwZWN0ZWQsIHRoaW5nKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGV4cGVjdGVkKSkge1xuICAgIHZhciBsZW4gPSBleHBlY3RlZC5sZW5ndGg7XG4gICAgZXhwZWN0ZWQgPSBleHBlY3RlZC5tYXAoZnVuY3Rpb24gKGkpIHtcbiAgICAgIHJldHVybiBTdHJpbmcoaSk7XG4gICAgfSk7XG5cbiAgICBpZiAobGVuID4gMikge1xuICAgICAgcmV0dXJuIFwib25lIG9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZC5zbGljZSgwLCBsZW4gLSAxKS5qb2luKCcsICcpLCBcIiwgb3IgXCIpICsgZXhwZWN0ZWRbbGVuIC0gMV07XG4gICAgfSBlbHNlIGlmIChsZW4gPT09IDIpIHtcbiAgICAgIHJldHVybiBcIm9uZSBvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0sIFwiIG9yIFwiKS5jb25jYXQoZXhwZWN0ZWRbMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoU3RyaW5nKGV4cGVjdGVkKSk7XG4gIH1cbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3N0YXJ0c1dpdGhcblxuXG5mdW5jdGlvbiBzdGFydHNXaXRoKHN0ciwgc2VhcmNoLCBwb3MpIHtcbiAgcmV0dXJuIHN0ci5zdWJzdHIoIXBvcyB8fCBwb3MgPCAwID8gMCA6ICtwb3MsIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG59IC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9lbmRzV2l0aFxuXG5cbmZ1bmN0aW9uIGVuZHNXaXRoKHN0ciwgc2VhcmNoLCB0aGlzX2xlbikge1xuICBpZiAodGhpc19sZW4gPT09IHVuZGVmaW5lZCB8fCB0aGlzX2xlbiA+IHN0ci5sZW5ndGgpIHtcbiAgICB0aGlzX2xlbiA9IHN0ci5sZW5ndGg7XG4gIH1cblxuICByZXR1cm4gc3RyLnN1YnN0cmluZyh0aGlzX2xlbiAtIHNlYXJjaC5sZW5ndGgsIHRoaXNfbGVuKSA9PT0gc2VhcmNoO1xufSAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvaW5jbHVkZXNcblxuXG5mdW5jdGlvbiBpbmNsdWRlcyhzdHIsIHNlYXJjaCwgc3RhcnQpIHtcbiAgaWYgKHR5cGVvZiBzdGFydCAhPT0gJ251bWJlcicpIHtcbiAgICBzdGFydCA9IDA7XG4gIH1cblxuICBpZiAoc3RhcnQgKyBzZWFyY2gubGVuZ3RoID4gc3RyLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gc3RyLmluZGV4T2Yoc2VhcmNoLCBzdGFydCkgIT09IC0xO1xuICB9XG59XG5cbmNyZWF0ZUVycm9yVHlwZSgnRVJSX0lOVkFMSURfT1BUX1ZBTFVFJywgZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiAnVGhlIHZhbHVlIFwiJyArIHZhbHVlICsgJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcIicgKyBuYW1lICsgJ1wiJztcbn0sIFR5cGVFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9JTlZBTElEX0FSR19UWVBFJywgZnVuY3Rpb24gKG5hbWUsIGV4cGVjdGVkLCBhY3R1YWwpIHtcbiAgLy8gZGV0ZXJtaW5lcjogJ211c3QgYmUnIG9yICdtdXN0IG5vdCBiZSdcbiAgdmFyIGRldGVybWluZXI7XG5cbiAgaWYgKHR5cGVvZiBleHBlY3RlZCA9PT0gJ3N0cmluZycgJiYgc3RhcnRzV2l0aChleHBlY3RlZCwgJ25vdCAnKSkge1xuICAgIGRldGVybWluZXIgPSAnbXVzdCBub3QgYmUnO1xuICAgIGV4cGVjdGVkID0gZXhwZWN0ZWQucmVwbGFjZSgvXm5vdCAvLCAnJyk7XG4gIH0gZWxzZSB7XG4gICAgZGV0ZXJtaW5lciA9ICdtdXN0IGJlJztcbiAgfVxuXG4gIHZhciBtc2c7XG5cbiAgaWYgKGVuZHNXaXRoKG5hbWUsICcgYXJndW1lbnQnKSkge1xuICAgIC8vIEZvciBjYXNlcyBsaWtlICdmaXJzdCBhcmd1bWVudCdcbiAgICBtc2cgPSBcIlRoZSBcIi5jb25jYXQobmFtZSwgXCIgXCIpLmNvbmNhdChkZXRlcm1pbmVyLCBcIiBcIikuY29uY2F0KG9uZU9mKGV4cGVjdGVkLCAndHlwZScpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdHlwZSA9IGluY2x1ZGVzKG5hbWUsICcuJykgPyAncHJvcGVydHknIDogJ2FyZ3VtZW50JztcbiAgICBtc2cgPSBcIlRoZSBcXFwiXCIuY29uY2F0KG5hbWUsIFwiXFxcIiBcIikuY29uY2F0KHR5cGUsIFwiIFwiKS5jb25jYXQoZGV0ZXJtaW5lciwgXCIgXCIpLmNvbmNhdChvbmVPZihleHBlY3RlZCwgJ3R5cGUnKSk7XG4gIH1cblxuICBtc2cgKz0gXCIuIFJlY2VpdmVkIHR5cGUgXCIuY29uY2F0KHR5cGVvZiBhY3R1YWwpO1xuICByZXR1cm4gbXNnO1xufSwgVHlwZUVycm9yKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1NUUkVBTV9QVVNIX0FGVEVSX0VPRicsICdzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRicpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRCcsIGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiAnVGhlICcgKyBuYW1lICsgJyBtZXRob2QgaXMgbm90IGltcGxlbWVudGVkJztcbn0pO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRScsICdQcmVtYXR1cmUgY2xvc2UnKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1NUUkVBTV9ERVNUUk9ZRUQnLCBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gJ0Nhbm5vdCBjYWxsICcgKyBuYW1lICsgJyBhZnRlciBhIHN0cmVhbSB3YXMgZGVzdHJveWVkJztcbn0pO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfTVVMVElQTEVfQ0FMTEJBQ0snLCAnQ2FsbGJhY2sgY2FsbGVkIG11bHRpcGxlIHRpbWVzJyk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fQ0FOTk9UX1BJUEUnLCAnQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZScpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX1dSSVRFX0FGVEVSX0VORCcsICd3cml0ZSBhZnRlciBlbmQnKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1NUUkVBTV9OVUxMX1ZBTFVFUycsICdNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbScsIFR5cGVFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9VTktOT1dOX0VOQ09ESU5HJywgZnVuY3Rpb24gKGFyZykge1xuICByZXR1cm4gJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBhcmc7XG59LCBUeXBlRXJyb3IpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UJywgJ3N0cmVhbS51bnNoaWZ0KCkgYWZ0ZXIgZW5kIGV2ZW50Jyk7XG5tb2R1bGUuZXhwb3J0cy5jb2RlcyA9IGNvZGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/errors-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\n\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanM/YjE5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbi8vIGEgZHVwbGV4IHN0cmVhbSBpcyBqdXN0IGEgc3RyZWFtIHRoYXQgaXMgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUuXG4vLyBTaW5jZSBKUyBkb2Vzbid0IGhhdmUgbXVsdGlwbGUgcHJvdG90eXBhbCBpbmhlcml0YW5jZSwgdGhpcyBjbGFzc1xuLy8gcHJvdG90eXBhbGx5IGluaGVyaXRzIGZyb20gUmVhZGFibGUsIGFuZCB0aGVuIHBhcmFzaXRpY2FsbHkgZnJvbVxuLy8gV3JpdGFibGUuXG4ndXNlIHN0cmljdCc7XG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAga2V5cy5wdXNoKGtleSk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuXG5tb2R1bGUuZXhwb3J0cyA9IER1cGxleDtcblxudmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3JlYWRhYmxlJyk7XG5cbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xuXG5yZXF1aXJlKCdpbmhlcml0cycpKER1cGxleCwgUmVhZGFibGUpO1xuXG57XG4gIC8vIEFsbG93IHRoZSBrZXlzIGFycmF5IHRvIGJlIEdDJ2VkLlxuICB2YXIga2V5cyA9IG9iamVjdEtleXMoV3JpdGFibGUucHJvdG90eXBlKTtcblxuICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgICBpZiAoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSkgRHVwbGV4LnByb3RvdHlwZVttZXRob2RdID0gV3JpdGFibGUucHJvdG90eXBlW21ldGhvZF07XG4gIH1cbn1cblxuZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpO1xuICBSZWFkYWJsZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICBXcml0YWJsZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICB0aGlzLmFsbG93SGFsZk9wZW4gPSB0cnVlO1xuXG4gIGlmIChvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMucmVhZGFibGUgPT09IGZhbHNlKSB0aGlzLnJlYWRhYmxlID0gZmFsc2U7XG4gICAgaWYgKG9wdGlvbnMud3JpdGFibGUgPT09IGZhbHNlKSB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG5cbiAgICBpZiAob3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkge1xuICAgICAgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG4gICAgICB0aGlzLm9uY2UoJ2VuZCcsIG9uZW5kKTtcbiAgICB9XG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICd3cml0YWJsZUhpZ2hXYXRlck1hcmsnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcms7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICd3cml0YWJsZUJ1ZmZlcicsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIoKTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ3dyaXRhYmxlTGVuZ3RoJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5sZW5ndGg7XG4gIH1cbn0pOyAvLyB0aGUgbm8taGFsZi1vcGVuIGVuZm9yY2VyXG5cbmZ1bmN0aW9uIG9uZW5kKCkge1xuICAvLyBJZiB0aGUgd3JpdGFibGUgc2lkZSBlbmRlZCwgdGhlbiB3ZSdyZSBvay5cbiAgaWYgKHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQpIHJldHVybjsgLy8gbm8gbW9yZSBkYXRhIGNhbiBiZSB3cml0dGVuLlxuICAvLyBCdXQgYWxsb3cgbW9yZSB3cml0ZXMgdG8gaGFwcGVuIGluIHRoaXMgdGljay5cblxuICBwcm9jZXNzLm5leHRUaWNrKG9uRW5kTlQsIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHtcbiAgc2VsZi5lbmQoKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuXG5cbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcz83ODBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuLy8gYSBwYXNzdGhyb3VnaCBzdHJlYW0uXG4vLyBiYXNpY2FsbHkganVzdCB0aGUgbW9zdCBtaW5pbWFsIHNvcnQgb2YgVHJhbnNmb3JtIHN0cmVhbS5cbi8vIEV2ZXJ5IHdyaXR0ZW4gY2h1bmsgZ2V0cyBvdXRwdXQgYXMtaXMuXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUGFzc1Rocm91Z2g7XG5cbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCcuL19zdHJlYW1fdHJhbnNmb3JtJyk7XG5cbnJlcXVpcmUoJ2luaGVyaXRzJykoUGFzc1Rocm91Z2gsIFRyYW5zZm9ybSk7XG5cbmZ1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSkgcmV0dXJuIG5ldyBQYXNzVGhyb3VnaChvcHRpb25zKTtcbiAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG59XG5cblBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgY2IobnVsbCwgY2h1bmspO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter);\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = __webpack_require__(/*! util */ \"?d17e\");\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"./node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"./node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"./node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nmodule.exports = Transform;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\"); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/async_iterator.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!**************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\"),\n    Buffer = _require.Buffer;\n\nvar _require2 = __webpack_require__(/*! util */ \"?ed1b\"),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/buffer_list.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval(" // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanM/NDY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7IC8vIHVuZG9jdW1lbnRlZCBjYigpIEFQSSwgbmVlZGVkIGZvciBjb3JlLCBub3QgZm9yIHB1YmxpYyBBUElcblxuZnVuY3Rpb24gZGVzdHJveShlcnIsIGNiKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcblxuICBpZiAocmVhZGFibGVEZXN0cm95ZWQgfHwgd3JpdGFibGVEZXN0cm95ZWQpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIGNiKGVycik7XG4gICAgfSBlbHNlIGlmIChlcnIpIHtcbiAgICAgIGlmICghdGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvck5ULCB0aGlzLCBlcnIpO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQpIHtcbiAgICAgICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvck5ULCB0aGlzLCBlcnIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9IC8vIHdlIHNldCBkZXN0cm95ZWQgdG8gdHJ1ZSBiZWZvcmUgZmlyaW5nIGVycm9yIGNhbGxiYWNrcyBpbiBvcmRlclxuICAvLyB0byBtYWtlIGl0IHJlLWVudHJhbmNlIHNhZmUgaW4gY2FzZSBkZXN0cm95KCkgaXMgY2FsbGVkIHdpdGhpbiBjYWxsYmFja3NcblxuXG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9IC8vIGlmIHRoaXMgaXMgYSBkdXBsZXggc3RyZWFtIG1hcmsgdGhlIHdyaXRhYmxlIHBhcnQgYXMgZGVzdHJveWVkIGFzIHdlbGxcblxuXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgdGhpcy5fZGVzdHJveShlcnIgfHwgbnVsbCwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmICghY2IgJiYgZXJyKSB7XG4gICAgICBpZiAoIV90aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soZW1pdEVycm9yQW5kQ2xvc2VOVCwgX3RoaXMsIGVycik7XG4gICAgICB9IGVsc2UgaWYgKCFfdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQpIHtcbiAgICAgICAgX3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JBbmRDbG9zZU5ULCBfdGhpcywgZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQsIF90aGlzKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNiKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRDbG9zZU5ULCBfdGhpcyk7XG4gICAgICBjYihlcnIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRDbG9zZU5ULCBfdGhpcyk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gZW1pdEVycm9yQW5kQ2xvc2VOVChzZWxmLCBlcnIpIHtcbiAgZW1pdEVycm9yTlQoc2VsZiwgZXJyKTtcbiAgZW1pdENsb3NlTlQoc2VsZik7XG59XG5cbmZ1bmN0aW9uIGVtaXRDbG9zZU5UKHNlbGYpIHtcbiAgaWYgKHNlbGYuX3dyaXRhYmxlU3RhdGUgJiYgIXNlbGYuX3dyaXRhYmxlU3RhdGUuZW1pdENsb3NlKSByZXR1cm47XG4gIGlmIChzZWxmLl9yZWFkYWJsZVN0YXRlICYmICFzZWxmLl9yZWFkYWJsZVN0YXRlLmVtaXRDbG9zZSkgcmV0dXJuO1xuICBzZWxmLmVtaXQoJ2Nsb3NlJyk7XG59XG5cbmZ1bmN0aW9uIHVuZGVzdHJveSgpIHtcbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRFcnJvck5UKHNlbGYsIGVycikge1xuICBzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKTtcbn1cblxuZnVuY3Rpb24gZXJyb3JPckRlc3Ryb3koc3RyZWFtLCBlcnIpIHtcbiAgLy8gV2UgaGF2ZSB0ZXN0cyB0aGF0IHJlbHkgb24gZXJyb3JzIGJlaW5nIGVtaXR0ZWRcbiAgLy8gaW4gdGhlIHNhbWUgdGljaywgc28gY2hhbmdpbmcgdGhpcyBpcyBzZW12ZXIgbWFqb3IuXG4gIC8vIEZvciBub3cgd2hlbiB5b3Ugb3B0LWluIHRvIGF1dG9EZXN0cm95IHdlIGFsbG93XG4gIC8vIHRoZSBlcnJvciB0byBiZSBlbWl0dGVkIG5leHRUaWNrLiBJbiBhIGZ1dHVyZVxuICAvLyBzZW12ZXIgbWFqb3IgdXBkYXRlIHdlIHNob3VsZCBjaGFuZ2UgdGhlIGRlZmF1bHQgdG8gdGhpcy5cbiAgdmFyIHJTdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIHdTdGF0ZSA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcbiAgaWYgKHJTdGF0ZSAmJiByU3RhdGUuYXV0b0Rlc3Ryb3kgfHwgd1N0YXRlICYmIHdTdGF0ZS5hdXRvRGVzdHJveSkgc3RyZWFtLmRlc3Ryb3koZXJyKTtlbHNlIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVycik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXN0cm95OiBkZXN0cm95LFxuICB1bmRlc3Ryb3k6IHVuZGVzdHJveSxcbiAgZXJyb3JPckRlc3Ryb3k6IGVycm9yT3JEZXN0cm95XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE);\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2VuZC1vZi1zdHJlYW0uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9lbmQtb2Ytc3RyZWFtLmpzPzkwM2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9lbmQtb2Ytc3RyZWFtIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0UgPSByZXF1aXJlKCcuLi8uLi8uLi9lcnJvcnMnKS5jb2Rlcy5FUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRTtcblxuZnVuY3Rpb24gb25jZShjYWxsYmFjaykge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGNhbGxlZCkgcmV0dXJuO1xuICAgIGNhbGxlZCA9IHRydWU7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgY2FsbGJhY2suYXBwbHkodGhpcywgYXJncyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5mdW5jdGlvbiBpc1JlcXVlc3Qoc3RyZWFtKSB7XG4gIHJldHVybiBzdHJlYW0uc2V0SGVhZGVyICYmIHR5cGVvZiBzdHJlYW0uYWJvcnQgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGVvcyhzdHJlYW0sIG9wdHMsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygb3B0cyA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGVvcyhzdHJlYW0sIG51bGwsIG9wdHMpO1xuICBpZiAoIW9wdHMpIG9wdHMgPSB7fTtcbiAgY2FsbGJhY2sgPSBvbmNlKGNhbGxiYWNrIHx8IG5vb3ApO1xuICB2YXIgcmVhZGFibGUgPSBvcHRzLnJlYWRhYmxlIHx8IG9wdHMucmVhZGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS5yZWFkYWJsZTtcbiAgdmFyIHdyaXRhYmxlID0gb3B0cy53cml0YWJsZSB8fCBvcHRzLndyaXRhYmxlICE9PSBmYWxzZSAmJiBzdHJlYW0ud3JpdGFibGU7XG5cbiAgdmFyIG9ubGVnYWN5ZmluaXNoID0gZnVuY3Rpb24gb25sZWdhY3lmaW5pc2goKSB7XG4gICAgaWYgKCFzdHJlYW0ud3JpdGFibGUpIG9uZmluaXNoKCk7XG4gIH07XG5cbiAgdmFyIHdyaXRhYmxlRW5kZWQgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGUgJiYgc3RyZWFtLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkO1xuXG4gIHZhciBvbmZpbmlzaCA9IGZ1bmN0aW9uIG9uZmluaXNoKCkge1xuICAgIHdyaXRhYmxlID0gZmFsc2U7XG4gICAgd3JpdGFibGVFbmRlZCA9IHRydWU7XG4gICAgaWYgKCFyZWFkYWJsZSkgY2FsbGJhY2suY2FsbChzdHJlYW0pO1xuICB9O1xuXG4gIHZhciByZWFkYWJsZUVuZGVkID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlICYmIHN0cmVhbS5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkO1xuXG4gIHZhciBvbmVuZCA9IGZ1bmN0aW9uIG9uZW5kKCkge1xuICAgIHJlYWRhYmxlID0gZmFsc2U7XG4gICAgcmVhZGFibGVFbmRlZCA9IHRydWU7XG4gICAgaWYgKCF3cml0YWJsZSkgY2FsbGJhY2suY2FsbChzdHJlYW0pO1xuICB9O1xuXG4gIHZhciBvbmVycm9yID0gZnVuY3Rpb24gb25lcnJvcihlcnIpIHtcbiAgICBjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXJyKTtcbiAgfTtcblxuICB2YXIgb25jbG9zZSA9IGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgdmFyIGVycjtcblxuICAgIGlmIChyZWFkYWJsZSAmJiAhcmVhZGFibGVFbmRlZCkge1xuICAgICAgaWYgKCFzdHJlYW0uX3JlYWRhYmxlU3RhdGUgfHwgIXN0cmVhbS5fcmVhZGFibGVTdGF0ZS5lbmRlZCkgZXJyID0gbmV3IEVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFKCk7XG4gICAgICByZXR1cm4gY2FsbGJhY2suY2FsbChzdHJlYW0sIGVycik7XG4gICAgfVxuXG4gICAgaWYgKHdyaXRhYmxlICYmICF3cml0YWJsZUVuZGVkKSB7XG4gICAgICBpZiAoIXN0cmVhbS5fd3JpdGFibGVTdGF0ZSB8fCAhc3RyZWFtLl93cml0YWJsZVN0YXRlLmVuZGVkKSBlcnIgPSBuZXcgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0UoKTtcbiAgICAgIHJldHVybiBjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXJyKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIG9ucmVxdWVzdCA9IGZ1bmN0aW9uIG9ucmVxdWVzdCgpIHtcbiAgICBzdHJlYW0ucmVxLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gIH07XG5cbiAgaWYgKGlzUmVxdWVzdChzdHJlYW0pKSB7XG4gICAgc3RyZWFtLm9uKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcbiAgICBzdHJlYW0ub24oJ2Fib3J0Jywgb25jbG9zZSk7XG4gICAgaWYgKHN0cmVhbS5yZXEpIG9ucmVxdWVzdCgpO2Vsc2Ugc3RyZWFtLm9uKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcbiAgfSBlbHNlIGlmICh3cml0YWJsZSAmJiAhc3RyZWFtLl93cml0YWJsZVN0YXRlKSB7XG4gICAgLy8gbGVnYWN5IHN0cmVhbXNcbiAgICBzdHJlYW0ub24oJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcbiAgICBzdHJlYW0ub24oJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuICB9XG5cbiAgc3RyZWFtLm9uKCdlbmQnLCBvbmVuZCk7XG4gIHN0cmVhbS5vbignZmluaXNoJywgb25maW5pc2gpO1xuICBpZiAob3B0cy5lcnJvciAhPT0gZmFsc2UpIHN0cmVhbS5vbignZXJyb3InLCBvbmVycm9yKTtcbiAgc3RyZWFtLm9uKCdjbG9zZScsIG9uY2xvc2UpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY29tcGxldGUnLCBvbmZpbmlzaCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdhYm9ydCcsIG9uY2xvc2UpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG4gICAgaWYgKHN0cmVhbS5yZXEpIHN0cmVhbS5yZXEucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25lbmQpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW9zOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Zyb20tYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZnJvbS1icm93c2VyLmpzPzA3YzYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignUmVhZGFibGUuZnJvbSBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyJylcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/from-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!***********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = (__webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzPzVkMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9wdW1wIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW9zO1xuXG5mdW5jdGlvbiBvbmNlKGNhbGxiYWNrKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2FsbGVkKSByZXR1cm47XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgICBjYWxsYmFjay5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbnZhciBfcmVxdWlyZSRjb2RlcyA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLFxuICAgIEVSUl9NSVNTSU5HX0FSR1MgPSBfcmVxdWlyZSRjb2Rlcy5FUlJfTUlTU0lOR19BUkdTLFxuICAgIEVSUl9TVFJFQU1fREVTVFJPWUVEID0gX3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9ERVNUUk9ZRUQ7XG5cbmZ1bmN0aW9uIG5vb3AoZXJyKSB7XG4gIC8vIFJldGhyb3cgdGhlIGVycm9yIGlmIGl0IGV4aXN0cyB0byBhdm9pZCBzd2FsbG93aW5nIGl0XG4gIGlmIChlcnIpIHRocm93IGVycjtcbn1cblxuZnVuY3Rpb24gaXNSZXF1ZXN0KHN0cmVhbSkge1xuICByZXR1cm4gc3RyZWFtLnNldEhlYWRlciAmJiB0eXBlb2Ygc3RyZWFtLmFib3J0ID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBkZXN0cm95ZXIoc3RyZWFtLCByZWFkaW5nLCB3cml0aW5nLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICB2YXIgY2xvc2VkID0gZmFsc2U7XG4gIHN0cmVhbS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChlb3MgPT09IHVuZGVmaW5lZCkgZW9zID0gcmVxdWlyZSgnLi9lbmQtb2Ytc3RyZWFtJyk7XG4gIGVvcyhzdHJlYW0sIHtcbiAgICByZWFkYWJsZTogcmVhZGluZyxcbiAgICB3cml0YWJsZTogd3JpdGluZ1xuICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbiAgdmFyIGRlc3Ryb3llZCA9IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChjbG9zZWQpIHJldHVybjtcbiAgICBpZiAoZGVzdHJveWVkKSByZXR1cm47XG4gICAgZGVzdHJveWVkID0gdHJ1ZTsgLy8gcmVxdWVzdC5kZXN0cm95IGp1c3QgZG8gLmVuZCAtIC5hYm9ydCBpcyB3aGF0IHdlIHdhbnRcblxuICAgIGlmIChpc1JlcXVlc3Qoc3RyZWFtKSkgcmV0dXJuIHN0cmVhbS5hYm9ydCgpO1xuICAgIGlmICh0eXBlb2Ygc3RyZWFtLmRlc3Ryb3kgPT09ICdmdW5jdGlvbicpIHJldHVybiBzdHJlYW0uZGVzdHJveSgpO1xuICAgIGNhbGxiYWNrKGVyciB8fCBuZXcgRVJSX1NUUkVBTV9ERVNUUk9ZRUQoJ3BpcGUnKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNhbGwoZm4pIHtcbiAgZm4oKTtcbn1cblxuZnVuY3Rpb24gcGlwZShmcm9tLCB0bykge1xuICByZXR1cm4gZnJvbS5waXBlKHRvKTtcbn1cblxuZnVuY3Rpb24gcG9wQ2FsbGJhY2soc3RyZWFtcykge1xuICBpZiAoIXN0cmVhbXMubGVuZ3RoKSByZXR1cm4gbm9vcDtcbiAgaWYgKHR5cGVvZiBzdHJlYW1zW3N0cmVhbXMubGVuZ3RoIC0gMV0gIT09ICdmdW5jdGlvbicpIHJldHVybiBub29wO1xuICByZXR1cm4gc3RyZWFtcy5wb3AoKTtcbn1cblxuZnVuY3Rpb24gcGlwZWxpbmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHJlYW1zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHN0cmVhbXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgY2FsbGJhY2sgPSBwb3BDYWxsYmFjayhzdHJlYW1zKTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc3RyZWFtc1swXSkpIHN0cmVhbXMgPSBzdHJlYW1zWzBdO1xuXG4gIGlmIChzdHJlYW1zLmxlbmd0aCA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRVJSX01JU1NJTkdfQVJHUygnc3RyZWFtcycpO1xuICB9XG5cbiAgdmFyIGVycm9yO1xuICB2YXIgZGVzdHJveXMgPSBzdHJlYW1zLm1hcChmdW5jdGlvbiAoc3RyZWFtLCBpKSB7XG4gICAgdmFyIHJlYWRpbmcgPSBpIDwgc3RyZWFtcy5sZW5ndGggLSAxO1xuICAgIHZhciB3cml0aW5nID0gaSA+IDA7XG4gICAgcmV0dXJuIGRlc3Ryb3llcihzdHJlYW0sIHJlYWRpbmcsIHdyaXRpbmcsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuICAgICAgaWYgKGVycikgZGVzdHJveXMuZm9yRWFjaChjYWxsKTtcbiAgICAgIGlmIChyZWFkaW5nKSByZXR1cm47XG4gICAgICBkZXN0cm95cy5mb3JFYWNoKGNhbGwpO1xuICAgICAgY2FsbGJhY2soZXJyb3IpO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHN0cmVhbXMucmVkdWNlKHBpcGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBpcGVsaW5lOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/pipeline.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/state.js":
/*!********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/state.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE);\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0YXRlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZS5qcz8wZGI2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVSUl9JTlZBTElEX09QVF9WQUxVRSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLkVSUl9JTlZBTElEX09QVF9WQUxVRTtcblxuZnVuY3Rpb24gaGlnaFdhdGVyTWFya0Zyb20ob3B0aW9ucywgaXNEdXBsZXgsIGR1cGxleEtleSkge1xuICByZXR1cm4gb3B0aW9ucy5oaWdoV2F0ZXJNYXJrICE9IG51bGwgPyBvcHRpb25zLmhpZ2hXYXRlck1hcmsgOiBpc0R1cGxleCA/IG9wdGlvbnNbZHVwbGV4S2V5XSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGdldEhpZ2hXYXRlck1hcmsoc3RhdGUsIG9wdGlvbnMsIGR1cGxleEtleSwgaXNEdXBsZXgpIHtcbiAgdmFyIGh3bSA9IGhpZ2hXYXRlck1hcmtGcm9tKG9wdGlvbnMsIGlzRHVwbGV4LCBkdXBsZXhLZXkpO1xuXG4gIGlmIChod20gIT0gbnVsbCkge1xuICAgIGlmICghKGlzRmluaXRlKGh3bSkgJiYgTWF0aC5mbG9vcihod20pID09PSBod20pIHx8IGh3bSA8IDApIHtcbiAgICAgIHZhciBuYW1lID0gaXNEdXBsZXggPyBkdXBsZXhLZXkgOiAnaGlnaFdhdGVyTWFyayc7XG4gICAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfT1BUX1ZBTFVFKG5hbWUsIGh3bSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE1hdGguZmxvb3IoaHdtKTtcbiAgfSAvLyBEZWZhdWx0IHZhbHVlXG5cblxuICByZXR1cm4gc3RhdGUub2JqZWN0TW9kZSA/IDE2IDogMTYgKiAxMDI0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0SGlnaFdhdGVyTWFyazogZ2V0SGlnaFdhdGVyTWFya1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/state.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzPzQyOWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"./node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLWJyb3dzZXIuanM/ZTM3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzJyk7XG5leHBvcnRzLlN0cmVhbSA9IGV4cG9ydHM7XG5leHBvcnRzLlJlYWRhYmxlID0gZXhwb3J0cztcbmV4cG9ydHMuV3JpdGFibGUgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzJyk7XG5leHBvcnRzLkR1cGxleCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fZHVwbGV4LmpzJyk7XG5leHBvcnRzLlRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzJyk7XG5leHBvcnRzLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcycpO1xuZXhwb3J0cy5maW5pc2hlZCA9IHJlcXVpcmUoJy4vbGliL2ludGVybmFsL3N0cmVhbXMvZW5kLW9mLXN0cmVhbS5qcycpO1xuZXhwb3J0cy5waXBlbGluZSA9IHJlcXVpcmUoJy4vbGliL2ludGVybmFsL3N0cmVhbXMvcGlwZWxpbmUuanMnKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzPzg3MDciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIHNhZmUtYnVmZmVyLiBNSVQgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXG52YXIgYnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJylcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXG5cbi8vIGFsdGVybmF0aXZlIHRvIHVzaW5nIE9iamVjdC5rZXlzIGZvciBvbGQgYnJvd3NlcnNcbmZ1bmN0aW9uIGNvcHlQcm9wcyAoc3JjLCBkc3QpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykge1xuICAgIGRzdFtrZXldID0gc3JjW2tleV1cbiAgfVxufVxuaWYgKEJ1ZmZlci5mcm9tICYmIEJ1ZmZlci5hbGxvYyAmJiBCdWZmZXIuYWxsb2NVbnNhZmUgJiYgQnVmZmVyLmFsbG9jVW5zYWZlU2xvdykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGJ1ZmZlclxufSBlbHNlIHtcbiAgLy8gQ29weSBwcm9wZXJ0aWVzIGZyb20gcmVxdWlyZSgnYnVmZmVyJylcbiAgY29weVByb3BzKGJ1ZmZlciwgZXhwb3J0cylcbiAgZXhwb3J0cy5CdWZmZXIgPSBTYWZlQnVmZmVyXG59XG5cbmZ1bmN0aW9uIFNhZmVCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShCdWZmZXIucHJvdG90eXBlKVxuXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXG5jb3B5UHJvcHMoQnVmZmVyLCBTYWZlQnVmZmVyKVxuXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHZhciBidWYgPSBCdWZmZXIoc2l6ZSlcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICBidWYuZmlsbChmaWxsLCBlbmNvZGluZylcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmLmZpbGwoZmlsbClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYnVmLmZpbGwoMClcbiAgfVxuICByZXR1cm4gYnVmXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihzaXplKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gYnVmZmVyLlNsb3dCdWZmZXIoc2l6ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "./node_modules/stream-http/index.js":
/*!*******************************************!*\
  !*** ./node_modules/stream-http/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ClientRequest = __webpack_require__(/*! ./lib/request */ \"./node_modules/stream-http/lib/request.js\")\nvar response = __webpack_require__(/*! ./lib/response */ \"./node_modules/stream-http/lib/response.js\")\nvar extend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\")\nvar statusCodes = __webpack_require__(/*! builtin-status-codes */ \"./node_modules/builtin-status-codes/browser.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = __webpack_require__.g.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9pbmRleC5qcz85NDkwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBDbGllbnRSZXF1ZXN0ID0gcmVxdWlyZSgnLi9saWIvcmVxdWVzdCcpXG52YXIgcmVzcG9uc2UgPSByZXF1aXJlKCcuL2xpYi9yZXNwb25zZScpXG52YXIgZXh0ZW5kID0gcmVxdWlyZSgneHRlbmQnKVxudmFyIHN0YXR1c0NvZGVzID0gcmVxdWlyZSgnYnVpbHRpbi1zdGF0dXMtY29kZXMnKVxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG5cbnZhciBodHRwID0gZXhwb3J0c1xuXG5odHRwLnJlcXVlc3QgPSBmdW5jdGlvbiAob3B0cywgY2IpIHtcblx0aWYgKHR5cGVvZiBvcHRzID09PSAnc3RyaW5nJylcblx0XHRvcHRzID0gdXJsLnBhcnNlKG9wdHMpXG5cdGVsc2Vcblx0XHRvcHRzID0gZXh0ZW5kKG9wdHMpXG5cblx0Ly8gTm9ybWFsbHksIHRoZSBwYWdlIGlzIGxvYWRlZCBmcm9tIGh0dHAgb3IgaHR0cHMsIHNvIG5vdCBzcGVjaWZ5aW5nIGEgcHJvdG9jb2xcblx0Ly8gd2lsbCByZXN1bHQgaW4gYSAodmFsaWQpIHByb3RvY29sLXJlbGF0aXZlIHVybC4gSG93ZXZlciwgdGhpcyB3b24ndCB3b3JrIGlmXG5cdC8vIHRoZSBwcm90b2NvbCBpcyBzb21ldGhpbmcgZWxzZSwgbGlrZSAnZmlsZTonXG5cdHZhciBkZWZhdWx0UHJvdG9jb2wgPSBnbG9iYWwubG9jYXRpb24ucHJvdG9jb2wuc2VhcmNoKC9eaHR0cHM/OiQvKSA9PT0gLTEgPyAnaHR0cDonIDogJydcblxuXHR2YXIgcHJvdG9jb2wgPSBvcHRzLnByb3RvY29sIHx8IGRlZmF1bHRQcm90b2NvbFxuXHR2YXIgaG9zdCA9IG9wdHMuaG9zdG5hbWUgfHwgb3B0cy5ob3N0XG5cdHZhciBwb3J0ID0gb3B0cy5wb3J0XG5cdHZhciBwYXRoID0gb3B0cy5wYXRoIHx8ICcvJ1xuXG5cdC8vIE5lY2Vzc2FyeSBmb3IgSVB2NiBhZGRyZXNzZXNcblx0aWYgKGhvc3QgJiYgaG9zdC5pbmRleE9mKCc6JykgIT09IC0xKVxuXHRcdGhvc3QgPSAnWycgKyBob3N0ICsgJ10nXG5cblx0Ly8gVGhpcyBtYXkgYmUgYSByZWxhdGl2ZSB1cmwuIFRoZSBicm93c2VyIHNob3VsZCBhbHdheXMgYmUgYWJsZSB0byBpbnRlcnByZXQgaXQgY29ycmVjdGx5LlxuXHRvcHRzLnVybCA9IChob3N0ID8gKHByb3RvY29sICsgJy8vJyArIGhvc3QpIDogJycpICsgKHBvcnQgPyAnOicgKyBwb3J0IDogJycpICsgcGF0aFxuXHRvcHRzLm1ldGhvZCA9IChvcHRzLm1ldGhvZCB8fCAnR0VUJykudG9VcHBlckNhc2UoKVxuXHRvcHRzLmhlYWRlcnMgPSBvcHRzLmhlYWRlcnMgfHwge31cblxuXHQvLyBBbHNvIHZhbGlkIG9wdHMuYXV0aCwgb3B0cy5tb2RlXG5cblx0dmFyIHJlcSA9IG5ldyBDbGllbnRSZXF1ZXN0KG9wdHMpXG5cdGlmIChjYilcblx0XHRyZXEub24oJ3Jlc3BvbnNlJywgY2IpXG5cdHJldHVybiByZXFcbn1cblxuaHR0cC5nZXQgPSBmdW5jdGlvbiBnZXQgKG9wdHMsIGNiKSB7XG5cdHZhciByZXEgPSBodHRwLnJlcXVlc3Qob3B0cywgY2IpXG5cdHJlcS5lbmQoKVxuXHRyZXR1cm4gcmVxXG59XG5cbmh0dHAuQ2xpZW50UmVxdWVzdCA9IENsaWVudFJlcXVlc3Rcbmh0dHAuSW5jb21pbmdNZXNzYWdlID0gcmVzcG9uc2UuSW5jb21pbmdNZXNzYWdlXG5cbmh0dHAuQWdlbnQgPSBmdW5jdGlvbiAoKSB7fVxuaHR0cC5BZ2VudC5kZWZhdWx0TWF4U29ja2V0cyA9IDRcblxuaHR0cC5nbG9iYWxBZ2VudCA9IG5ldyBodHRwLkFnZW50KClcblxuaHR0cC5TVEFUVVNfQ09ERVMgPSBzdGF0dXNDb2Rlc1xuXG5odHRwLk1FVEhPRFMgPSBbXG5cdCdDSEVDS09VVCcsXG5cdCdDT05ORUNUJyxcblx0J0NPUFknLFxuXHQnREVMRVRFJyxcblx0J0dFVCcsXG5cdCdIRUFEJyxcblx0J0xPQ0snLFxuXHQnTS1TRUFSQ0gnLFxuXHQnTUVSR0UnLFxuXHQnTUtBQ1RJVklUWScsXG5cdCdNS0NPTCcsXG5cdCdNT1ZFJyxcblx0J05PVElGWScsXG5cdCdPUFRJT05TJyxcblx0J1BBVENIJyxcblx0J1BPU1QnLFxuXHQnUFJPUEZJTkQnLFxuXHQnUFJPUFBBVENIJyxcblx0J1BVUkdFJyxcblx0J1BVVCcsXG5cdCdSRVBPUlQnLFxuXHQnU0VBUkNIJyxcblx0J1NVQlNDUklCRScsXG5cdCdUUkFDRScsXG5cdCdVTkxPQ0snLFxuXHQnVU5TVUJTQ1JJQkUnXG5dIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/stream-http/index.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/capability.js":
/*!****************************************************!*\
  !*** ./node_modules/stream-http/lib/capability.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.fetch = isFunction(__webpack_require__.g.fetch) && isFunction(__webpack_require__.g.ReadableStream)\n\nexports.writableStream = isFunction(__webpack_require__.g.WritableStream)\n\nexports.abortController = isFunction(__webpack_require__.g.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (__webpack_require__.g.XMLHttpRequest) {\n\t\txhr = new __webpack_require__.g.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', __webpack_require__.g.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL2NhcGFiaWxpdHkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL2xpYi9jYXBhYmlsaXR5LmpzP2E5ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mZXRjaCA9IGlzRnVuY3Rpb24oZ2xvYmFsLmZldGNoKSAmJiBpc0Z1bmN0aW9uKGdsb2JhbC5SZWFkYWJsZVN0cmVhbSlcblxuZXhwb3J0cy53cml0YWJsZVN0cmVhbSA9IGlzRnVuY3Rpb24oZ2xvYmFsLldyaXRhYmxlU3RyZWFtKVxuXG5leHBvcnRzLmFib3J0Q29udHJvbGxlciA9IGlzRnVuY3Rpb24oZ2xvYmFsLkFib3J0Q29udHJvbGxlcilcblxuLy8gVGhlIHhociByZXF1ZXN0IHRvIGV4YW1wbGUuY29tIG1heSB2aW9sYXRlIHNvbWUgcmVzdHJpY3RpdmUgQ1NQIGNvbmZpZ3VyYXRpb25zLFxuLy8gc28gaWYgd2UncmUgcnVubmluZyBpbiBhIGJyb3dzZXIgdGhhdCBzdXBwb3J0cyBgZmV0Y2hgLCBhdm9pZCBjYWxsaW5nIGdldFhIUigpXG4vLyBhbmQgYXNzdW1lIHN1cHBvcnQgZm9yIGNlcnRhaW4gZmVhdHVyZXMgYmVsb3cuXG52YXIgeGhyXG5mdW5jdGlvbiBnZXRYSFIgKCkge1xuXHQvLyBDYWNoZSB0aGUgeGhyIHZhbHVlXG5cdGlmICh4aHIgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHhoclxuXG5cdGlmIChnbG9iYWwuWE1MSHR0cFJlcXVlc3QpIHtcblx0XHR4aHIgPSBuZXcgZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0KClcblx0XHQvLyBJZiBYRG9tYWluUmVxdWVzdCBpcyBhdmFpbGFibGUgKGllIG9ubHksIHdoZXJlIHhociBtaWdodCBub3Qgd29ya1xuXHRcdC8vIGNyb3NzIGRvbWFpbiksIHVzZSB0aGUgcGFnZSBsb2NhdGlvbi4gT3RoZXJ3aXNlIHVzZSBleGFtcGxlLmNvbVxuXHRcdC8vIE5vdGU6IHRoaXMgZG9lc24ndCBhY3R1YWxseSBtYWtlIGFuIGh0dHAgcmVxdWVzdC5cblx0XHR0cnkge1xuXHRcdFx0eGhyLm9wZW4oJ0dFVCcsIGdsb2JhbC5YRG9tYWluUmVxdWVzdCA/ICcvJyA6ICdodHRwczovL2V4YW1wbGUuY29tJylcblx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdHhociA9IG51bGxcblx0XHR9XG5cdH0gZWxzZSB7XG5cdFx0Ly8gU2VydmljZSB3b3JrZXJzIGRvbid0IGhhdmUgWEhSXG5cdFx0eGhyID0gbnVsbFxuXHR9XG5cdHJldHVybiB4aHJcbn1cblxuZnVuY3Rpb24gY2hlY2tUeXBlU3VwcG9ydCAodHlwZSkge1xuXHR2YXIgeGhyID0gZ2V0WEhSKClcblx0aWYgKCF4aHIpIHJldHVybiBmYWxzZVxuXHR0cnkge1xuXHRcdHhoci5yZXNwb25zZVR5cGUgPSB0eXBlXG5cdFx0cmV0dXJuIHhoci5yZXNwb25zZVR5cGUgPT09IHR5cGVcblx0fSBjYXRjaCAoZSkge31cblx0cmV0dXJuIGZhbHNlXG59XG5cbi8vIElmIGZldGNoIGlzIHN1cHBvcnRlZCwgdGhlbiBhcnJheWJ1ZmZlciB3aWxsIGJlIHN1cHBvcnRlZCB0b28uIFNraXAgY2FsbGluZ1xuLy8gY2hlY2tUeXBlU3VwcG9ydCgpLCBzaW5jZSB0aGF0IGNhbGxzIGdldFhIUigpLlxuZXhwb3J0cy5hcnJheWJ1ZmZlciA9IGV4cG9ydHMuZmV0Y2ggfHwgY2hlY2tUeXBlU3VwcG9ydCgnYXJyYXlidWZmZXInKVxuXG4vLyBUaGVzZSBuZXh0IHR3byB0ZXN0cyB1bmF2b2lkYWJseSBzaG93IHdhcm5pbmdzIGluIENocm9tZS4gU2luY2UgZmV0Y2ggd2lsbCBhbHdheXNcbi8vIGJlIHVzZWQgaWYgaXQncyBhdmFpbGFibGUsIGp1c3QgcmV0dXJuIGZhbHNlIGZvciB0aGVzZSB0byBhdm9pZCB0aGUgd2FybmluZ3MuXG5leHBvcnRzLm1zc3RyZWFtID0gIWV4cG9ydHMuZmV0Y2ggJiYgY2hlY2tUeXBlU3VwcG9ydCgnbXMtc3RyZWFtJylcbmV4cG9ydHMubW96Y2h1bmtlZGFycmF5YnVmZmVyID0gIWV4cG9ydHMuZmV0Y2ggJiYgY2hlY2tUeXBlU3VwcG9ydCgnbW96LWNodW5rZWQtYXJyYXlidWZmZXInKVxuXG4vLyBJZiBmZXRjaCBpcyBzdXBwb3J0ZWQsIHRoZW4gb3ZlcnJpZGVNaW1lVHlwZSB3aWxsIGJlIHN1cHBvcnRlZCB0b28uIFNraXAgY2FsbGluZ1xuLy8gZ2V0WEhSKCkuXG5leHBvcnRzLm92ZXJyaWRlTWltZVR5cGUgPSBleHBvcnRzLmZldGNoIHx8IChnZXRYSFIoKSA/IGlzRnVuY3Rpb24oZ2V0WEhSKCkub3ZlcnJpZGVNaW1lVHlwZSkgOiBmYWxzZSlcblxuZnVuY3Rpb24gaXNGdW5jdGlvbiAodmFsdWUpIHtcblx0cmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJ1xufVxuXG54aHIgPSBudWxsIC8vIEhlbHAgZ2NcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/capability.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/request.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-http/lib/request.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nvar capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar response = __webpack_require__(/*! ./response */ \"./node_modules/stream-http/lib/response.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/readable-stream/readable-browser.js\")\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = __webpack_require__.g.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\t__webpack_require__.g.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new __webpack_require__.g.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\t__webpack_require__.g.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\t__webpack_require__.g.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = __webpack_require__.g.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/request.js\n");

/***/ }),

/***/ "./node_modules/stream-http/lib/response.js":
/*!**************************************************!*\
  !*** ./node_modules/stream-http/lib/response.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nvar capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/readable-stream/readable-browser.js\")\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new __webpack_require__.g.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stream-http/lib/response.js\n");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer);\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaW5nX2RlY29kZXIvbGliL3N0cmluZ19kZWNvZGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9zdHJpbmdfZGVjb2Rlci9saWIvc3RyaW5nX2RlY29kZXIuanM/N2Q3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudmFyIGlzRW5jb2RpbmcgPSBCdWZmZXIuaXNFbmNvZGluZyB8fCBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcbiAgZW5jb2RpbmcgPSAnJyArIGVuY29kaW5nO1xuICBzd2l0Y2ggKGVuY29kaW5nICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoZXgnOmNhc2UgJ3V0ZjgnOmNhc2UgJ3V0Zi04JzpjYXNlICdhc2NpaSc6Y2FzZSAnYmluYXJ5JzpjYXNlICdiYXNlNjQnOmNhc2UgJ3VjczInOmNhc2UgJ3Vjcy0yJzpjYXNlICd1dGYxNmxlJzpjYXNlICd1dGYtMTZsZSc6Y2FzZSAncmF3JzpcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIF9ub3JtYWxpemVFbmNvZGluZyhlbmMpIHtcbiAgaWYgKCFlbmMpIHJldHVybiAndXRmOCc7XG4gIHZhciByZXRyaWVkO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIHN3aXRjaCAoZW5jKSB7XG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuICd1dGY4JztcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiAndXRmMTZsZSc7XG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuICdsYXRpbjEnO1xuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBlbmM7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAocmV0cmllZCkgcmV0dXJuOyAvLyB1bmRlZmluZWRcbiAgICAgICAgZW5jID0gKCcnICsgZW5jKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXRyaWVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIERvIG5vdCBjYWNoZSBgQnVmZmVyLmlzRW5jb2RpbmdgIHdoZW4gY2hlY2tpbmcgZW5jb2RpbmcgbmFtZXMgYXMgc29tZVxuLy8gbW9kdWxlcyBtb25rZXktcGF0Y2ggaXQgdG8gc3VwcG9ydCBhZGRpdGlvbmFsIGVuY29kaW5nc1xuZnVuY3Rpb24gbm9ybWFsaXplRW5jb2RpbmcoZW5jKSB7XG4gIHZhciBuZW5jID0gX25vcm1hbGl6ZUVuY29kaW5nKGVuYyk7XG4gIGlmICh0eXBlb2YgbmVuYyAhPT0gJ3N0cmluZycgJiYgKEJ1ZmZlci5pc0VuY29kaW5nID09PSBpc0VuY29kaW5nIHx8ICFpc0VuY29kaW5nKGVuYykpKSB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmMpO1xuICByZXR1cm4gbmVuYyB8fCBlbmM7XG59XG5cbi8vIFN0cmluZ0RlY29kZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBlZmZpY2llbnRseSBzcGxpdHRpbmcgYSBzZXJpZXMgb2Zcbi8vIGJ1ZmZlcnMgaW50byBhIHNlcmllcyBvZiBKUyBzdHJpbmdzIHdpdGhvdXQgYnJlYWtpbmcgYXBhcnQgbXVsdGktYnl0ZVxuLy8gY2hhcmFjdGVycy5cbmV4cG9ydHMuU3RyaW5nRGVjb2RlciA9IFN0cmluZ0RlY29kZXI7XG5mdW5jdGlvbiBTdHJpbmdEZWNvZGVyKGVuY29kaW5nKSB7XG4gIHRoaXMuZW5jb2RpbmcgPSBub3JtYWxpemVFbmNvZGluZyhlbmNvZGluZyk7XG4gIHZhciBuYjtcbiAgc3dpdGNoICh0aGlzLmVuY29kaW5nKSB7XG4gICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICB0aGlzLnRleHQgPSB1dGYxNlRleHQ7XG4gICAgICB0aGlzLmVuZCA9IHV0ZjE2RW5kO1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndXRmOCc6XG4gICAgICB0aGlzLmZpbGxMYXN0ID0gdXRmOEZpbGxMYXN0O1xuICAgICAgbmIgPSA0O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIHRoaXMudGV4dCA9IGJhc2U2NFRleHQ7XG4gICAgICB0aGlzLmVuZCA9IGJhc2U2NEVuZDtcbiAgICAgIG5iID0gMztcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aGlzLndyaXRlID0gc2ltcGxlV3JpdGU7XG4gICAgICB0aGlzLmVuZCA9IHNpbXBsZUVuZDtcbiAgICAgIHJldHVybjtcbiAgfVxuICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgdGhpcy5sYXN0VG90YWwgPSAwO1xuICB0aGlzLmxhc3RDaGFyID0gQnVmZmVyLmFsbG9jVW5zYWZlKG5iKTtcbn1cblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmIChidWYubGVuZ3RoID09PSAwKSByZXR1cm4gJyc7XG4gIHZhciByO1xuICB2YXIgaTtcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHtcbiAgICByID0gdGhpcy5maWxsTGFzdChidWYpO1xuICAgIGlmIChyID09PSB1bmRlZmluZWQpIHJldHVybiAnJztcbiAgICBpID0gdGhpcy5sYXN0TmVlZDtcbiAgICB0aGlzLmxhc3ROZWVkID0gMDtcbiAgfSBlbHNlIHtcbiAgICBpID0gMDtcbiAgfVxuICBpZiAoaSA8IGJ1Zi5sZW5ndGgpIHJldHVybiByID8gciArIHRoaXMudGV4dChidWYsIGkpIDogdGhpcy50ZXh0KGJ1ZiwgaSk7XG4gIHJldHVybiByIHx8ICcnO1xufTtcblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZW5kID0gdXRmOEVuZDtcblxuLy8gUmV0dXJucyBvbmx5IGNvbXBsZXRlIGNoYXJhY3RlcnMgaW4gYSBCdWZmZXJcblN0cmluZ0RlY29kZXIucHJvdG90eXBlLnRleHQgPSB1dGY4VGV4dDtcblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBwYXJ0aWFsIG5vbi1VVEYtOCBjaGFyYWN0ZXIgdXNpbmcgYnl0ZXMgZnJvbSBhIEJ1ZmZlclxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZmlsbExhc3QgPSBmdW5jdGlvbiAoYnVmKSB7XG4gIGlmICh0aGlzLmxhc3ROZWVkIDw9IGJ1Zi5sZW5ndGgpIHtcbiAgICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIHRoaXMubGFzdE5lZWQpO1xuICAgIHJldHVybiB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsIDAsIHRoaXMubGFzdFRvdGFsKTtcbiAgfVxuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59O1xuXG4vLyBDaGVja3MgdGhlIHR5cGUgb2YgYSBVVEYtOCBieXRlLCB3aGV0aGVyIGl0J3MgQVNDSUksIGEgbGVhZGluZyBieXRlLCBvciBhXG4vLyBjb250aW51YXRpb24gYnl0ZS4gSWYgYW4gaW52YWxpZCBieXRlIGlzIGRldGVjdGVkLCAtMiBpcyByZXR1cm5lZC5cbmZ1bmN0aW9uIHV0ZjhDaGVja0J5dGUoYnl0ZSkge1xuICBpZiAoYnl0ZSA8PSAweDdGKSByZXR1cm4gMDtlbHNlIGlmIChieXRlID4+IDUgPT09IDB4MDYpIHJldHVybiAyO2Vsc2UgaWYgKGJ5dGUgPj4gNCA9PT0gMHgwRSkgcmV0dXJuIDM7ZWxzZSBpZiAoYnl0ZSA+PiAzID09PSAweDFFKSByZXR1cm4gNDtcbiAgcmV0dXJuIGJ5dGUgPj4gNiA9PT0gMHgwMiA/IC0xIDogLTI7XG59XG5cbi8vIENoZWNrcyBhdCBtb3N0IDMgYnl0ZXMgYXQgdGhlIGVuZCBvZiBhIEJ1ZmZlciBpbiBvcmRlciB0byBkZXRlY3QgYW5cbi8vIGluY29tcGxldGUgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIuIFRoZSB0b3RhbCBudW1iZXIgb2YgYnl0ZXMgKDIsIDMsIG9yIDQpXG4vLyBuZWVkZWQgdG8gY29tcGxldGUgdGhlIFVURi04IGNoYXJhY3RlciAoaWYgYXBwbGljYWJsZSkgYXJlIHJldHVybmVkLlxuZnVuY3Rpb24gdXRmOENoZWNrSW5jb21wbGV0ZShzZWxmLCBidWYsIGkpIHtcbiAgdmFyIGogPSBidWYubGVuZ3RoIC0gMTtcbiAgaWYgKGogPCBpKSByZXR1cm4gMDtcbiAgdmFyIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDE7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHNlbGYubGFzdE5lZWQgPSBuYiAtIDI7XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIGlmICgtLWogPCBpIHx8IG5iID09PSAtMikgcmV0dXJuIDA7XG4gIG5iID0gdXRmOENoZWNrQnl0ZShidWZbal0pO1xuICBpZiAobmIgPj0gMCkge1xuICAgIGlmIChuYiA+IDApIHtcbiAgICAgIGlmIChuYiA9PT0gMikgbmIgPSAwO2Vsc2Ugc2VsZi5sYXN0TmVlZCA9IG5iIC0gMztcbiAgICB9XG4gICAgcmV0dXJuIG5iO1xuICB9XG4gIHJldHVybiAwO1xufVxuXG4vLyBWYWxpZGF0ZXMgYXMgbWFueSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgbXVsdGktYnl0ZSBVVEYtOCBjaGFyYWN0ZXIgYXNcbi8vIG5lZWRlZCBvciBhcmUgYXZhaWxhYmxlLiBJZiB3ZSBzZWUgYSBub24tY29udGludWF0aW9uIGJ5dGUgd2hlcmUgd2UgZXhwZWN0XG4vLyBvbmUsIHdlIFwicmVwbGFjZVwiIHRoZSB2YWxpZGF0ZWQgY29udGludWF0aW9uIGJ5dGVzIHdlJ3ZlIHNlZW4gc28gZmFyIHdpdGhcbi8vIGEgc2luZ2xlIFVURi04IHJlcGxhY2VtZW50IGNoYXJhY3RlciAoJ1xcdWZmZmQnKSwgdG8gbWF0Y2ggdjgncyBVVEYtOCBkZWNvZGluZ1xuLy8gYmVoYXZpb3IuIFRoZSBjb250aW51YXRpb24gYnl0ZSBjaGVjayBpcyBpbmNsdWRlZCB0aHJlZSB0aW1lcyBpbiB0aGUgY2FzZVxuLy8gd2hlcmUgYWxsIG9mIHRoZSBjb250aW51YXRpb24gYnl0ZXMgZm9yIGEgY2hhcmFjdGVyIGV4aXN0IGluIHRoZSBzYW1lIGJ1ZmZlci5cbi8vIEl0IGlzIGFsc28gZG9uZSB0aGlzIHdheSBhcyBhIHNsaWdodCBwZXJmb3JtYW5jZSBpbmNyZWFzZSBpbnN0ZWFkIG9mIHVzaW5nIGFcbi8vIGxvb3AuXG5mdW5jdGlvbiB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHNlbGYsIGJ1ZiwgcCkge1xuICBpZiAoKGJ1ZlswXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgc2VsZi5sYXN0TmVlZCA9IDA7XG4gICAgcmV0dXJuICdcXHVmZmZkJztcbiAgfVxuICBpZiAoc2VsZi5sYXN0TmVlZCA+IDEgJiYgYnVmLmxlbmd0aCA+IDEpIHtcbiAgICBpZiAoKGJ1ZlsxXSAmIDB4QzApICE9PSAweDgwKSB7XG4gICAgICBzZWxmLmxhc3ROZWVkID0gMTtcbiAgICAgIHJldHVybiAnXFx1ZmZmZCc7XG4gICAgfVxuICAgIGlmIChzZWxmLmxhc3ROZWVkID4gMiAmJiBidWYubGVuZ3RoID4gMikge1xuICAgICAgaWYgKChidWZbMl0gJiAweEMwKSAhPT0gMHg4MCkge1xuICAgICAgICBzZWxmLmxhc3ROZWVkID0gMjtcbiAgICAgICAgcmV0dXJuICdcXHVmZmZkJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gQXR0ZW1wdHMgdG8gY29tcGxldGUgYSBtdWx0aS1ieXRlIFVURi04IGNoYXJhY3RlciB1c2luZyBieXRlcyBmcm9tIGEgQnVmZmVyLlxuZnVuY3Rpb24gdXRmOEZpbGxMYXN0KGJ1Zikge1xuICB2YXIgcCA9IHRoaXMubGFzdFRvdGFsIC0gdGhpcy5sYXN0TmVlZDtcbiAgdmFyIHIgPSB1dGY4Q2hlY2tFeHRyYUJ5dGVzKHRoaXMsIGJ1ZiwgcCk7XG4gIGlmIChyICE9PSB1bmRlZmluZWQpIHJldHVybiByO1xuICBpZiAodGhpcy5sYXN0TmVlZCA8PSBidWYubGVuZ3RoKSB7XG4gICAgYnVmLmNvcHkodGhpcy5sYXN0Q2hhciwgcCwgMCwgdGhpcy5sYXN0TmVlZCk7XG4gICAgcmV0dXJuIHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywgMCwgdGhpcy5sYXN0VG90YWwpO1xuICB9XG4gIGJ1Zi5jb3B5KHRoaXMubGFzdENoYXIsIHAsIDAsIGJ1Zi5sZW5ndGgpO1xuICB0aGlzLmxhc3ROZWVkIC09IGJ1Zi5sZW5ndGg7XG59XG5cbi8vIFJldHVybnMgYWxsIGNvbXBsZXRlIFVURi04IGNoYXJhY3RlcnMgaW4gYSBCdWZmZXIuIElmIHRoZSBCdWZmZXIgZW5kZWQgb24gYVxuLy8gcGFydGlhbCBjaGFyYWN0ZXIsIHRoZSBjaGFyYWN0ZXIncyBieXRlcyBhcmUgYnVmZmVyZWQgdW50aWwgdGhlIHJlcXVpcmVkXG4vLyBudW1iZXIgb2YgYnl0ZXMgYXJlIGF2YWlsYWJsZS5cbmZ1bmN0aW9uIHV0ZjhUZXh0KGJ1ZiwgaSkge1xuICB2YXIgdG90YWwgPSB1dGY4Q2hlY2tJbmNvbXBsZXRlKHRoaXMsIGJ1ZiwgaSk7XG4gIGlmICghdGhpcy5sYXN0TmVlZCkgcmV0dXJuIGJ1Zi50b1N0cmluZygndXRmOCcsIGkpO1xuICB0aGlzLmxhc3RUb3RhbCA9IHRvdGFsO1xuICB2YXIgZW5kID0gYnVmLmxlbmd0aCAtICh0b3RhbCAtIHRoaXMubGFzdE5lZWQpO1xuICBidWYuY29weSh0aGlzLmxhc3RDaGFyLCAwLCBlbmQpO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGY4JywgaSwgZW5kKTtcbn1cblxuLy8gRm9yIFVURi04LCBhIHJlcGxhY2VtZW50IGNoYXJhY3RlciBpcyBhZGRlZCB3aGVuIGVuZGluZyBvbiBhIHBhcnRpYWxcbi8vIGNoYXJhY3Rlci5cbmZ1bmN0aW9uIHV0ZjhFbmQoYnVmKSB7XG4gIHZhciByID0gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbiAgaWYgKHRoaXMubGFzdE5lZWQpIHJldHVybiByICsgJ1xcdWZmZmQnO1xuICByZXR1cm4gcjtcbn1cblxuLy8gVVRGLTE2TEUgdHlwaWNhbGx5IG5lZWRzIHR3byBieXRlcyBwZXIgY2hhcmFjdGVyLCBidXQgZXZlbiBpZiB3ZSBoYXZlIGFuIGV2ZW5cbi8vIG51bWJlciBvZiBieXRlcyBhdmFpbGFibGUsIHdlIG5lZWQgdG8gY2hlY2sgaWYgd2UgZW5kIG9uIGEgbGVhZGluZy9oaWdoXG4vLyBzdXJyb2dhdGUuIEluIHRoYXQgY2FzZSwgd2UgbmVlZCB0byB3YWl0IGZvciB0aGUgbmV4dCB0d28gYnl0ZXMgaW4gb3JkZXIgdG9cbi8vIGRlY29kZSB0aGUgbGFzdCBjaGFyYWN0ZXIgcHJvcGVybHkuXG5mdW5jdGlvbiB1dGYxNlRleHQoYnVmLCBpKSB7XG4gIGlmICgoYnVmLmxlbmd0aCAtIGkpICUgMiA9PT0gMCkge1xuICAgIHZhciByID0gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSk7XG4gICAgaWYgKHIpIHtcbiAgICAgIHZhciBjID0gci5jaGFyQ29kZUF0KHIubGVuZ3RoIC0gMSk7XG4gICAgICBpZiAoYyA+PSAweEQ4MDAgJiYgYyA8PSAweERCRkYpIHtcbiAgICAgICAgdGhpcy5sYXN0TmVlZCA9IDI7XG4gICAgICAgIHRoaXMubGFzdFRvdGFsID0gNDtcbiAgICAgICAgdGhpcy5sYXN0Q2hhclswXSA9IGJ1ZltidWYubGVuZ3RoIC0gMl07XG4gICAgICAgIHRoaXMubGFzdENoYXJbMV0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICAgICAgICByZXR1cm4gci5zbGljZSgwLCAtMSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG4gIHRoaXMubGFzdE5lZWQgPSAxO1xuICB0aGlzLmxhc3RUb3RhbCA9IDI7XG4gIHRoaXMubGFzdENoYXJbMF0gPSBidWZbYnVmLmxlbmd0aCAtIDFdO1xuICByZXR1cm4gYnVmLnRvU3RyaW5nKCd1dGYxNmxlJywgaSwgYnVmLmxlbmd0aCAtIDEpO1xufVxuXG4vLyBGb3IgVVRGLTE2TEUgd2UgZG8gbm90IGV4cGxpY2l0bHkgYXBwZW5kIHNwZWNpYWwgcmVwbGFjZW1lbnQgY2hhcmFjdGVycyBpZiB3ZVxuLy8gZW5kIG9uIGEgcGFydGlhbCBjaGFyYWN0ZXIsIHdlIHNpbXBseSBsZXQgdjggaGFuZGxlIHRoYXQuXG5mdW5jdGlvbiB1dGYxNkVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkge1xuICAgIHZhciBlbmQgPSB0aGlzLmxhc3RUb3RhbCAtIHRoaXMubGFzdE5lZWQ7XG4gICAgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCd1dGYxNmxlJywgMCwgZW5kKTtcbiAgfVxuICByZXR1cm4gcjtcbn1cblxuZnVuY3Rpb24gYmFzZTY0VGV4dChidWYsIGkpIHtcbiAgdmFyIG4gPSAoYnVmLmxlbmd0aCAtIGkpICUgMztcbiAgaWYgKG4gPT09IDApIHJldHVybiBidWYudG9TdHJpbmcoJ2Jhc2U2NCcsIGkpO1xuICB0aGlzLmxhc3ROZWVkID0gMyAtIG47XG4gIHRoaXMubGFzdFRvdGFsID0gMztcbiAgaWYgKG4gPT09IDEpIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmxhc3RDaGFyWzBdID0gYnVmW2J1Zi5sZW5ndGggLSAyXTtcbiAgICB0aGlzLmxhc3RDaGFyWzFdID0gYnVmW2J1Zi5sZW5ndGggLSAxXTtcbiAgfVxuICByZXR1cm4gYnVmLnRvU3RyaW5nKCdiYXNlNjQnLCBpLCBidWYubGVuZ3RoIC0gbik7XG59XG5cbmZ1bmN0aW9uIGJhc2U2NEVuZChidWYpIHtcbiAgdmFyIHIgPSBidWYgJiYgYnVmLmxlbmd0aCA/IHRoaXMud3JpdGUoYnVmKSA6ICcnO1xuICBpZiAodGhpcy5sYXN0TmVlZCkgcmV0dXJuIHIgKyB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKCdiYXNlNjQnLCAwLCAzIC0gdGhpcy5sYXN0TmVlZCk7XG4gIHJldHVybiByO1xufVxuXG4vLyBQYXNzIGJ5dGVzIG9uIHRocm91Z2ggZm9yIHNpbmdsZS1ieXRlIGVuY29kaW5ncyAoZS5nLiBhc2NpaSwgbGF0aW4xLCBoZXgpXG5mdW5jdGlvbiBzaW1wbGVXcml0ZShidWYpIHtcbiAgcmV0dXJuIGJ1Zi50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbn1cblxuZnVuY3Rpb24gc2ltcGxlRW5kKGJ1Zikge1xuICByZXR1cm4gYnVmICYmIGJ1Zi5sZW5ndGggPyB0aGlzLndyaXRlKGJ1ZikgOiAnJztcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/string_decoder/lib/string_decoder.js\n");

/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(/*! punycode */ \"./node_modules/punycode/punycode.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/url/util.js\");\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(/*! querystring */ \"./node_modules/querystring/index.js\");\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/url/url.js\n");

/***/ }),

/***/ "./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy91cmwvdXRpbC5qcz8zNWU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzU3RyaW5nOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xuICB9LFxuICBpc09iamVjdDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbiAgfSxcbiAgaXNOdWxsT3JVbmRlZmluZWQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/url/util.js\n");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!__webpack_require__.g.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = __webpack_require__.g.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC1kZXByZWNhdGUvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL3V0aWwtZGVwcmVjYXRlL2Jyb3dzZXIuanM/YjdkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGU7XG5cbi8qKlxuICogTWFyayB0aGF0IGEgbWV0aG9kIHNob3VsZCBub3QgYmUgdXNlZC5cbiAqIFJldHVybnMgYSBtb2RpZmllZCBmdW5jdGlvbiB3aGljaCB3YXJucyBvbmNlIGJ5IGRlZmF1bHQuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS5ub0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG4gKlxuICogSWYgYGxvY2FsU3RvcmFnZS50aHJvd0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGRlcHJlY2F0ZWQgZnVuY3Rpb25zXG4gKiB3aWxsIHRocm93IGFuIEVycm9yIHdoZW4gaW52b2tlZC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRyYWNlRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgaW52b2tlIGBjb25zb2xlLnRyYWNlKClgIGluc3RlYWQgb2YgYGNvbnNvbGUuZXJyb3IoKWAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0aGUgZnVuY3Rpb24gdG8gZGVwcmVjYXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gbXNnIC0gdGhlIHN0cmluZyB0byBwcmludCB0byB0aGUgY29uc29sZSB3aGVuIGBmbmAgaXMgaW52b2tlZFxuICogQHJldHVybnMge0Z1bmN0aW9ufSBhIG5ldyBcImRlcHJlY2F0ZWRcIiB2ZXJzaW9uIG9mIGBmbmBcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGVwcmVjYXRlIChmbiwgbXNnKSB7XG4gIGlmIChjb25maWcoJ25vRGVwcmVjYXRpb24nKSkge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHZhciB3YXJuZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gZGVwcmVjYXRlZCgpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgaWYgKGNvbmZpZygndGhyb3dEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChjb25maWcoJ3RyYWNlRGVwcmVjYXRpb24nKSkge1xuICAgICAgICBjb25zb2xlLnRyYWNlKG1zZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLndhcm4obXNnKTtcbiAgICAgIH1cbiAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGBsb2NhbFN0b3JhZ2VgIGZvciBib29sZWFuIHZhbHVlcyBmb3IgdGhlIGdpdmVuIGBuYW1lYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb25maWcgKG5hbWUpIHtcbiAgLy8gYWNjZXNzaW5nIGdsb2JhbC5sb2NhbFN0b3JhZ2UgY2FuIHRyaWdnZXIgYSBET01FeGNlcHRpb24gaW4gc2FuZGJveGVkIGlmcmFtZXNcbiAgdHJ5IHtcbiAgICBpZiAoIWdsb2JhbC5sb2NhbFN0b3JhZ2UpIHJldHVybiBmYWxzZTtcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdmFsID0gZ2xvYmFsLmxvY2FsU3RvcmFnZVtuYW1lXTtcbiAgaWYgKG51bGwgPT0gdmFsKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBTdHJpbmcodmFsKS50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/util-deprecate/browser.js\n");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzPzUzYTgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xtend/immutable.js\n");

/***/ }),

/***/ "@decentology/hyperverse":
/*!******************************************!*\
  !*** external "@decentology/hyperverse" ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__decentology_hyperverse__;

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "?ed1b":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?d17e":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz85YjMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzPzI0OTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _asyncToGenerator)\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZWNlbnRvbG9neS9oeXBlcnZlcnNlLWZsb3ctdHJpYmVzLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanM/NjhjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG5cbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTtcbiAgICAgIH1cblxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz9lMjE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcz9kOWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgdmFyIF9pID0gYXJyID09IG51bGwgPyBudWxsIDogdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdO1xuXG4gIGlmIChfaSA9PSBudWxsKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuXG4gIHZhciBfcywgX2U7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanM/Nzg3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\");\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit.js */ \"./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\");\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\");\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ \"./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\");\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz9hNTA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _taggedTemplateLiteral)\n/* harmony export */ });\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlY2VudG9sb2d5L2h5cGVydmVyc2UtZmxvdy10cmliZXMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsLmpzP2M1YmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChzdHJpbmdzLCByYXcpIHtcbiAgaWYgKCFyYXcpIHtcbiAgICByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywge1xuICAgIHJhdzoge1xuICAgICAgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KVxuICAgIH1cbiAgfSkpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVjZW50b2xvZ3kvaHlwZXJ2ZXJzZS1mbG93LXRyaWJlcy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcz8wMjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheUxpa2VUb0FycmF5IGZyb20gXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./source/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});